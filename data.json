{"entities": [{"entityId": "4SDSNSrjBbo", "entityType": "query", "info": {"name": "test", "slug": "w4SDSNSrjBbo", "version": 0, "content": "", "dashboardRows": [], "folderId": "Zf2k4GLJ", "folderName": "Getting Started Tutorials", "folderType": "list", "folderUrl": "/qtmrtgh/tq29126/#/getting-started-tutorials-fZf2k4GLJ", "folderSlug": "getting-started-tutorials-fZf2k4GLJ", "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-23T14:28:28.785067Z", "created": "2024-03-02T04:22:58.494436Z", "viewed": "2024-03-23T14:27:55.036256Z", "queryLanguage": "sql", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/w4SDSNSrjBbo#query"}, "match": null}, {"entityId": "1R76n41a2ek", "entityType": "query", "info": {"name": "NEW_SQL_WS", "slug": "w1R76n41a2ek", "version": 0, "content": "", "dashboardRows": [], "folderId": "4W6KRLKC", "folderName": "FOLDER-TEST", "folderType": "list", "folderUrl": "/qtmrtgh/tq29126/#/folder-test-f4W6KRLKC", "folderSlug": "folder-test-f4W6KRLKC", "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-23T13:11:26.568628Z", "created": "2024-03-23T13:03:40.982149Z", "viewed": "2024-03-23T13:06:20.639282Z", "queryLanguage": "sql", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/w1R76n41a2ek#query"}, "match": null}, {"entityId": "OQAyRdfc1y", "entityType": "query", "info": {"name": "2024-03-15 7:36pm", "slug": "wOQAyRdfc1y", "version": 0, "content": "", "dashboardRows": [], "folderId": null, "folderName": null, "folderType": null, "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-15T14:38:30.035003Z", "created": "2024-03-15T13:51:32.636939Z", "viewed": "2024-03-15T13:51:33.126422Z", "queryLanguage": "python", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/wOQAyRdfc1y#query"}, "match": null}, {"entityId": "1nZ3VDPBUoI", "entityType": "query", "info": {"name": "Load sample data with SQL from S3 bucket", "slug": "w1nZ3VDPBUoI", "version": 0, "content": "", "dashboardRows": [], "folderId": "Zf2k4GLJ", "folderName": "Getting Started Tutorials", "folderType": "list", "folderUrl": "/qtmrtgh/tq29126/#/getting-started-tutorials-fZf2k4GLJ", "folderSlug": "getting-started-tutorials-fZf2k4GLJ", "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-02T04:22:58.64073Z", "created": "2024-03-02T03:11:16.457609Z", "viewed": "2024-03-02T04:22:51.625371Z", "queryLanguage": "sql", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/w1nZ3VDPBUoI#query"}, "match": null}, {"entityId": "2ifBlp1Rt2w", "entityType": "query", "info": {"name": "Load sample data with Python from S3 bucket", "slug": "w2ifBlp1Rt2w", "version": 0, "content": "", "dashboardRows": [], "folderId": "Zf2k4GLJ", "folderName": "Getting Started Tutorials", "folderType": "list", "folderUrl": "/qtmrtgh/tq29126/#/getting-started-tutorials-fZf2k4GLJ", "folderSlug": "getting-started-tutorials-fZf2k4GLJ", "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-02T03:11:16.43995Z", "created": "2024-03-02T03:11:16.384276Z", "viewed": null, "queryLanguage": "python", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/w2ifBlp1Rt2w#query"}, "match": null}, {"entityId": "138mRchnrAa", "entityType": "query", "info": {"name": "[Template] Adding a user and granting roles", "slug": "w138mRchnrAa", "version": 0, "content": "", "dashboardRows": [], "folderId": "Zf2k4GLJ", "folderName": "Getting Started Tutorials", "folderType": "list", "folderUrl": "/qtmrtgh/tq29126/#/getting-started-tutorials-fZf2k4GLJ", "folderSlug": "getting-started-tutorials-fZf2k4GLJ", "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-02T03:11:16.3674Z", "created": "2024-03-02T03:11:16.313188Z", "viewed": null, "queryLanguage": "sql", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/w138mRchnrAa#query"}, "match": null}, {"entityId": "29A8xSHCrC0", "entityType": "query", "info": {"name": "Sample queries on TPC-H data", "slug": "w29A8xSHCrC0", "version": 0, "content": "", "dashboardRows": [], "folderId": "HF2dREvK", "folderName": "Benchmarking Tutorials", "folderType": "list", "folderUrl": "/qtmrtgh/tq29126/#/benchmarking-tutorials-fHF2dREvK", "folderSlug": "benchmarking-tutorials-fHF2dREvK", "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-02T03:11:16.277872Z", "created": "2024-03-02T03:11:16.223948Z", "viewed": null, "queryLanguage": "sql", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/w29A8xSHCrC0#query"}, "match": null}, {"entityId": "YRpdV0ju00", "entityType": "query", "info": {"name": "Sample queries on TPC-DS data", "slug": "wYRpdV0ju00", "version": 0, "content": "", "dashboardRows": [], "folderId": "HF2dREvK", "folderName": "Benchmarking Tutorials", "folderType": "list", "folderUrl": "/qtmrtgh/tq29126/#/benchmarking-tutorials-fHF2dREvK", "folderSlug": "benchmarking-tutorials-fHF2dREvK", "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-02T03:11:16.192912Z", "created": "2024-03-02T03:11:16.131672Z", "viewed": null, "queryLanguage": "sql", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/wYRpdV0ju00#query"}, "match": null}, {"entityId": "1UmD56J47hm", "entityType": "query", "info": {"name": "TPC-DS 10TB Complete Query Test", "slug": "w1UmD56J47hm", "version": 0, "content": "", "dashboardRows": [], "folderId": "HF2dREvK", "folderName": "Benchmarking Tutorials", "folderType": "list", "folderUrl": "/qtmrtgh/tq29126/#/benchmarking-tutorials-fHF2dREvK", "folderSlug": "benchmarking-tutorials-fHF2dREvK", "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-02T03:11:16.103188Z", "created": "2024-03-02T03:11:16.042426Z", "viewed": null, "queryLanguage": "sql", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/w1UmD56J47hm#query"}, "match": null}, {"entityId": "1btyFdjn8lA", "entityType": "query", "info": {"name": "TPC-DS 100TB Complete Query Test", "slug": "w1btyFdjn8lA", "version": 0, "content": "", "dashboardRows": [], "folderId": "HF2dREvK", "folderName": "Benchmarking Tutorials", "folderType": "list", "folderUrl": "/qtmrtgh/tq29126/#/benchmarking-tutorials-fHF2dREvK", "folderSlug": "benchmarking-tutorials-fHF2dREvK", "visibility": "private", "ownerId": 505987850600, "modified": "2024-03-02T03:11:16.011303Z", "created": "2024-03-02T03:11:15.948574Z", "viewed": null, "queryLanguage": "sql", "role": "ACCOUNTADMIN", "url": "/qtmrtgh/tq29126/w1btyFdjn8lA#query"}, "match": null}], "hasRecentEntities": true, "models": {"folders": {"4W6KRLKC": {"id": "4W6KRLKC", "orgId": "202346043869", "name": "FOLDER-TEST", "ownerId": "505987850600", "type": "list", "visibility": "private", "refreshing": false, "refreshed": "2024-03-23T13:03:38.22356Z", "modified": "2024-03-23T13:03:38.22356Z", "settings": {"dashboard": {"rows": null, "manualRefresh": false, "context": {"role": "", "warehouse": "", "database": "", "schema": "", "secondaryRoles": ""}}, "unsavedParams": null}, "paramRefs": [], "isImported": false, "isRefreshDead": false, "lastRefreshJobId": null, "hbVersion": null, "slug": "folder-test-f4W6KRLKC", "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/#/folder-test-f4W6KRLKC", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "", "database": "", "schema": "", "secondaryRoles": "NONE"}}, "HF2dREvK": {"id": "HF2dREvK", "orgId": "202346043869", "name": "Benchmarking Tutorials", "ownerId": "505987850600", "type": "list", "visibility": "private", "refreshing": false, "refreshed": "2024-03-02T03:11:15.935838Z", "modified": "2024-03-02T03:11:15.935838Z", "settings": {"dashboard": {"rows": null, "manualRefresh": false, "context": {"role": "", "warehouse": "", "database": "", "schema": "", "secondaryRoles": ""}}, "unsavedParams": null}, "paramRefs": [], "isImported": false, "isRefreshDead": false, "lastRefreshJobId": null, "hbVersion": null, "slug": "benchmarking-tutorials-fHF2dREvK", "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/#/benchmarking-tutorials-fHF2dREvK", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "", "database": "", "schema": "", "secondaryRoles": "NONE"}}, "Zf2k4GLJ": {"id": "Zf2k4GLJ", "orgId": "202346043869", "name": "Getting Started Tutorials", "ownerId": "505987850600", "type": "list", "visibility": "private", "refreshing": false, "refreshed": "2024-03-02T03:11:16.303133Z", "modified": "2024-03-02T03:11:16.303133Z", "settings": {"dashboard": {"rows": null, "manualRefresh": false, "context": {"role": "", "warehouse": "", "database": "", "schema": "", "secondaryRoles": ""}}, "unsavedParams": null}, "paramRefs": [], "isImported": false, "isRefreshDead": false, "lastRefreshJobId": null, "hbVersion": null, "slug": "getting-started-tutorials-fZf2k4GLJ", "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/#/getting-started-tutorials-fZf2k4GLJ", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "", "database": "", "schema": "", "secondaryRoles": "NONE"}}}, "queries": {"138mRchnrAa": {"snowflakeRequestId": null, "snowflakeQueryId": "", "query": "/*--\nIn this Worksheet we will walk through creating a User in Snowflake.\n\nFor the User we will provide grants to a defined default role and default warehouse\nand then walk through viewing all other users and roles in our account.\n\nTo conclude, we will drop the created User.\n--*/\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 1: To start, we first must set our Role context\n        -- USE ROLE: https://docs.snowflake.com/en/sql-reference/sql/use-role\n        -- System-Defined Roles: https://docs.snowflake.com/en/user-guide/security-access-control-overview#system-defined-roles\n-------------------------------------------------------------------------------------------\n\n--> To run a single query, place your cursor in the query editor and select the Run button (\u2318-Return).\n--> To run the entire worksheet, select 'Run All' from the dropdown next to the Run button (\u2318-Shift-Return).\n\n---> set our Role context\n USE ROLE USERADMIN;\n\n-------------------------------------------------------------------------------------------\n    -- Step 2: Create our User\n        -- CREATE USER: https://docs.snowflake.com/en/sql-reference/sql/create-user\n-------------------------------------------------------------------------------------------\n\n---> now let's create a User using various available parameters.\n    -- NOTE: please fill out each section below before executing the query\n\nCREATE OR REPLACE USER <insert user name here> -- adjust user name\nPASSWORD = '' -- add a secure password\nLOGIN_NAME = '' -- add a login name\nFIRST_NAME = '' -- add user's first name\nLAST_NAME = '' -- add user's last name\nEMAIL = '' -- add user's email \nMUST_CHANGE_PASSWORD = true -- ensures a password reset on first login\nDEFAULT_WAREHOUSE = COMPUTE_WH; -- set default warehouse to COMPUTE_WH\n\n    \n/*--\nWith the User created, send the following information in a secure manner\nto whomever the User is created for, so that they can access this Snowflake account:\n  --> Snowflake Account URL: This is the Snowflake account link that they'll need to login. You can find this link at the top of your browser:(ex: https://app.snowflake.com/xxxxxxx/xxxxxxxx/)\n  --> LOGIN_NAME: from above\n  --> PASSWORD: from above\n--*/\n\n-------------------------------------------------------------------------------------------\n    -- Step 3: Grant access to a Role and Warehouse for our User\n        -- USE ROLE: https://docs.snowflake.com/en/sql-reference/sql/use-role\n        -- GRANT ROLE: https://docs.snowflake.com/en/sql-reference/sql/grant-role\n        -- GRANT <privileges>: https://docs.snowflake.com/en/sql-reference/sql/grant-privilege\n-------------------------------------------------------------------------------------------\n\n---> with the User created, let's use our SECURITYADMIN role to grant the SYSADMIN role and COMPUTE_WH warehouse to it\nUSE ROLE SECURITYADMIN;\n\n    /*--\n      \u2022 Granting a role to another role creates a \u201cparent-child\u201d relationship between the roles (also referred to as a role hierarchy).\n      \u2022 Granting a role to a user enables the user to perform all operations allowed by the role (through the access privileges granted to the role).\n\n        NOTE: The SYSADMIN role has privileges to create warehouses, databases, and database objects in an account and grant those privileges to other roles.\n        Only grant this role to Users who should have these privileges. You can view other system-defined roles in the documentation below:\n            \u2022 https://docs.snowflake.com/en/user-guide/security-access-control-overview#label-access-control-overview-roles-system\n    --*/\n\n-- grant role SYSADMIN to our User\nGRANT ROLE SYSADMIN TO USER <insert user name here>;\n\n\n-- grant usage on the COMPUTE_WH warehouse to our SYSADMIN role\nGRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE SYSADMIN;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 4: Explore all Users and Roles in our Account\n        -- USE ROLE: https://docs.snowflake.com/en/sql-reference/sql/use-role\n        -- SHOW USERS: https://docs.snowflake.com/en/sql-reference/sql/show-users\n        -- SHOW ROLES: https://docs.snowflake.com/en/sql-reference/sql/show-roles\n-------------------------------------------------------------------------------------------\n\n---> let's now explore all users and roles in our account using our ACCOUNTADMIN role\nUSE ROLE ACCOUNTADMIN;\n\n-- show all users in account\nSHOW USERS;\n\n-- show all roles in account\nSHOW ROLES;\n\n-------------------------------------------------------------------------------------------\n    -- Step 5: Drop our created Users\n        -- DROP USER: https://docs.snowflake.com/en/sql-reference/sql/drop-user\n-------------------------------------------------------------------------------------------\n\n---> to drop the user, we could execute the following command\nDROP USER <insert user name here>;\n", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "transforms": [], "queryLanguage": "sql", "pid": "138mRchnrAa", "name": "[Template] Adding a user and granting roles", "orgId": "202346043869", "ownerId": "505987850600", "folderId": "Zf2k4GLJ", "visibility": "private", "modified": "2024-03-02T03:11:16.3674Z", "version": 2, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/w138mRchnrAa#query", "slug": "w138mRchnrAa", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}, "1R76n41a2ek": {"snowflakeRequestId": "a3d1120e-34fc-4243-9ba5-9f9c0c120e45", "snowflakeQueryId": "01b32e30-0000-9a23-0006-b4620003c0ce", "runner": "505987850600", "query": "SELECT 1;\nSELECT 2;\nSELECT 'A';", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": "NONE"}, "queryRange": {"start": 10, "end": 19, "allowRewrites": false}, "startDate": "2024-03-23T13:04:01.500382297Z", "endDate": "2024-03-23T13:04:01.53430105Z", "drafts": {"505987850600": {"query": "SELECT 1;\nSELECT 2;\nSELECT 'A';", "paramRefs": [], "queryRange": null, "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": "NONE"}, "queryLanguage": "sql", "appSessionId": 533735403745}}, "draftUpdates": {"505987850600": 1711199486563}, "transforms": [], "queryLanguage": "sql", "appSessionId": 533735403745, "gsQueryMetadata": {"startTime": 1711199041487, "endTime": 1711199041503, "sqlText": "SELECT 2;", "state": "SUCCEEDED", "statesDuration": "[12,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0]", "stats": {"compilationTime": 12, "gsExecTime": 1, "numBytesWrittenFirstResultChunk": 5, "numRowsInResult": 1}, "status": "SUCCESS", "totalDuration": 16, "warehouseName": "COMPUTE_WH"}, "pid": "1R76n41a2ek", "name": "NEW_SQL_WS", "orgId": "202346043869", "ownerId": "505987850600", "folderId": "4W6KRLKC", "visibility": "private", "layout": {"explorer": {"topHeight": 0, "mode": "CUSTOM"}, "pinned": {"topHeight": 0, "mode": "CUSTOM"}, "results": {"topHeight": 556, "mode": "CUSTOM"}, "schema": {"topHeight": 556, "mode": "CUSTOM"}, "visualization": {"topHeight": 556, "mode": "CUSTOM"}}, "modified": "2024-03-23T13:11:26.568628Z", "version": 3, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "", "database": "", "schema": "", "secondaryRoles": "NONE"}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/w1R76n41a2ek#query", "slug": "w1R76n41a2ek", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}, "1UmD56J47hm": {"snowflakeRequestId": null, "snowflakeQueryId": "", "query": "/* Tutorial 3: TPC-DS 10TB Complete Query Test\n\nPrerequisites\nThis tutorial requires the Snowflake provided\nsnowflake_sample_data database.  If you don't\nhave this database already in your account\nplease add it by following these instructions:\nhttps://docs.snowflake.net/manuals/user-guide/sample-data-using.html\n\nDetails on the queries and dataset can be found\nin the TPC-DS Benchmark specification at\nhttp://tpc.org/tpc_documents_current_versions/pdf/tpc-ds_v3.2.0.pdf\n\nThe business questions answered by these queries are\ndescribed in Appendix B: Business Questions\n\nTPC also provides tools to generate all 99\nqueries with varied parameter values.  The full\nbenchmark kit can be downloaded at\nhttp://www.tpc.org/tpc_documents_current_versions/current_specifications.asp\n\nThis is a sample set of the 99 queries\nused in the TPC-DS benchmark.\n\nHow to run\n1. Select all text in the worksheet.\n2. Click the Run button.\n*/\n\nCREATE WAREHOUSE if not exists TPCDS_BENCH_10T\nwith\n  WAREHOUSE_SIZE = XSMALL\n  AUTO_SUSPEND = 60\n  INITIALLY_SUSPENDED = TRUE\n  COMMENT = 'TEST WH for TPCDS 10TB BENCHMARK'\n;\n\nALTER WAREHOUSE TPCDS_BENCH_10T\n  RESUME IF SUSPENDED\n;\n\nALTER WAREHOUSE TPCDS_BENCH_10T\n  SET WAIT_FOR_COMPLETION = TRUE\n      WAREHOUSE_SIZE = XXLARGE\n;\n\nUSE SCHEMA snowflake_sample_data.tpcds_sf10tcl;\nALTER SESSION SET use_cached_result = FALSE;\nSET start_time = CURRENT_TIMESTAMP();\n\nselect /* { \"query\":\"query96\",\"streamId\":0,\"querySequence\":1 } */  count(*)\nfrom store_sales\n    ,household_demographics\n    ,time_dim, store\nwhere ss_sold_time_sk = time_dim.t_time_sk\n    and ss_hdemo_sk = household_demographics.hd_demo_sk\n    and ss_store_sk = s_store_sk\n    and time_dim.t_hour = 8\n    and time_dim.t_minute >= 30\n    and household_demographics.hd_dep_count = 6\n    and store.s_store_name = 'ese'\norder by count(*)\nlimit 100;\n\n\nselect /* { \"query\":\"query07\",\"streamId\":0,\"querySequence\":2 } */  i_item_id,\n        avg(ss_quantity) agg1,\n        avg(ss_list_price) agg2,\n        avg(ss_coupon_amt) agg3,\n        avg(ss_sales_price) agg4\n from store_sales, customer_demographics, date_dim, item, promotion\n where ss_sold_date_sk = d_date_sk and\n       ss_item_sk = i_item_sk and\n       ss_cdemo_sk = cd_demo_sk and\n       ss_promo_sk = p_promo_sk and\n       cd_gender = 'M' and\n       cd_marital_status = 'D' and\n       cd_education_status = 'College' and\n       (p_channel_email = 'N' or p_channel_event = 'N') and\n       d_year = 2001\n group by i_item_id\n order by i_item_id\n limit 100;\n\n\nWITH /* { \"query\":\"query75\",\"streamId\":0,\"querySequence\":3 } */ all_sales AS (\n SELECT d_year\n       ,i_brand_id\n       ,i_class_id\n       ,i_category_id\n       ,i_manufact_id\n       ,SUM(sales_cnt) AS sales_cnt\n       ,SUM(sales_amt) AS sales_amt\n FROM (SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt\n             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt\n       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk\n                          JOIN date_dim ON d_date_sk=cs_sold_date_sk\n                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number\n                                                    AND cs_item_sk=cr_item_sk)\n       WHERE i_category='Women'\n       UNION\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt\n             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt\n       FROM store_sales JOIN item ON i_item_sk=ss_item_sk\n                        JOIN date_dim ON d_date_sk=ss_sold_date_sk\n                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number\n                                                AND ss_item_sk=sr_item_sk)\n       WHERE i_category='Women'\n       UNION\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt\n             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt\n       FROM web_sales JOIN item ON i_item_sk=ws_item_sk\n                      JOIN date_dim ON d_date_sk=ws_sold_date_sk\n                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number\n                                            AND ws_item_sk=wr_item_sk)\n       WHERE i_category='Women') sales_detail\n GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)\n SELECT  prev_yr.d_year AS prev_year\n                          ,curr_yr.d_year AS year\n                          ,curr_yr.i_brand_id\n                          ,curr_yr.i_class_id\n                          ,curr_yr.i_category_id\n                          ,curr_yr.i_manufact_id\n                          ,prev_yr.sales_cnt AS prev_yr_cnt\n                          ,curr_yr.sales_cnt AS curr_yr_cnt\n                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff\n                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff\n FROM all_sales curr_yr, all_sales prev_yr\n WHERE curr_yr.i_brand_id=prev_yr.i_brand_id\n   AND curr_yr.i_class_id=prev_yr.i_class_id\n   AND curr_yr.i_category_id=prev_yr.i_category_id\n   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id\n   AND curr_yr.d_year=2001\n   AND prev_yr.d_year=2001-1\n   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9\n ORDER BY sales_cnt_diff,sales_amt_diff\n limit 100;\n\n\nselect /* { \"query\":\"query44\",\"streamId\":0,\"querySequence\":4 } */  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing\nfrom(select *\n     from (select item_sk,rank() over (order by rank_col asc) rnk\n           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col\n                 from store_sales ss1\n                 where ss_store_sk = 485\n                 group by ss_item_sk\n                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col\n                                                  from store_sales\n                                                  where ss_store_sk = 485\n                                                    and ss_cdemo_sk is null\n                                                  group by ss_store_sk))V1)V11\n     where rnk  < 11) asceding,\n    (select *\n     from (select item_sk,rank() over (order by rank_col desc) rnk\n           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col\n                 from store_sales ss1\n                 where ss_store_sk = 485\n                 group by ss_item_sk\n                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col\n                                                  from store_sales\n                                                  where ss_store_sk = 485\n                                                    and ss_cdemo_sk is null\n                                                  group by ss_store_sk))V2)V21\n     where rnk  < 11) descending,\nitem i1,\nitem i2\nwhere asceding.rnk = descending.rnk\n  and i1.i_item_sk=asceding.item_sk\n  and i2.i_item_sk=descending.item_sk\norder by asceding.rnk\nlimit 100;\n\n\nwith /* { \"query\":\"query39_p1\",\"streamId\":0,\"querySequence\":5 } */ inv as\n(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n       ,stdev,mean, case mean when 0 then null else stdev/mean end cov\n from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n            ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean\n      from inventory\n          ,item\n          ,warehouse\n          ,date_dim\n      where inv_item_sk = i_item_sk\n        and inv_warehouse_sk = w_warehouse_sk\n        and inv_date_sk = d_date_sk\n        and d_year =2002\n      group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo\n where case mean when 0 then 0 else stdev/mean end > 1)\nselect inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov\n        ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov\nfrom inv inv1,inv inv2\nwhere inv1.i_item_sk = inv2.i_item_sk\n  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk\n  and inv1.d_moy=4\n  and inv2.d_moy=4+1\norder by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov\n        ,inv2.d_moy,inv2.mean, inv2.cov\n;\nwith /* { \"query\":\"query39_p2\",\"streamId\":0,\"querySequence\":5 } */ inv as\n(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n       ,stdev,mean, case mean when 0 then null else stdev/mean end cov\n from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n            ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean\n      from inventory\n          ,item\n          ,warehouse\n          ,date_dim\n      where inv_item_sk = i_item_sk\n        and inv_warehouse_sk = w_warehouse_sk\n        and inv_date_sk = d_date_sk\n        and d_year =2002\n      group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo\n where case mean when 0 then 0 else stdev/mean end > 1)\nselect inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov\n        ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov\nfrom inv inv1,inv inv2\nwhere inv1.i_item_sk = inv2.i_item_sk\n  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk\n  and inv1.d_moy=4\n  and inv2.d_moy=4+1\n  and inv1.cov > 1.5\norder by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov\n        ,inv2.d_moy,inv2.mean, inv2.cov\n;\n\n\nwith /* { \"query\":\"query80\",\"streamId\":0,\"querySequence\":6 } */ ssr as\n (select  s_store_id as store_id,\n          sum(ss_ext_sales_price) as sales,\n          sum(coalesce(sr_return_amt, 0)) as returns,\n          sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit\n  from store_sales left outer join store_returns on\n         (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),\n     date_dim,\n     store,\n     item,\n     promotion\n where ss_sold_date_sk = d_date_sk\n       and d_date between cast('2001-08-17' as date)\n                  and (cast('2001-08-17' as date) + interval '30 days')\n       and ss_store_sk = s_store_sk\n       and ss_item_sk = i_item_sk\n       and i_current_price > 50\n       and ss_promo_sk = p_promo_sk\n       and p_channel_tv = 'N'\n group by s_store_id)\n ,\n csr as\n (select  cp_catalog_page_id as catalog_page_id,\n          sum(cs_ext_sales_price) as sales,\n          sum(coalesce(cr_return_amount, 0)) as returns,\n          sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit\n  from catalog_sales left outer join catalog_returns on\n         (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),\n     date_dim,\n     catalog_page,\n     item,\n     promotion\n where cs_sold_date_sk = d_date_sk\n       and d_date between cast('2001-08-17' as date)\n                  and (cast('2001-08-17' as date) + interval '30 days')\n        and cs_catalog_page_sk = cp_catalog_page_sk\n       and cs_item_sk = i_item_sk\n       and i_current_price > 50\n       and cs_promo_sk = p_promo_sk\n       and p_channel_tv = 'N'\ngroup by cp_catalog_page_id)\n ,\n wsr as\n (select  web_site_id,\n          sum(ws_ext_sales_price) as sales,\n          sum(coalesce(wr_return_amt, 0)) as returns,\n          sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit\n  from web_sales left outer join web_returns on\n         (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),\n     date_dim,\n     web_site,\n     item,\n     promotion\n where ws_sold_date_sk = d_date_sk\n       and d_date between cast('2001-08-17' as date)\n                  and (cast('2001-08-17' as date) + interval '30 days')\n        and ws_web_site_sk = web_site_sk\n       and ws_item_sk = i_item_sk\n       and i_current_price > 50\n       and ws_promo_sk = p_promo_sk\n       and p_channel_tv = 'N'\ngroup by web_site_id)\n  select  channel\n        , id\n        , sum(sales) as sales\n        , sum(returns) as returns\n        , sum(profit) as profit\n from\n (select 'store channel' as channel\n        , 'store' || store_id as id\n        , sales\n        , returns\n        , profit\n from   ssr\n union all\n select 'catalog channel' as channel\n        , 'catalog_page' || catalog_page_id as id\n        , sales\n        , returns\n        , profit\n from  csr\n union all\n select 'web channel' as channel\n        , 'web_site' || web_site_id as id\n        , sales\n        , returns\n        , profit\n from   wsr\n ) x\n group by rollup (channel, id)\n order by channel\n         ,id\n limit 100;\n\n\nselect /* { \"query\":\"query32\",\"streamId\":0,\"querySequence\":7 } */  sum(cs_ext_discount_amt)  as \"excess discount amount\"\nfrom\n   catalog_sales\n   ,item\n   ,date_dim\nwhere\ni_manufact_id = 615\nand i_item_sk = cs_item_sk\nand d_date between '1998-01-16' and\n        (cast('1998-01-16' as date) + interval '90 days')\nand d_date_sk = cs_sold_date_sk\nand cs_ext_discount_amt\n     > (\n         select\n            1.3 * avg(cs_ext_discount_amt)\n         from\n            catalog_sales\n           ,date_dim\n         where\n              cs_item_sk = i_item_sk\n          and d_date between '1998-01-16' and\n                             (cast('1998-01-16' as date) + interval '90 days')\n          and d_date_sk = cs_sold_date_sk\n      )\nlimit 100;\n\n\nselect /* { \"query\":\"query19\",\"streamId\":0,\"querySequence\":8 } */  i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact,\n \tsum(ss_ext_sales_price) ext_price\n from date_dim, store_sales, item,customer,customer_address,store\n where d_date_sk = ss_sold_date_sk\n   and ss_item_sk = i_item_sk\n   and i_manager_id=39\n   and d_moy=12\n   and d_year=2001\n   and ss_customer_sk = c_customer_sk\n   and c_current_addr_sk = ca_address_sk\n   and substr(ca_zip,1,5) <> substr(s_zip,1,5)\n   and ss_store_sk = s_store_sk\n group by i_brand\n      ,i_brand_id\n      ,i_manufact_id\n      ,i_manufact\n order by ext_price desc\n         ,i_brand\n         ,i_brand_id\n         ,i_manufact_id\n         ,i_manufact\nlimit 100 ;\n\n\nselect /* { \"query\":\"query25\",\"streamId\":0,\"querySequence\":9 } */\n i_item_id\n ,i_item_desc\n ,s_store_id\n ,s_store_name\n ,min(ss_net_profit) as store_sales_profit\n ,min(sr_net_loss) as store_returns_loss\n ,min(cs_net_profit) as catalog_sales_profit\n from\n store_sales\n ,store_returns\n ,catalog_sales\n ,date_dim d1\n ,date_dim d2\n ,date_dim d3\n ,store\n ,item\n where\n d1.d_moy = 4\n and d1.d_year = 2002\n and d1.d_date_sk = ss_sold_date_sk\n and i_item_sk = ss_item_sk\n and s_store_sk = ss_store_sk\n and ss_customer_sk = sr_customer_sk\n and ss_item_sk = sr_item_sk\n and ss_ticket_number = sr_ticket_number\n and sr_returned_date_sk = d2.d_date_sk\n and d2.d_moy               between 4 and  10\n and d2.d_year              = 2002\n and sr_customer_sk = cs_bill_customer_sk\n and sr_item_sk = cs_item_sk\n and cs_sold_date_sk = d3.d_date_sk\n and d3.d_moy               between 4 and  10\n and d3.d_year              = 2002\n group by\n i_item_id\n ,i_item_desc\n ,s_store_id\n ,s_store_name\n order by\n i_item_id\n ,i_item_desc\n ,s_store_id\n ,s_store_name\n limit 100;\n\n\nwith /* { \"query\":\"query78\",\"streamId\":0,\"querySequence\":10 } */ ws as\n  (select d_year AS ws_sold_year, ws_item_sk,\n    ws_bill_customer_sk ws_customer_sk,\n    sum(ws_quantity) ws_qty,\n    sum(ws_wholesale_cost) ws_wc,\n    sum(ws_sales_price) ws_sp\n   from web_sales\n   left join web_returns on wr_order_number=ws_order_number and ws_item_sk=wr_item_sk\n   join date_dim on ws_sold_date_sk = d_date_sk\n   where wr_order_number is null\n   group by d_year, ws_item_sk, ws_bill_customer_sk\n   ),\ncs as\n  (select d_year AS cs_sold_year, cs_item_sk,\n    cs_bill_customer_sk cs_customer_sk,\n    sum(cs_quantity) cs_qty,\n    sum(cs_wholesale_cost) cs_wc,\n    sum(cs_sales_price) cs_sp\n   from catalog_sales\n   left join catalog_returns on cr_order_number=cs_order_number and cs_item_sk=cr_item_sk\n   join date_dim on cs_sold_date_sk = d_date_sk\n   where cr_order_number is null\n   group by d_year, cs_item_sk, cs_bill_customer_sk\n   ),\nss as\n  (select d_year AS ss_sold_year, ss_item_sk,\n    ss_customer_sk,\n    sum(ss_quantity) ss_qty,\n    sum(ss_wholesale_cost) ss_wc,\n    sum(ss_sales_price) ss_sp\n   from store_sales\n   left join store_returns on sr_ticket_number=ss_ticket_number and ss_item_sk=sr_item_sk\n   join date_dim on ss_sold_date_sk = d_date_sk\n   where sr_ticket_number is null\n   group by d_year, ss_item_sk, ss_customer_sk\n   )\n select\nss_sold_year,\nround(ss_qty/(coalesce(ws_qty,0)+coalesce(cs_qty,0)),2) ratio,\nss_qty store_qty, ss_wc store_wholesale_cost, ss_sp store_sales_price,\ncoalesce(ws_qty,0)+coalesce(cs_qty,0) other_chan_qty,\ncoalesce(ws_wc,0)+coalesce(cs_wc,0) other_chan_wholesale_cost,\ncoalesce(ws_sp,0)+coalesce(cs_sp,0) other_chan_sales_price\nfrom ss\nleft join ws on (ws_sold_year=ss_sold_year and ws_item_sk=ss_item_sk and ws_customer_sk=ss_customer_sk)\nleft join cs on (cs_sold_year=ss_sold_year and cs_item_sk=ss_item_sk and cs_customer_sk=ss_customer_sk)\nwhere (coalesce(ws_qty,0)>0 or coalesce(cs_qty, 0)>0) and ss_sold_year=2000\norder by\n  ss_sold_year,\n  ss_qty desc, ss_wc desc, ss_sp desc,\n  other_chan_qty,\n  other_chan_wholesale_cost,\n  other_chan_sales_price,\n  ratio\nlimit 100;\n\n\nselect /* { \"query\":\"query86\",\"streamId\":0,\"querySequence\":11 } */\n    sum(ws_net_paid) as total_sum\n   ,i_category\n   ,i_class\n   ,grouping(i_category)+grouping(i_class) as lochierarchy\n   ,rank() over (\n \tpartition by grouping(i_category)+grouping(i_class),\n \tcase when grouping(i_class) = 0 then i_category end\n \torder by sum(ws_net_paid) desc) as rank_within_parent\n from\n    web_sales\n   ,date_dim       d1\n   ,item\n where\n    d1.d_month_seq between 1204 and 1204+11\n and d1.d_date_sk = ws_sold_date_sk\n and i_item_sk  = ws_item_sk\n group by rollup(i_category,i_class)\n order by\n   lochierarchy desc,\n   case when lochierarchy = 0 then i_category end,\n   rank_within_parent\n limit 100;\n\n\nwith /* { \"query\":\"query01\",\"streamId\":0,\"querySequence\":12 } */ customer_total_return as\n(select sr_customer_sk as ctr_customer_sk\n,sr_store_sk as ctr_store_sk\n,sum(SR_RETURN_AMT_INC_TAX) as ctr_total_return\nfrom store_returns\n,date_dim\nwhere sr_returned_date_sk = d_date_sk\nand d_year =1999\ngroup by sr_customer_sk\n,sr_store_sk)\n select  c_customer_id\nfrom customer_total_return ctr1\n,store\n,customer\nwhere ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2\nfrom customer_total_return ctr2\nwhere ctr1.ctr_store_sk = ctr2.ctr_store_sk)\nand s_store_sk = ctr1.ctr_store_sk\nand s_state = 'IA'\nand ctr1.ctr_customer_sk = c_customer_sk\norder by c_customer_id\nlimit 100;\n\n\nselect /* { \"query\":\"query91\",\"streamId\":0,\"querySequence\":13 } */\n        cc_call_center_id Call_Center,\n        cc_name Call_Center_Name,\n        cc_manager Manager,\n        sum(cr_net_loss) Returns_Loss\nfrom\n        call_center,\n        catalog_returns,\n        date_dim,\n        customer,\n        customer_address,\n        customer_demographics,\n        household_demographics\nwhere\n        cr_call_center_sk       = cc_call_center_sk\nand     cr_returned_date_sk     = d_date_sk\nand     cr_returning_customer_sk= c_customer_sk\nand     cd_demo_sk              = c_current_cdemo_sk\nand     hd_demo_sk              = c_current_hdemo_sk\nand     ca_address_sk           = c_current_addr_sk\nand     d_year                  = 2002\nand     d_moy                   = 12\nand     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')\n        or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree'))\nand     hd_buy_potential like '0-500%'\nand     ca_gmt_offset           = -6\ngroup by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status\norder by sum(cr_net_loss) desc;\n\n\nselect /* { \"query\":\"query21\",\"streamId\":0,\"querySequence\":14 } */  *\n from(select w_warehouse_name\n            ,i_item_id\n            ,sum(case when (cast(d_date as date) < cast ('1999-05-05' as date))\n\t                then inv_quantity_on_hand\n                      else 0 end) as inv_before\n            ,sum(case when (cast(d_date as date) >= cast ('1999-05-05' as date))\n                      then inv_quantity_on_hand\n                      else 0 end) as inv_after\n   from inventory\n       ,warehouse\n       ,item\n       ,date_dim\n   where i_current_price between 0.99 and 1.49\n     and i_item_sk          = inv_item_sk\n     and inv_warehouse_sk   = w_warehouse_sk\n     and inv_date_sk    = d_date_sk\n     and d_date between (cast ('1999-05-05' as date) - interval '30 days')\n                    and (cast ('1999-05-05' as date) + interval '30 days')\n   group by w_warehouse_name, i_item_id) x\n where (case when inv_before > 0\n             then inv_after / inv_before\n             else null\n             end) between 2.0/3.0 and 3.0/2.0\n order by w_warehouse_name\n         ,i_item_id\n limit 100;\n\n\nselect /* { \"query\":\"query43\",\"streamId\":0,\"querySequence\":15 } */  s_store_name, s_store_id,\n        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,\n        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,\n        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,\n        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,\n        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,\n        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,\n        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales\n from date_dim, store_sales, store\n where d_date_sk = ss_sold_date_sk and\n       s_store_sk = ss_store_sk and\n       s_gmt_offset = -5 and\n       d_year = 2002\n group by s_store_name, s_store_id\n order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales\n limit 100;\n\n\nselect /* { \"query\":\"query27\",\"streamId\":0,\"querySequence\":16 } */  i_item_id,\n        s_state, grouping(s_state) g_state,\n        avg(ss_quantity) agg1,\n        avg(ss_list_price) agg2,\n        avg(ss_coupon_amt) agg3,\n        avg(ss_sales_price) agg4\n from store_sales, customer_demographics, date_dim, store, item\n where ss_sold_date_sk = d_date_sk and\n       ss_item_sk = i_item_sk and\n       ss_store_sk = s_store_sk and\n       ss_cdemo_sk = cd_demo_sk and\n       cd_gender = 'M' and\n       cd_marital_status = 'D' and\n       cd_education_status = 'Unknown' and\n       d_year = 2000 and\n       s_state in ('MN','MO', 'MI', 'MI', 'VT', 'MI')\n group by rollup (i_item_id, s_state)\n order by i_item_id\n         ,s_state\n limit 100;\n\n\nselect /* { \"query\":\"query94\",\"streamId\":0,\"querySequence\":17 } */\n   count(distinct ws_order_number) as \"order count\"\n  ,sum(ws_ext_ship_cost) as \"total shipping cost\"\n  ,sum(ws_net_profit) as \"total net profit\"\nfrom\n   web_sales ws1\n  ,date_dim\n  ,customer_address\n  ,web_site\nwhere\n    d_date between '1999-2-01' and\n           (cast('1999-2-01' as date) + interval '60 days')\nand ws1.ws_ship_date_sk = d_date_sk\nand ws1.ws_ship_addr_sk = ca_address_sk\nand ca_state = 'IA'\nand ws1.ws_web_site_sk = web_site_sk\nand web_company_name = 'pri'\nand exists (select *\n            from web_sales ws2\n            where ws1.ws_order_number = ws2.ws_order_number\n              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)\nand not exists(select *\n               from web_returns wr1\n               where ws1.ws_order_number = wr1.wr_order_number)\norder by count(distinct ws_order_number)\nlimit 100;\n\n\nselect /* { \"query\":\"query45\",\"streamId\":0,\"querySequence\":18 } */  ca_zip, ca_state, sum(ws_sales_price)\n from web_sales, customer, customer_address, date_dim, item\n where ws_bill_customer_sk = c_customer_sk\n \tand c_current_addr_sk = ca_address_sk\n \tand ws_item_sk = i_item_sk\n \tand ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')\n \t      or\n \t      i_item_id in (select i_item_id\n                             from item\n                             where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n                             )\n \t    )\n \tand ws_sold_date_sk = d_date_sk\n \tand d_qoy = 1 and d_year = 2001\n group by ca_zip, ca_state\n order by ca_zip, ca_state\n limit 100;\n\n\nwith /* { \"query\":\"query58\",\"streamId\":0,\"querySequence\":19 } */ ss_items as\n (select i_item_id item_id\n        ,sum(ss_ext_sales_price) ss_item_rev\n from store_sales\n     ,item\n     ,date_dim\n where ss_item_sk = i_item_sk\n   and d_date in (select d_date\n                  from date_dim\n                  where d_week_seq = (select d_week_seq\n                                      from date_dim\n                                      where d_date = '1999-05-07'))\n   and ss_sold_date_sk   = d_date_sk\n group by i_item_id),\n cs_items as\n (select i_item_id item_id\n        ,sum(cs_ext_sales_price) cs_item_rev\n  from catalog_sales\n      ,item\n      ,date_dim\n where cs_item_sk = i_item_sk\n  and  d_date in (select d_date\n                  from date_dim\n                  where d_week_seq = (select d_week_seq\n                                      from date_dim\n                                      where d_date = '1999-05-07'))\n  and  cs_sold_date_sk = d_date_sk\n group by i_item_id),\n ws_items as\n (select i_item_id item_id\n        ,sum(ws_ext_sales_price) ws_item_rev\n  from web_sales\n      ,item\n      ,date_dim\n where ws_item_sk = i_item_sk\n  and  d_date in (select d_date\n                  from date_dim\n                  where d_week_seq =(select d_week_seq\n                                     from date_dim\n                                     where d_date = '1999-05-07'))\n  and ws_sold_date_sk   = d_date_sk\n group by i_item_id)\n  select  ss_items.item_id\n       ,ss_item_rev\n       ,ss_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ss_dev\n       ,cs_item_rev\n       ,cs_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 cs_dev\n       ,ws_item_rev\n       ,ws_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ws_dev\n       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average\n from ss_items,cs_items,ws_items\n where ss_items.item_id=cs_items.item_id\n   and ss_items.item_id=ws_items.item_id\n   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev\n   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev\n   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev\n   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev\n   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev\n   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev\n order by item_id\n         ,ss_item_rev\n limit 100;\n\n\nwith /* { \"query\":\"query64\",\"streamId\":0,\"querySequence\":20 } */ cs_ui as\n (select cs_item_sk\n        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund\n  from catalog_sales\n      ,catalog_returns\n  where cs_item_sk = cr_item_sk\n    and cs_order_number = cr_order_number\n  group by cs_item_sk\n  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)),\ncross_sales as\n (select i_product_name product_name\n     ,i_item_sk item_sk\n     ,s_store_name store_name\n     ,s_zip store_zip\n     ,ad1.ca_street_number b_street_number\n     ,ad1.ca_street_name b_street_name\n     ,ad1.ca_city b_city\n     ,ad1.ca_zip b_zip\n     ,ad2.ca_street_number c_street_number\n     ,ad2.ca_street_name c_street_name\n     ,ad2.ca_city c_city\n     ,ad2.ca_zip c_zip\n     ,d1.d_year as syear\n     ,d2.d_year as fsyear\n     ,d3.d_year s2year\n     ,count(*) cnt\n     ,sum(ss_wholesale_cost) s1\n     ,sum(ss_list_price) s2\n     ,sum(ss_coupon_amt) s3\n  FROM   store_sales\n        ,store_returns\n        ,cs_ui\n        ,date_dim d1\n        ,date_dim d2\n        ,date_dim d3\n        ,store\n        ,customer\n        ,customer_demographics cd1\n        ,customer_demographics cd2\n        ,promotion\n        ,household_demographics hd1\n        ,household_demographics hd2\n        ,customer_address ad1\n        ,customer_address ad2\n        ,income_band ib1\n        ,income_band ib2\n        ,item\n  WHERE  ss_store_sk = s_store_sk AND\n         ss_sold_date_sk = d1.d_date_sk AND\n         ss_customer_sk = c_customer_sk AND\n         ss_cdemo_sk= cd1.cd_demo_sk AND\n         ss_hdemo_sk = hd1.hd_demo_sk AND\n         ss_addr_sk = ad1.ca_address_sk and\n         ss_item_sk = i_item_sk and\n         ss_item_sk = sr_item_sk and\n         ss_ticket_number = sr_ticket_number and\n         ss_item_sk = cs_ui.cs_item_sk and\n         c_current_cdemo_sk = cd2.cd_demo_sk AND\n         c_current_hdemo_sk = hd2.hd_demo_sk AND\n         c_current_addr_sk = ad2.ca_address_sk and\n         c_first_sales_date_sk = d2.d_date_sk and\n         c_first_shipto_date_sk = d3.d_date_sk and\n         ss_promo_sk = p_promo_sk and\n         hd1.hd_income_band_sk = ib1.ib_income_band_sk and\n         hd2.hd_income_band_sk = ib2.ib_income_band_sk and\n         cd1.cd_marital_status <> cd2.cd_marital_status and\n         i_color in ('misty','light','aquamarine','navy','papaya','tomato') and\n         i_current_price between 21 and 21 + 10 and\n         i_current_price between 21 + 1 and 21 + 15\ngroup by i_product_name\n       ,i_item_sk\n       ,s_store_name\n       ,s_zip\n       ,ad1.ca_street_number\n       ,ad1.ca_street_name\n       ,ad1.ca_city\n       ,ad1.ca_zip\n       ,ad2.ca_street_number\n       ,ad2.ca_street_name\n       ,ad2.ca_city\n       ,ad2.ca_zip\n       ,d1.d_year\n       ,d2.d_year\n       ,d3.d_year\n)\nselect cs1.product_name\n     ,cs1.store_name\n     ,cs1.store_zip\n     ,cs1.b_street_number\n     ,cs1.b_street_name\n     ,cs1.b_city\n     ,cs1.b_zip\n     ,cs1.c_street_number\n     ,cs1.c_street_name\n     ,cs1.c_city\n     ,cs1.c_zip\n     ,cs1.syear\n     ,cs1.cnt\n     ,cs1.s1 as s11\n     ,cs1.s2 as s21\n     ,cs1.s3 as s31\n     ,cs2.s1 as s12\n     ,cs2.s2 as s22\n     ,cs2.s3 as s32\n     ,cs2.syear\n     ,cs2.cnt\nfrom cross_sales cs1,cross_sales cs2\nwhere cs1.item_sk=cs2.item_sk and\n     cs1.syear = 2000 and\n     cs2.syear = 2000 + 1 and\n     cs2.cnt <= cs1.cnt and\n     cs1.store_name = cs2.store_name and\n     cs1.store_zip = cs2.store_zip\norder by cs1.product_name\n       ,cs1.store_name\n       ,cs2.cnt\n       ,cs1.s1\n       ,cs2.s1;\n\n\nselect /* { \"query\":\"query36\",\"streamId\":0,\"querySequence\":21 } */\n    sum(ss_net_profit)/sum(ss_ext_sales_price) as gross_margin\n   ,i_category\n   ,i_class\n   ,grouping(i_category)+grouping(i_class) as lochierarchy\n   ,rank() over (\n \tpartition by grouping(i_category)+grouping(i_class),\n \tcase when grouping(i_class) = 0 then i_category end\n \torder by sum(ss_net_profit)/sum(ss_ext_sales_price) asc) as rank_within_parent\n from\n    store_sales\n   ,date_dim       d1\n   ,item\n   ,store\n where\n    d1.d_year = 2001\n and d1.d_date_sk = ss_sold_date_sk\n and i_item_sk  = ss_item_sk\n and s_store_sk  = ss_store_sk\n and s_state in ('LA','IN','OK','MI',\n                 'TN','SC','NC','NM')\n group by rollup(i_category,i_class)\n order by\n   lochierarchy desc\n  ,case when lochierarchy = 0 then i_category end\n  ,rank_within_parent\n  limit 100;\n\n\nwith /* { \"query\":\"query33\",\"streamId\":0,\"querySequence\":22 } */ ss as (\n select\n          i_manufact_id,sum(ss_ext_sales_price) total_sales\n from\n \tstore_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_manufact_id in (select\n  i_manufact_id\nfrom\n item\nwhere i_category in ('Home'))\n and     ss_item_sk              = i_item_sk\n and     ss_sold_date_sk         = d_date_sk\n and     d_year                  = 2000\n and     d_moy                   = 6\n and     ss_addr_sk              = ca_address_sk\n and     ca_gmt_offset           = -5\n group by i_manufact_id),\n cs as (\n select\n          i_manufact_id,sum(cs_ext_sales_price) total_sales\n from\n \tcatalog_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_manufact_id               in (select\n  i_manufact_id\nfrom\n item\nwhere i_category in ('Home'))\n and     cs_item_sk              = i_item_sk\n and     cs_sold_date_sk         = d_date_sk\n and     d_year                  = 2000\n and     d_moy                   = 6\n and     cs_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -5\n group by i_manufact_id),\n ws as (\n select\n          i_manufact_id,sum(ws_ext_sales_price) total_sales\n from\n \tweb_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_manufact_id               in (select\n  i_manufact_id\nfrom\n item\nwhere i_category in ('Home'))\n and     ws_item_sk              = i_item_sk\n and     ws_sold_date_sk         = d_date_sk\n and     d_year                  = 2000\n and     d_moy                   = 6\n and     ws_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -5\n group by i_manufact_id)\n  select  i_manufact_id ,sum(total_sales) total_sales\n from  (select * from ss\n        union all\n        select * from cs\n        union all\n        select * from ws) tmp1\n group by i_manufact_id\n order by total_sales\nlimit 100;\n\n\nselect /* { \"query\":\"query46\",\"streamId\":0,\"querySequence\":23 } */  c_last_name\n       ,c_first_name\n       ,ca_city\n       ,bought_city\n       ,ss_ticket_number\n       ,amt,profit\n from\n   (select ss_ticket_number\n          ,ss_customer_sk\n          ,ca_city bought_city\n          ,sum(ss_coupon_amt) amt\n          ,sum(ss_net_profit) profit\n    from store_sales,date_dim,store,household_demographics,customer_address\n    where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n    and store_sales.ss_store_sk = store.s_store_sk\n    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    and store_sales.ss_addr_sk = customer_address.ca_address_sk\n    and (household_demographics.hd_dep_count = 6 or\n         household_demographics.hd_vehicle_count= 0)\n    and date_dim.d_dow in (6,0)\n    and date_dim.d_year in (1999,1999+1,1999+2)\n    and store.s_city in ('Five Points','Crossroads','Edgewood','Prospect','Sherwood Forest')\n    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr\n    where ss_customer_sk = c_customer_sk\n      and customer.c_current_addr_sk = current_addr.ca_address_sk\n      and current_addr.ca_city <> bought_city\n  order by c_last_name\n          ,c_first_name\n          ,ca_city\n          ,bought_city\n          ,ss_ticket_number\n  limit 100;\n\n\nselect /* { \"query\":\"query62\",\"streamId\":0,\"querySequence\":24 } */\n   substr(w_warehouse_name,1,20)\n  ,sm_type\n  ,web_name\n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\"\n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 30) and\n                 (ws_ship_date_sk - ws_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\"\n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 60) and\n                 (ws_ship_date_sk - ws_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\"\n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 90) and\n                 (ws_ship_date_sk - ws_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\"\n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\"\nfrom\n   web_sales\n  ,warehouse\n  ,ship_mode\n  ,web_site\n  ,date_dim\nwhere\n    d_month_seq between 1223 and 1223 + 11\nand ws_ship_date_sk   = d_date_sk\nand ws_warehouse_sk   = w_warehouse_sk\nand ws_ship_mode_sk   = sm_ship_mode_sk\nand ws_web_site_sk    = web_site_sk\ngroup by\n   substr(w_warehouse_name,1,20)\n  ,sm_type\n  ,web_name\norder by substr(w_warehouse_name,1,20)\n        ,sm_type\n       ,web_name\nlimit 100;\n\n\nselect /* { \"query\":\"query16\",\"streamId\":0,\"querySequence\":25 } */\n   count(distinct cs_order_number) as \"order count\"\n  ,sum(cs_ext_ship_cost) as \"total shipping cost\"\n  ,sum(cs_net_profit) as \"total net profit\"\nfrom\n   catalog_sales cs1\n  ,date_dim\n  ,customer_address\n  ,call_center\nwhere\n    d_date between '2002-2-01' and\n           (cast('2002-2-01' as date) + interval '60 days')\nand cs1.cs_ship_date_sk = d_date_sk\nand cs1.cs_ship_addr_sk = ca_address_sk\nand ca_state = 'TX'\nand cs1.cs_call_center_sk = cc_call_center_sk\nand cc_county in ('Williamson County','Jefferson Davis Parish','Walker County','Jackson County',\n                  'Barrow County'\n)\nand exists (select *\n            from catalog_sales cs2\n            where cs1.cs_order_number = cs2.cs_order_number\n              and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk)\nand not exists(select *\n               from catalog_returns cr1\n               where cs1.cs_order_number = cr1.cr_order_number)\norder by count(distinct cs_order_number)\nlimit 100;\n\n\nselect /* { \"query\":\"query10\",\"streamId\":0,\"querySequence\":26 } */\n  cd_gender,\n  cd_marital_status,\n  cd_education_status,\n  count(*) cnt1,\n  cd_purchase_estimate,\n  count(*) cnt2,\n  cd_credit_rating,\n  count(*) cnt3,\n  cd_dep_count,\n  count(*) cnt4,\n  cd_dep_employed_count,\n  count(*) cnt5,\n  cd_dep_college_count,\n  count(*) cnt6\n from\n  customer c,customer_address ca,customer_demographics\n where\n  c.c_current_addr_sk = ca.ca_address_sk and\n  ca_county in ('Lee County','Stafford County','Niagara County','Parmer County','Cherokee County') and\n  cd_demo_sk = c.c_current_cdemo_sk and\n  exists (select *\n          from store_sales,date_dim\n          where c.c_customer_sk = ss_customer_sk and\n                ss_sold_date_sk = d_date_sk and\n                d_year = 1999 and\n                d_moy between 1 and 1+3) and\n   (exists (select *\n            from web_sales,date_dim\n            where c.c_customer_sk = ws_bill_customer_sk and\n                  ws_sold_date_sk = d_date_sk and\n                  d_year = 1999 and\n                  d_moy between 1 ANd 1+3) or\n    exists (select *\n            from catalog_sales,date_dim\n            where c.c_customer_sk = cs_ship_customer_sk and\n                  cs_sold_date_sk = d_date_sk and\n                  d_year = 1999 and\n                  d_moy between 1 and 1+3))\n group by cd_gender,\n          cd_marital_status,\n          cd_education_status,\n          cd_purchase_estimate,\n          cd_credit_rating,\n          cd_dep_count,\n          cd_dep_employed_count,\n          cd_dep_college_count\n order by cd_gender,\n          cd_marital_status,\n          cd_education_status,\n          cd_purchase_estimate,\n          cd_credit_rating,\n          cd_dep_count,\n          cd_dep_employed_count,\n          cd_dep_college_count\nlimit 100;\n\n\nselect /* { \"query\":\"query63\",\"streamId\":0,\"querySequence\":27 } */  *\nfrom (select i_manager_id\n             ,sum(ss_sales_price) sum_sales\n             ,avg(sum(ss_sales_price)) over (partition by i_manager_id) avg_monthly_sales\n      from item\n          ,store_sales\n          ,date_dim\n          ,store\n      where ss_item_sk = i_item_sk\n        and ss_sold_date_sk = d_date_sk\n        and ss_store_sk = s_store_sk\n        and d_month_seq in (1186,1186+1,1186+2,1186+3,1186+4,1186+5,1186+6,1186+7,1186+8,1186+9,1186+10,1186+11)\n        and ((    i_category in ('Books','Children','Electronics')\n              and i_class in ('personal','portable','reference','self-help')\n              and i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',\n\t\t                  'exportiunivamalg #9','scholaramalgamalg #9'))\n           or(    i_category in ('Women','Music','Men')\n              and i_class in ('accessories','classical','fragrances','pants')\n              and i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',\n\t\t                 'importoamalg #1')))\ngroup by i_manager_id, d_moy) tmp1\nwhere case when avg_monthly_sales > 0 then abs (sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1\norder by i_manager_id\n        ,avg_monthly_sales\n        ,sum_sales\nlimit 100;\n\n\nselect /* { \"query\":\"query69\",\"streamId\":0,\"querySequence\":28 } */\n  cd_gender,\n  cd_marital_status,\n  cd_education_status,\n  count(*) cnt1,\n  cd_purchase_estimate,\n  count(*) cnt2,\n  cd_credit_rating,\n  count(*) cnt3\n from\n  customer c,customer_address ca,customer_demographics\n where\n  c.c_current_addr_sk = ca.ca_address_sk and\n  ca_state in ('WI','WA','OK') and\n  cd_demo_sk = c.c_current_cdemo_sk and\n  exists (select *\n          from store_sales,date_dim\n          where c.c_customer_sk = ss_customer_sk and\n                ss_sold_date_sk = d_date_sk and\n                d_year = 2001 and\n                d_moy between 2 and 2+2) and\n   (not exists (select *\n            from web_sales,date_dim\n            where c.c_customer_sk = ws_bill_customer_sk and\n                  ws_sold_date_sk = d_date_sk and\n                  d_year = 2001 and\n                  d_moy between 2 and 2+2) and\n    not exists (select *\n            from catalog_sales,date_dim\n            where c.c_customer_sk = cs_ship_customer_sk and\n                  cs_sold_date_sk = d_date_sk and\n                  d_year = 2001 and\n                  d_moy between 2 and 2+2))\n group by cd_gender,\n          cd_marital_status,\n          cd_education_status,\n          cd_purchase_estimate,\n          cd_credit_rating\n order by cd_gender,\n          cd_marital_status,\n          cd_education_status,\n          cd_purchase_estimate,\n          cd_credit_rating\n limit 100;\n\n\nwith /* { \"query\":\"query60\",\"streamId\":0,\"querySequence\":29 } */ ss as (\n select\n          i_item_id,sum(ss_ext_sales_price) total_sales\n from\n \tstore_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id in (select\n  i_item_id\nfrom\n item\nwhere i_category in ('Jewelry'))\n and     ss_item_sk              = i_item_sk\n and     ss_sold_date_sk         = d_date_sk\n and     d_year                  = 2000\n and     d_moy                   = 10\n and     ss_addr_sk              = ca_address_sk\n and     ca_gmt_offset           = -9\n group by i_item_id),\n cs as (\n select\n          i_item_id,sum(cs_ext_sales_price) total_sales\n from\n \tcatalog_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id               in (select\n  i_item_id\nfrom\n item\nwhere i_category in ('Jewelry'))\n and     cs_item_sk              = i_item_sk\n and     cs_sold_date_sk         = d_date_sk\n and     d_year                  = 2000\n and     d_moy                   = 10\n and     cs_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -9\n group by i_item_id),\n ws as (\n select\n          i_item_id,sum(ws_ext_sales_price) total_sales\n from\n \tweb_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id               in (select\n  i_item_id\nfrom\n item\nwhere i_category in ('Jewelry'))\n and     ws_item_sk              = i_item_sk\n and     ws_sold_date_sk         = d_date_sk\n and     d_year                  = 2000\n and     d_moy                   = 10\n and     ws_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -9\n group by i_item_id)\n  select\n  i_item_id\n,sum(total_sales) total_sales\n from  (select * from ss\n        union all\n        select * from cs\n        union all\n        select * from ws) tmp1\n group by i_item_id\n order by i_item_id\n      ,total_sales\n limit 100;\n\n\nwith /* { \"query\":\"query59\",\"streamId\":0,\"querySequence\":30 } */ wss as\n (select d_week_seq,\n        ss_store_sk,\n        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,\n        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,\n        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,\n        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,\n        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,\n        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,\n        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales\n from store_sales,date_dim\n where d_date_sk = ss_sold_date_sk\n group by d_week_seq,ss_store_sk\n )\n  select  s_store_name1,s_store_id1,d_week_seq1\n       ,sun_sales1/sun_sales2,mon_sales1/mon_sales2\n       ,tue_sales1/tue_sales2,wed_sales1/wed_sales2,thu_sales1/thu_sales2\n       ,fri_sales1/fri_sales2,sat_sales1/sat_sales2\n from\n (select s_store_name s_store_name1,wss.d_week_seq d_week_seq1\n        ,s_store_id s_store_id1,sun_sales sun_sales1\n        ,mon_sales mon_sales1,tue_sales tue_sales1\n        ,wed_sales wed_sales1,thu_sales thu_sales1\n        ,fri_sales fri_sales1,sat_sales sat_sales1\n  from wss,store,date_dim d\n  where d.d_week_seq = wss.d_week_seq and\n        ss_store_sk = s_store_sk and\n        d_month_seq between 1177 and 1177 + 11) y,\n (select s_store_name s_store_name2,wss.d_week_seq d_week_seq2\n        ,s_store_id s_store_id2,sun_sales sun_sales2\n        ,mon_sales mon_sales2,tue_sales tue_sales2\n        ,wed_sales wed_sales2,thu_sales thu_sales2\n        ,fri_sales fri_sales2,sat_sales sat_sales2\n  from wss,store,date_dim d\n  where d.d_week_seq = wss.d_week_seq and\n        ss_store_sk = s_store_sk and\n        d_month_seq between 1177+ 12 and 1177 + 23) x\n where s_store_id1=s_store_id2\n   and d_week_seq1=d_week_seq2-52\n order by s_store_name1,s_store_id1,d_week_seq1\nlimit 100;\n\n\nselect /* { \"query\":\"query37\",\"streamId\":0,\"querySequence\":31 } */  i_item_id\n       ,i_item_desc\n       ,i_current_price\n from item, inventory, date_dim, catalog_sales\n where i_current_price between 43 and 43 + 30\n and inv_item_sk = i_item_sk\n and d_date_sk=inv_date_sk\n and d_date between cast('2000-06-09' as date) and (cast('2000-06-09' as date) + interval '60 days')\n and i_manufact_id in (916,867,787,747)\n and inv_quantity_on_hand between 100 and 500\n and cs_item_sk = i_item_sk\n group by i_item_id,i_item_desc,i_current_price\n order by i_item_id\n limit 100;\n\n\nselect /* { \"query\":\"query98\",\"streamId\":0,\"querySequence\":32 } */ i_item_id\n      ,i_item_desc\n      ,i_category\n      ,i_class\n      ,i_current_price\n      ,sum(ss_ext_sales_price) as itemrevenue\n      ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over\n          (partition by i_class) as revenueratio\nfrom\n\tstore_sales\n    \t,item\n    \t,date_dim\nwhere\n\tss_item_sk = i_item_sk\n  \tand i_category in ('Jewelry', 'Music', 'Children')\n  \tand ss_sold_date_sk = d_date_sk\n\tand d_date between cast('2002-01-12' as date)\n\t\t\t\tand (cast('2002-01-12' as date) + interval '30 days')\ngroup by\n\ti_item_id\n        ,i_item_desc\n        ,i_category\n        ,i_class\n        ,i_current_price\norder by\n\ti_category\n        ,i_class\n        ,i_item_id\n        ,i_item_desc\n        ,revenueratio;\n\n\nselect /* { \"query\":\"query85\",\"streamId\":0,\"querySequence\":33 } */  substr(r_reason_desc,1,20)\n       ,avg(ws_quantity)\n       ,avg(wr_refunded_cash)\n       ,avg(wr_fee)\n from web_sales, web_returns, web_page, customer_demographics cd1,\n      customer_demographics cd2, customer_address, date_dim, reason\n where ws_web_page_sk = wp_web_page_sk\n   and ws_item_sk = wr_item_sk\n   and ws_order_number = wr_order_number\n   and ws_sold_date_sk = d_date_sk and d_year = 1999\n   and cd1.cd_demo_sk = wr_refunded_cdemo_sk\n   and cd2.cd_demo_sk = wr_returning_cdemo_sk\n   and ca_address_sk = wr_refunded_addr_sk\n   and r_reason_sk = wr_reason_sk\n   and\n   (\n    (\n     cd1.cd_marital_status = 'U'\n     and\n     cd1.cd_marital_status = cd2.cd_marital_status\n     and\n     cd1.cd_education_status = 'Secondary'\n     and\n     cd1.cd_education_status = cd2.cd_education_status\n     and\n     ws_sales_price between 100.00 and 150.00\n    )\n   or\n    (\n     cd1.cd_marital_status = 'D'\n     and\n     cd1.cd_marital_status = cd2.cd_marital_status\n     and\n     cd1.cd_education_status = 'Advanced Degree'\n     and\n     cd1.cd_education_status = cd2.cd_education_status\n     and\n     ws_sales_price between 50.00 and 100.00\n    )\n   or\n    (\n     cd1.cd_marital_status = 'S'\n     and\n     cd1.cd_marital_status = cd2.cd_marital_status\n     and\n     cd1.cd_education_status = 'Unknown'\n     and\n     cd1.cd_education_status = cd2.cd_education_status\n     and\n     ws_sales_price between 150.00 and 200.00\n    )\n   )\n   and\n   (\n    (\n     ca_country = 'United States'\n     and\n     ca_state in ('OK', 'NC', 'TN')\n     and ws_net_profit between 100 and 200\n    )\n    or\n    (\n     ca_country = 'United States'\n     and\n     ca_state in ('IA', 'MO', 'IL')\n     and ws_net_profit between 150 and 300\n    )\n    or\n    (\n     ca_country = 'United States'\n     and\n     ca_state in ('MN', 'MT', 'WI')\n     and ws_net_profit between 50 and 250\n    )\n   )\ngroup by r_reason_desc\norder by substr(r_reason_desc,1,20)\n        ,avg(ws_quantity)\n        ,avg(wr_refunded_cash)\n        ,avg(wr_fee)\nlimit 100;\n\n\nselect /* { \"query\":\"query70\",\"streamId\":0,\"querySequence\":34 } */\n    sum(ss_net_profit) as total_sum\n   ,s_state\n   ,s_county\n   ,grouping(s_state)+grouping(s_county) as lochierarchy\n   ,rank() over (\n \tpartition by grouping(s_state)+grouping(s_county),\n \tcase when grouping(s_county) = 0 then s_state end\n \torder by sum(ss_net_profit) desc) as rank_within_parent\n from\n    store_sales\n   ,date_dim       d1\n   ,store\n where\n    d1.d_month_seq between 1219 and 1219+11\n and d1.d_date_sk = ss_sold_date_sk\n and s_store_sk  = ss_store_sk\n and s_state in\n             ( select s_state\n               from  (select s_state as s_state,\n \t\t\t    rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking\n                      from   store_sales, store, date_dim\n                      where  d_month_seq between 1219 and 1219+11\n \t\t\t    and d_date_sk = ss_sold_date_sk\n \t\t\t    and s_store_sk  = ss_store_sk\n                      group by s_state\n                     ) tmp1\n               where ranking <= 5\n             )\n group by rollup(s_state,s_county)\n order by\n   lochierarchy desc\n  ,case when lochierarchy = 0 then s_state end\n  ,rank_within_parent\n limit 100;\n\n\nselect /* { \"query\":\"query67\",\"streamId\":0,\"querySequence\":35 } */  *\nfrom (select i_category\n            ,i_class\n            ,i_brand\n            ,i_product_name\n            ,d_year\n            ,d_qoy\n            ,d_moy\n            ,s_store_id\n            ,sumsales\n            ,rank() over (partition by i_category order by sumsales desc) rk\n      from (select i_category\n                  ,i_class\n                  ,i_brand\n                  ,i_product_name\n                  ,d_year\n                  ,d_qoy\n                  ,d_moy\n                  ,s_store_id\n                  ,sum(coalesce(ss_sales_price*ss_quantity,0)) sumsales\n            from store_sales\n                ,date_dim\n                ,store\n                ,item\n       where  ss_sold_date_sk=d_date_sk\n          and ss_item_sk=i_item_sk\n          and ss_store_sk = s_store_sk\n          and d_month_seq between 1183 and 1183+11\n       group by  rollup(i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy,s_store_id))dw1) dw2\nwhere rk <= 100\norder by i_category\n        ,i_class\n        ,i_brand\n        ,i_product_name\n        ,d_year\n        ,d_qoy\n        ,d_moy\n        ,s_store_id\n        ,sumsales\n        ,rk\nlimit 100;\n\n\nselect /* { \"query\":\"query28\",\"streamId\":0,\"querySequence\":36 } */  *\nfrom (select avg(ss_list_price) B1_LP\n            ,count(ss_list_price) B1_CNT\n            ,count(distinct ss_list_price) B1_CNTD\n      from store_sales\n      where ss_quantity between 0 and 5\n        and (ss_list_price between 127 and 127+10\n             or ss_coupon_amt between 6610 and 6610+1000\n             or ss_wholesale_cost between 27 and 27+20)) B1,\n     (select avg(ss_list_price) B2_LP\n            ,count(ss_list_price) B2_CNT\n            ,count(distinct ss_list_price) B2_CNTD\n      from store_sales\n      where ss_quantity between 6 and 10\n        and (ss_list_price between 105 and 105+10\n          or ss_coupon_amt between 6852 and 6852+1000\n          or ss_wholesale_cost between 75 and 75+20)) B2,\n     (select avg(ss_list_price) B3_LP\n            ,count(ss_list_price) B3_CNT\n            ,count(distinct ss_list_price) B3_CNTD\n      from store_sales\n      where ss_quantity between 11 and 15\n        and (ss_list_price between 140 and 140+10\n          or ss_coupon_amt between 11659 and 11659+1000\n          or ss_wholesale_cost between 28 and 28+20)) B3,\n     (select avg(ss_list_price) B4_LP\n            ,count(ss_list_price) B4_CNT\n            ,count(distinct ss_list_price) B4_CNTD\n      from store_sales\n      where ss_quantity between 16 and 20\n        and (ss_list_price between 181 and 181+10\n          or ss_coupon_amt between 5477 and 5477+1000\n          or ss_wholesale_cost between 13 and 13+20)) B4,\n     (select avg(ss_list_price) B5_LP\n            ,count(ss_list_price) B5_CNT\n            ,count(distinct ss_list_price) B5_CNTD\n      from store_sales\n      where ss_quantity between 21 and 25\n        and (ss_list_price between 121 and 121+10\n          or ss_coupon_amt between 9051 and 9051+1000\n          or ss_wholesale_cost between 12 and 12+20)) B5,\n     (select avg(ss_list_price) B6_LP\n            ,count(ss_list_price) B6_CNT\n            ,count(distinct ss_list_price) B6_CNTD\n      from store_sales\n      where ss_quantity between 26 and 30\n        and (ss_list_price between 186 and 186+10\n          or ss_coupon_amt between 15083 and 15083+1000\n          or ss_wholesale_cost between 11 and 11+20)) B6\nlimit 100;\n\n\nwith /* { \"query\":\"query81\",\"streamId\":0,\"querySequence\":37 } */ customer_total_return as\n (select cr_returning_customer_sk as ctr_customer_sk\n        ,ca_state as ctr_state,\n \tsum(cr_return_amt_inc_tax) as ctr_total_return\n from catalog_returns\n     ,date_dim\n     ,customer_address\n where cr_returned_date_sk = d_date_sk\n   and d_year =1998\n   and cr_returning_addr_sk = ca_address_sk\n group by cr_returning_customer_sk\n         ,ca_state )\n  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name\n                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset\n                  ,ca_location_type,ctr_total_return\n from customer_total_return ctr1\n     ,customer_address\n     ,customer\n where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2\n \t\t\t  from customer_total_return ctr2\n                  \t  where ctr1.ctr_state = ctr2.ctr_state)\n       and ca_address_sk = c_current_addr_sk\n       and ca_state = 'AR'\n       and ctr1.ctr_customer_sk = c_customer_sk\n order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name\n                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset\n                  ,ca_location_type,ctr_total_return\n limit 100;\n\n\nwith /* { \"query\":\"query97\",\"streamId\":0,\"querySequence\":38 } */ ssci as (\nselect ss_customer_sk customer_sk\n      ,ss_item_sk item_sk\nfrom store_sales,date_dim\nwhere ss_sold_date_sk = d_date_sk\n  and d_month_seq between 1206 and 1206 + 11\ngroup by ss_customer_sk\n        ,ss_item_sk),\ncsci as(\n select cs_bill_customer_sk customer_sk\n      ,cs_item_sk item_sk\nfrom catalog_sales,date_dim\nwhere cs_sold_date_sk = d_date_sk\n  and d_month_seq between 1206 and 1206 + 11\ngroup by cs_bill_customer_sk\n        ,cs_item_sk)\n select  sum(case when ssci.customer_sk is not null and csci.customer_sk is null then 1 else 0 end) store_only\n      ,sum(case when ssci.customer_sk is null and csci.customer_sk is not null then 1 else 0 end) catalog_only\n      ,sum(case when ssci.customer_sk is not null and csci.customer_sk is not null then 1 else 0 end) store_and_catalog\nfrom ssci full outer join csci on (ssci.customer_sk=csci.customer_sk\n                               and ssci.item_sk = csci.item_sk)\nlimit 100;\n\n\nselect /* { \"query\":\"query66\",\"streamId\":0,\"querySequence\":39 } */\n         w_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n        ,ship_carriers\n        ,year\n \t,sum(jan_sales) as jan_sales\n \t,sum(feb_sales) as feb_sales\n \t,sum(mar_sales) as mar_sales\n \t,sum(apr_sales) as apr_sales\n \t,sum(may_sales) as may_sales\n \t,sum(jun_sales) as jun_sales\n \t,sum(jul_sales) as jul_sales\n \t,sum(aug_sales) as aug_sales\n \t,sum(sep_sales) as sep_sales\n \t,sum(oct_sales) as oct_sales\n \t,sum(nov_sales) as nov_sales\n \t,sum(dec_sales) as dec_sales\n \t,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot\n \t,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot\n \t,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot\n \t,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot\n \t,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot\n \t,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot\n \t,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot\n \t,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot\n \t,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot\n \t,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot\n \t,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot\n \t,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot\n \t,sum(jan_net) as jan_net\n \t,sum(feb_net) as feb_net\n \t,sum(mar_net) as mar_net\n \t,sum(apr_net) as apr_net\n \t,sum(may_net) as may_net\n \t,sum(jun_net) as jun_net\n \t,sum(jul_net) as jul_net\n \t,sum(aug_net) as aug_net\n \t,sum(sep_net) as sep_net\n \t,sum(oct_net) as oct_net\n \t,sum(nov_net) as nov_net\n \t,sum(dec_net) as dec_net\n from (\n     select\n \tw_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n \t,'HARMSTORF' || ',' || 'ZOUROS' as ship_carriers\n       ,d_year as year\n \t,sum(case when d_moy = 1\n \t\tthen ws_sales_price* ws_quantity else 0 end) as jan_sales\n \t,sum(case when d_moy = 2\n \t\tthen ws_sales_price* ws_quantity else 0 end) as feb_sales\n \t,sum(case when d_moy = 3\n \t\tthen ws_sales_price* ws_quantity else 0 end) as mar_sales\n \t,sum(case when d_moy = 4\n \t\tthen ws_sales_price* ws_quantity else 0 end) as apr_sales\n \t,sum(case when d_moy = 5\n \t\tthen ws_sales_price* ws_quantity else 0 end) as may_sales\n \t,sum(case when d_moy = 6\n \t\tthen ws_sales_price* ws_quantity else 0 end) as jun_sales\n \t,sum(case when d_moy = 7\n \t\tthen ws_sales_price* ws_quantity else 0 end) as jul_sales\n \t,sum(case when d_moy = 8\n \t\tthen ws_sales_price* ws_quantity else 0 end) as aug_sales\n \t,sum(case when d_moy = 9\n \t\tthen ws_sales_price* ws_quantity else 0 end) as sep_sales\n \t,sum(case when d_moy = 10\n \t\tthen ws_sales_price* ws_quantity else 0 end) as oct_sales\n \t,sum(case when d_moy = 11\n \t\tthen ws_sales_price* ws_quantity else 0 end) as nov_sales\n \t,sum(case when d_moy = 12\n \t\tthen ws_sales_price* ws_quantity else 0 end) as dec_sales\n \t,sum(case when d_moy = 1\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as jan_net\n \t,sum(case when d_moy = 2\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as feb_net\n \t,sum(case when d_moy = 3\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as mar_net\n \t,sum(case when d_moy = 4\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as apr_net\n \t,sum(case when d_moy = 5\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as may_net\n \t,sum(case when d_moy = 6\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as jun_net\n \t,sum(case when d_moy = 7\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as jul_net\n \t,sum(case when d_moy = 8\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as aug_net\n \t,sum(case when d_moy = 9\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as sep_net\n \t,sum(case when d_moy = 10\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as oct_net\n \t,sum(case when d_moy = 11\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as nov_net\n \t,sum(case when d_moy = 12\n \t\tthen ws_net_paid_inc_ship * ws_quantity else 0 end) as dec_net\n     from\n          web_sales\n         ,warehouse\n         ,date_dim\n         ,time_dim\n \t  ,ship_mode\n     where\n            ws_warehouse_sk =  w_warehouse_sk\n        and ws_sold_date_sk = d_date_sk\n        and ws_sold_time_sk = t_time_sk\n \tand ws_ship_mode_sk = sm_ship_mode_sk\n        and d_year = 1998\n \tand t_time between 33232 and 33232+28800\n \tand sm_carrier in ('HARMSTORF','ZOUROS')\n     group by\n        w_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n       ,d_year\n union all\n     select\n \tw_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n \t,'HARMSTORF' || ',' || 'ZOUROS' as ship_carriers\n       ,d_year as year\n \t,sum(case when d_moy = 1\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as jan_sales\n \t,sum(case when d_moy = 2\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as feb_sales\n \t,sum(case when d_moy = 3\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as mar_sales\n \t,sum(case when d_moy = 4\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as apr_sales\n \t,sum(case when d_moy = 5\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as may_sales\n \t,sum(case when d_moy = 6\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as jun_sales\n \t,sum(case when d_moy = 7\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as jul_sales\n \t,sum(case when d_moy = 8\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as aug_sales\n \t,sum(case when d_moy = 9\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as sep_sales\n \t,sum(case when d_moy = 10\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as oct_sales\n \t,sum(case when d_moy = 11\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as nov_sales\n \t,sum(case when d_moy = 12\n \t\tthen cs_ext_list_price* cs_quantity else 0 end) as dec_sales\n \t,sum(case when d_moy = 1\n \t\tthen cs_net_paid * cs_quantity else 0 end) as jan_net\n \t,sum(case when d_moy = 2\n \t\tthen cs_net_paid * cs_quantity else 0 end) as feb_net\n \t,sum(case when d_moy = 3\n \t\tthen cs_net_paid * cs_quantity else 0 end) as mar_net\n \t,sum(case when d_moy = 4\n \t\tthen cs_net_paid * cs_quantity else 0 end) as apr_net\n \t,sum(case when d_moy = 5\n \t\tthen cs_net_paid * cs_quantity else 0 end) as may_net\n \t,sum(case when d_moy = 6\n \t\tthen cs_net_paid * cs_quantity else 0 end) as jun_net\n \t,sum(case when d_moy = 7\n \t\tthen cs_net_paid * cs_quantity else 0 end) as jul_net\n \t,sum(case when d_moy = 8\n \t\tthen cs_net_paid * cs_quantity else 0 end) as aug_net\n \t,sum(case when d_moy = 9\n \t\tthen cs_net_paid * cs_quantity else 0 end) as sep_net\n \t,sum(case when d_moy = 10\n \t\tthen cs_net_paid * cs_quantity else 0 end) as oct_net\n \t,sum(case when d_moy = 11\n \t\tthen cs_net_paid * cs_quantity else 0 end) as nov_net\n \t,sum(case when d_moy = 12\n \t\tthen cs_net_paid * cs_quantity else 0 end) as dec_net\n     from\n          catalog_sales\n         ,warehouse\n         ,date_dim\n         ,time_dim\n \t ,ship_mode\n     where\n            cs_warehouse_sk =  w_warehouse_sk\n        and cs_sold_date_sk = d_date_sk\n        and cs_sold_time_sk = t_time_sk\n \tand cs_ship_mode_sk = sm_ship_mode_sk\n        and d_year = 1998\n \tand t_time between 33232 AND 33232+28800\n \tand sm_carrier in ('HARMSTORF','ZOUROS')\n     group by\n        w_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n       ,d_year\n ) x\n group by\n        w_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n \t,ship_carriers\n       ,year\n order by w_warehouse_name\n limit 100;\n\n\nselect /* { \"query\":\"query90\",\"streamId\":0,\"querySequence\":40 } */  cast(amc as decimal(15,4))/cast(pmc as decimal(15,4)) am_pm_ratio\n from ( select count(*) amc\n       from web_sales, household_demographics , time_dim, web_page\n       where ws_sold_time_sk = time_dim.t_time_sk\n         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk\n         and ws_web_page_sk = web_page.wp_web_page_sk\n         and time_dim.t_hour between 8 and 8+1\n         and household_demographics.hd_dep_count = 0\n         and web_page.wp_char_count between 5000 and 5200) at,\n      ( select count(*) pmc\n       from web_sales, household_demographics , time_dim, web_page\n       where ws_sold_time_sk = time_dim.t_time_sk\n         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk\n         and ws_web_page_sk = web_page.wp_web_page_sk\n         and time_dim.t_hour between 14 and 14+1\n         and household_demographics.hd_dep_count = 0\n         and web_page.wp_char_count between 5000 and 5200) pt\n order by am_pm_ratio\n limit 100;\n\n\nselect /* { \"query\":\"query17\",\"streamId\":0,\"querySequence\":41 } */  i_item_id\n       ,i_item_desc\n       ,s_state\n       ,count(ss_quantity) as store_sales_quantitycount\n       ,avg(ss_quantity) as store_sales_quantityave\n       ,stddev_samp(ss_quantity) as store_sales_quantitystdev\n       ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov\n       ,count(sr_return_quantity) as store_returns_quantitycount\n       ,avg(sr_return_quantity) as store_returns_quantityave\n       ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev\n       ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov\n       ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave\n       ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev\n       ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov\n from store_sales\n     ,store_returns\n     ,catalog_sales\n     ,date_dim d1\n     ,date_dim d2\n     ,date_dim d3\n     ,store\n     ,item\n where d1.d_quarter_name = '2002Q1'\n   and d1.d_date_sk = ss_sold_date_sk\n   and i_item_sk = ss_item_sk\n   and s_store_sk = ss_store_sk\n   and ss_customer_sk = sr_customer_sk\n   and ss_item_sk = sr_item_sk\n   and ss_ticket_number = sr_ticket_number\n   and sr_returned_date_sk = d2.d_date_sk\n   and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')\n   and sr_customer_sk = cs_bill_customer_sk\n   and sr_item_sk = cs_item_sk\n   and cs_sold_date_sk = d3.d_date_sk\n   and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')\n group by i_item_id\n         ,i_item_desc\n         ,s_state\n order by i_item_id\n         ,i_item_desc\n         ,s_state\nlimit 100;\n\n\nwith /* { \"query\":\"query47\",\"streamId\":0,\"querySequence\":42 } */ v1 as(\n select i_category, i_brand,\n        s_store_name, s_company_name,\n        d_year, d_moy,\n        sum(ss_sales_price) sum_sales,\n        avg(sum(ss_sales_price)) over\n          (partition by i_category, i_brand,\n                     s_store_name, s_company_name, d_year)\n          avg_monthly_sales,\n        rank() over\n          (partition by i_category, i_brand,\n                     s_store_name, s_company_name\n           order by d_year, d_moy) rn\n from item, store_sales, date_dim, store\n where ss_item_sk = i_item_sk and\n       ss_sold_date_sk = d_date_sk and\n       ss_store_sk = s_store_sk and\n       (\n         d_year = 2000 or\n         ( d_year = 2000-1 and d_moy =12) or\n         ( d_year = 2000+1 and d_moy =1)\n       )\n group by i_category, i_brand,\n          s_store_name, s_company_name,\n          d_year, d_moy),\n v2 as(\n select v1.i_brand\n        ,v1.d_year, v1.d_moy\n        ,v1.avg_monthly_sales\n        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum\n from v1, v1 v1_lag, v1 v1_lead\n where v1.i_category = v1_lag.i_category and\n       v1.i_category = v1_lead.i_category and\n       v1.i_brand = v1_lag.i_brand and\n       v1.i_brand = v1_lead.i_brand and\n       v1.s_store_name = v1_lag.s_store_name and\n       v1.s_store_name = v1_lead.s_store_name and\n       v1.s_company_name = v1_lag.s_company_name and\n       v1.s_company_name = v1_lead.s_company_name and\n       v1.rn = v1_lag.rn + 1 and\n       v1.rn = v1_lead.rn - 1)\n  select  *\n from v2\n where  d_year = 2000 and\n        avg_monthly_sales > 0 and\n        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1\n order by sum_sales - avg_monthly_sales, avg_monthly_sales\n limit 100;\n\n\nwith /* { \"query\":\"query95\",\"streamId\":0,\"querySequence\":43 } */ ws_wh as\n(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2\n from web_sales ws1,web_sales ws2\n where ws1.ws_order_number = ws2.ws_order_number\n   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)\n select\n   count(distinct ws_order_number) as \"order count\"\n  ,sum(ws_ext_ship_cost) as \"total shipping cost\"\n  ,sum(ws_net_profit) as \"total net profit\"\nfrom\n   web_sales ws1\n  ,date_dim\n  ,customer_address\n  ,web_site\nwhere\n    d_date between '2002-3-01' and\n           (cast('2002-3-01' as date) + interval '60 days')\nand ws1.ws_ship_date_sk = d_date_sk\nand ws1.ws_ship_addr_sk = ca_address_sk\nand ca_state = 'MO'\nand ws1.ws_web_site_sk = web_site_sk\nand web_company_name = 'pri'\nand ws1.ws_order_number in (select ws_order_number\n                            from ws_wh)\nand ws1.ws_order_number in (select wr_order_number\n                            from web_returns,ws_wh\n                            where wr_order_number = ws_wh.ws_order_number)\norder by count(distinct ws_order_number)\nlimit 100;\n\n\nselect /* { \"query\":\"query92\",\"streamId\":0,\"querySequence\":44 } */\n   sum(ws_ext_discount_amt)  as \"Excess Discount Amount\"\nfrom\n    web_sales\n   ,item\n   ,date_dim\nwhere\ni_manufact_id = 605\nand i_item_sk = ws_item_sk\nand d_date between '2000-01-23' and\n        (cast('2000-01-23' as date) + interval '90 days')\nand d_date_sk = ws_sold_date_sk\nand ws_ext_discount_amt\n     > (\n         SELECT\n            1.3 * avg(ws_ext_discount_amt)\n         FROM\n            web_sales\n           ,date_dim\n         WHERE\n              ws_item_sk = i_item_sk\n          and d_date between '2000-01-23' and\n                             (cast('2000-01-23' as date) + interval '90 days')\n          and d_date_sk = ws_sold_date_sk\n      )\norder by sum(ws_ext_discount_amt)\nlimit 100;\n\n\nselect /* { \"query\":\"query03\",\"streamId\":0,\"querySequence\":45 } */  dt.d_year\n       ,item.i_brand_id brand_id\n       ,item.i_brand brand\n       ,sum(ss_ext_discount_amt) sum_agg\n from  date_dim dt\n      ,store_sales\n      ,item\n where dt.d_date_sk = store_sales.ss_sold_date_sk\n   and store_sales.ss_item_sk = item.i_item_sk\n   and item.i_manufact_id = 950\n   and dt.d_moy=12\n group by dt.d_year\n      ,item.i_brand\n      ,item.i_brand_id\n order by dt.d_year\n         ,sum_agg desc\n         ,brand_id\n limit 100;\n\n\nWITH /* { \"query\":\"query51\",\"streamId\":0,\"querySequence\":46 } */ web_v1 as (\nselect\n  ws_item_sk item_sk, d_date,\n  sum(sum(ws_sales_price))\n      over (partition by ws_item_sk order by d_date rows between unbounded preceding and current row) cume_sales\nfrom web_sales\n    ,date_dim\nwhere ws_sold_date_sk=d_date_sk\n  and d_month_seq between 1191 and 1191+11\n  and ws_item_sk is not NULL\ngroup by ws_item_sk, d_date),\nstore_v1 as (\nselect\n  ss_item_sk item_sk, d_date,\n  sum(sum(ss_sales_price))\n      over (partition by ss_item_sk order by d_date rows between unbounded preceding and current row) cume_sales\nfrom store_sales\n    ,date_dim\nwhere ss_sold_date_sk=d_date_sk\n  and d_month_seq between 1191 and 1191+11\n  and ss_item_sk is not NULL\ngroup by ss_item_sk, d_date)\n select  *\nfrom (select item_sk\n     ,d_date\n     ,web_sales\n     ,store_sales\n     ,max(web_sales)\n         over (partition by item_sk order by d_date rows between unbounded preceding and current row) web_cumulative\n     ,max(store_sales)\n         over (partition by item_sk order by d_date rows between unbounded preceding and current row) store_cumulative\n     from (select case when web.item_sk is not null then web.item_sk else store.item_sk end item_sk\n                 ,case when web.d_date is not null then web.d_date else store.d_date end d_date\n                 ,web.cume_sales web_sales\n                 ,store.cume_sales store_sales\n           from web_v1 web full outer join store_v1 store on (web.item_sk = store.item_sk\n                                                          and web.d_date = store.d_date)\n          )x )y\nwhere web_cumulative > store_cumulative\norder by item_sk\n        ,d_date\nlimit 100;\n\n\nselect /* { \"query\":\"query35\",\"streamId\":0,\"querySequence\":47 } */\n  ca_state,\n  cd_gender,\n  cd_marital_status,\n  cd_dep_count,\n  count(*) cnt1,\n  max(cd_dep_count),\n  stddev_samp(cd_dep_count),\n  stddev_samp(cd_dep_count),\n  cd_dep_employed_count,\n  count(*) cnt2,\n  max(cd_dep_employed_count),\n  stddev_samp(cd_dep_employed_count),\n  stddev_samp(cd_dep_employed_count),\n  cd_dep_college_count,\n  count(*) cnt3,\n  max(cd_dep_college_count),\n  stddev_samp(cd_dep_college_count),\n  stddev_samp(cd_dep_college_count)\n from\n  customer c,customer_address ca,customer_demographics\n where\n  c.c_current_addr_sk = ca.ca_address_sk and\n  cd_demo_sk = c.c_current_cdemo_sk and\n  exists (select *\n          from store_sales,date_dim\n          where c.c_customer_sk = ss_customer_sk and\n                ss_sold_date_sk = d_date_sk and\n                d_year = 2001 and\n                d_qoy < 4) and\n   (exists (select *\n            from web_sales,date_dim\n            where c.c_customer_sk = ws_bill_customer_sk and\n                  ws_sold_date_sk = d_date_sk and\n                  d_year = 2001 and\n                  d_qoy < 4) or\n    exists (select *\n            from catalog_sales,date_dim\n            where c.c_customer_sk = cs_ship_customer_sk and\n                  cs_sold_date_sk = d_date_sk and\n                  d_year = 2001 and\n                  d_qoy < 4))\n group by ca_state,\n          cd_gender,\n          cd_marital_status,\n          cd_dep_count,\n          cd_dep_employed_count,\n          cd_dep_college_count\n order by ca_state,\n          cd_gender,\n          cd_marital_status,\n          cd_dep_count,\n          cd_dep_employed_count,\n          cd_dep_college_count\n limit 100;\n\n\nselect /* { \"query\":\"query49\",\"streamId\":0,\"querySequence\":48 } */  channel, item, return_ratio, return_rank, currency_rank from\n (select\n 'web' as channel\n ,web.item\n ,web.return_ratio\n ,web.return_rank\n ,web.currency_rank\n from (\n \tselect\n \t item\n \t,return_ratio\n \t,currency_ratio\n \t,rank() over (order by return_ratio) as return_rank\n \t,rank() over (order by currency_ratio) as currency_rank\n \tfrom\n \t(\tselect ws.ws_item_sk as item\n \t\t,(cast(sum(coalesce(wr.wr_return_quantity,0)) as decimal(15,4))/\n \t\tcast(sum(coalesce(ws.ws_quantity,0)) as decimal(15,4) )) as return_ratio\n \t\t,(cast(sum(coalesce(wr.wr_return_amt,0)) as decimal(15,4))/\n \t\tcast(sum(coalesce(ws.ws_net_paid,0)) as decimal(15,4) )) as currency_ratio\n \t\tfrom\n \t\t web_sales ws left outer join web_returns wr\n \t\t\ton (ws.ws_order_number = wr.wr_order_number and\n \t\t\tws.ws_item_sk = wr.wr_item_sk)\n                 ,date_dim\n \t\twhere\n \t\t\twr.wr_return_amt > 10000\n \t\t\tand ws.ws_net_profit > 1\n                         and ws.ws_net_paid > 0\n                         and ws.ws_quantity > 0\n                         and ws_sold_date_sk = d_date_sk\n                         and d_year = 1999\n                         and d_moy = 11\n \t\tgroup by ws.ws_item_sk\n \t) in_web\n ) web\n where\n (\n web.return_rank <= 10\n or\n web.currency_rank <= 10\n )\n union\n select\n 'catalog' as channel\n ,catalog.item\n ,catalog.return_ratio\n ,catalog.return_rank\n ,catalog.currency_rank\n from (\n \tselect\n \t item\n \t,return_ratio\n \t,currency_ratio\n \t,rank() over (order by return_ratio) as return_rank\n \t,rank() over (order by currency_ratio) as currency_rank\n \tfrom\n \t(\tselect\n \t\tcs.cs_item_sk as item\n \t\t,(cast(sum(coalesce(cr.cr_return_quantity,0)) as decimal(15,4))/\n \t\tcast(sum(coalesce(cs.cs_quantity,0)) as decimal(15,4) )) as return_ratio\n \t\t,(cast(sum(coalesce(cr.cr_return_amount,0)) as decimal(15,4))/\n \t\tcast(sum(coalesce(cs.cs_net_paid,0)) as decimal(15,4) )) as currency_ratio\n \t\tfrom\n \t\tcatalog_sales cs left outer join catalog_returns cr\n \t\t\ton (cs.cs_order_number = cr.cr_order_number and\n \t\t\tcs.cs_item_sk = cr.cr_item_sk)\n                ,date_dim\n \t\twhere\n \t\t\tcr.cr_return_amount > 10000\n \t\t\tand cs.cs_net_profit > 1\n                         and cs.cs_net_paid > 0\n                         and cs.cs_quantity > 0\n                         and cs_sold_date_sk = d_date_sk\n                         and d_year = 1999\n                         and d_moy = 11\n                 group by cs.cs_item_sk\n \t) in_cat\n ) catalog\n where\n (\n catalog.return_rank <= 10\n or\n catalog.currency_rank <=10\n )\n union\n select\n 'store' as channel\n ,store.item\n ,store.return_ratio\n ,store.return_rank\n ,store.currency_rank\n from (\n \tselect\n \t item\n \t,return_ratio\n \t,currency_ratio\n \t,rank() over (order by return_ratio) as return_rank\n \t,rank() over (order by currency_ratio) as currency_rank\n \tfrom\n \t(\tselect sts.ss_item_sk as item\n \t\t,(cast(sum(coalesce(sr.sr_return_quantity,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_quantity,0)) as decimal(15,4) )) as return_ratio\n \t\t,(cast(sum(coalesce(sr.sr_return_amt,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_net_paid,0)) as decimal(15,4) )) as currency_ratio\n \t\tfrom\n \t\tstore_sales sts left outer join store_returns sr\n \t\t\ton (sts.ss_ticket_number = sr.sr_ticket_number and sts.ss_item_sk = sr.sr_item_sk)\n                ,date_dim\n \t\twhere\n \t\t\tsr.sr_return_amt > 10000\n \t\t\tand sts.ss_net_profit > 1\n                         and sts.ss_net_paid > 0\n                         and sts.ss_quantity > 0\n                         and ss_sold_date_sk = d_date_sk\n                         and d_year = 1999\n                         and d_moy = 11\n \t\tgroup by sts.ss_item_sk\n \t) in_store\n ) store\n where  (\n store.return_rank <= 10\n or\n store.currency_rank <= 10\n )\n )\n order by 1,4,5,2\n limit 100;\n\n\nselect /* { \"query\":\"query09\",\"streamId\":0,\"querySequence\":49 } */ case when (select count(*)\n                  from store_sales\n                  where ss_quantity between 1 and 20) > 22323234\n            then (select avg(ss_ext_sales_price)\n                  from store_sales\n                  where ss_quantity between 1 and 20)\n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 1 and 20) end bucket1 ,\n       case when (select count(*)\n                  from store_sales\n                  where ss_quantity between 21 and 40) > 219711013\n            then (select avg(ss_ext_sales_price)\n                  from store_sales\n                  where ss_quantity between 21 and 40)\n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 21 and 40) end bucket2,\n       case when (select count(*)\n                  from store_sales\n                  where ss_quantity between 41 and 60) > 219311390\n            then (select avg(ss_ext_sales_price)\n                  from store_sales\n                  where ss_quantity between 41 and 60)\n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 41 and 60) end bucket3,\n       case when (select count(*)\n                  from store_sales\n                  where ss_quantity between 61 and 80) > 259878475\n            then (select avg(ss_ext_sales_price)\n                  from store_sales\n                  where ss_quantity between 61 and 80)\n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 61 and 80) end bucket4,\n       case when (select count(*)\n                  from store_sales\n                  where ss_quantity between 81 and 100) > 27693204\n            then (select avg(ss_ext_sales_price)\n                  from store_sales\n                  where ss_quantity between 81 and 100)\n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 81 and 100) end bucket5\nfrom reason\nwhere r_reason_sk = 1\n;\n\n\nwith /* { \"query\":\"query31\",\"streamId\":0,\"querySequence\":50 } */ ss as\n (select ca_county,d_qoy, d_year,sum(ss_ext_sales_price) as store_sales\n from store_sales,date_dim,customer_address\n where ss_sold_date_sk = d_date_sk\n  and ss_addr_sk=ca_address_sk\n group by ca_county,d_qoy, d_year),\n ws as\n (select ca_county,d_qoy, d_year,sum(ws_ext_sales_price) as web_sales\n from web_sales,date_dim,customer_address\n where ws_sold_date_sk = d_date_sk\n  and ws_bill_addr_sk=ca_address_sk\n group by ca_county,d_qoy, d_year)\n select\n        ss1.ca_county\n       ,ss1.d_year\n       ,ws2.web_sales/ws1.web_sales web_q1_q2_increase\n       ,ss2.store_sales/ss1.store_sales store_q1_q2_increase\n       ,ws3.web_sales/ws2.web_sales web_q2_q3_increase\n       ,ss3.store_sales/ss2.store_sales store_q2_q3_increase\n from\n        ss ss1\n       ,ss ss2\n       ,ss ss3\n       ,ws ws1\n       ,ws ws2\n       ,ws ws3\n where\n    ss1.d_qoy = 1\n    and ss1.d_year = 2000\n    and ss1.ca_county = ss2.ca_county\n    and ss2.d_qoy = 2\n    and ss2.d_year = 2000\n and ss2.ca_county = ss3.ca_county\n    and ss3.d_qoy = 3\n    and ss3.d_year = 2000\n    and ss1.ca_county = ws1.ca_county\n    and ws1.d_qoy = 1\n    and ws1.d_year = 2000\n    and ws1.ca_county = ws2.ca_county\n    and ws2.d_qoy = 2\n    and ws2.d_year = 2000\n    and ws1.ca_county = ws3.ca_county\n    and ws3.d_qoy = 3\n    and ws3.d_year =2000\n    and case when ws1.web_sales > 0 then ws2.web_sales/ws1.web_sales else null end\n       > case when ss1.store_sales > 0 then ss2.store_sales/ss1.store_sales else null end\n    and case when ws2.web_sales > 0 then ws3.web_sales/ws2.web_sales else null end\n       > case when ss2.store_sales > 0 then ss3.store_sales/ss2.store_sales else null end\n order by store_q2_q3_increase;\n\n\nwith /* { \"query\":\"query11\",\"streamId\":0,\"querySequence\":51 } */ year_total as (\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum(ss_ext_list_price-ss_ext_discount_amt) year_total\n       ,'s' sale_type\n from customer\n     ,store_sales\n     ,date_dim\n where c_customer_sk = ss_customer_sk\n   and ss_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag\n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year\n union all\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum(ws_ext_list_price-ws_ext_discount_amt) year_total\n       ,'w' sale_type\n from customer\n     ,web_sales\n     ,date_dim\n where c_customer_sk = ws_bill_customer_sk\n   and ws_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag\n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year\n         )\n  select\n                  t_s_secyear.customer_id\n                 ,t_s_secyear.customer_first_name\n                 ,t_s_secyear.customer_last_name\n                 ,t_s_secyear.customer_birth_country\n from year_total t_s_firstyear\n     ,year_total t_s_secyear\n     ,year_total t_w_firstyear\n     ,year_total t_w_secyear\n where t_s_secyear.customer_id = t_s_firstyear.customer_id\n         and t_s_firstyear.customer_id = t_w_secyear.customer_id\n         and t_s_firstyear.customer_id = t_w_firstyear.customer_id\n         and t_s_firstyear.sale_type = 's'\n         and t_w_firstyear.sale_type = 'w'\n         and t_s_secyear.sale_type = 's'\n         and t_w_secyear.sale_type = 'w'\n         and t_s_firstyear.dyear = 2000\n         and t_s_secyear.dyear = 2000+1\n         and t_w_firstyear.dyear = 2000\n         and t_w_secyear.dyear = 2000+1\n         and t_s_firstyear.year_total > 0\n         and t_w_firstyear.year_total > 0\n         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else 0.0 end\n             > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else 0.0 end\n order by t_s_secyear.customer_id\n         ,t_s_secyear.customer_first_name\n         ,t_s_secyear.customer_last_name\n         ,t_s_secyear.customer_birth_country\nlimit 100;\n\n\nselect /* { \"query\":\"query93\",\"streamId\":0,\"querySequence\":52 } */  ss_customer_sk\n            ,sum(act_sales) sumsales\n      from (select ss_item_sk\n                  ,ss_ticket_number\n                  ,ss_customer_sk\n                  ,case when sr_return_quantity is not null then (ss_quantity-sr_return_quantity)*ss_sales_price\n                                                            else (ss_quantity*ss_sales_price) end act_sales\n            from store_sales left outer join store_returns on (sr_item_sk = ss_item_sk\n                                                               and sr_ticket_number = ss_ticket_number)\n                ,reason\n            where sr_reason_sk = r_reason_sk\n              and r_reason_desc = 'Gift exchange') t\n      group by ss_customer_sk\n      order by sumsales, ss_customer_sk\nlimit 100;\n\n\nselect /* { \"query\":\"query29\",\"streamId\":0,\"querySequence\":53 } */\n     i_item_id\n    ,i_item_desc\n    ,s_store_id\n    ,s_store_name\n    ,max(ss_quantity)        as store_sales_quantity\n    ,max(sr_return_quantity) as store_returns_quantity\n    ,max(cs_quantity)        as catalog_sales_quantity\n from\n    store_sales\n   ,store_returns\n   ,catalog_sales\n   ,date_dim             d1\n   ,date_dim             d2\n   ,date_dim             d3\n   ,store\n   ,item\n where\n     d1.d_moy               = 4\n and d1.d_year              = 1999\n and d1.d_date_sk           = ss_sold_date_sk\n and i_item_sk              = ss_item_sk\n and s_store_sk             = ss_store_sk\n and ss_customer_sk         = sr_customer_sk\n and ss_item_sk             = sr_item_sk\n and ss_ticket_number       = sr_ticket_number\n and sr_returned_date_sk    = d2.d_date_sk\n and d2.d_moy               between 4 and  4 + 3\n and d2.d_year              = 1999\n and sr_customer_sk         = cs_bill_customer_sk\n and sr_item_sk             = cs_item_sk\n and cs_sold_date_sk        = d3.d_date_sk\n and d3.d_year              in (1999,1999+1,1999+2)\n group by\n    i_item_id\n   ,i_item_desc\n   ,s_store_id\n   ,s_store_name\n order by\n    i_item_id\n   ,i_item_desc\n   ,s_store_id\n   ,s_store_name\n limit 100;\n\n\nselect /* { \"query\":\"query38\",\"streamId\":0,\"querySequence\":54 } */  count(*) from (\n    select distinct c_last_name, c_first_name, d_date\n    from store_sales, date_dim, customer\n          where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n      and store_sales.ss_customer_sk = customer.c_customer_sk\n      and d_month_seq between 1182 and 1182 + 11\n  intersect\n    select distinct c_last_name, c_first_name, d_date\n    from catalog_sales, date_dim, customer\n          where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk\n      and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk\n      and d_month_seq between 1182 and 1182 + 11\n  intersect\n    select distinct c_last_name, c_first_name, d_date\n    from web_sales, date_dim, customer\n          where web_sales.ws_sold_date_sk = date_dim.d_date_sk\n      and web_sales.ws_bill_customer_sk = customer.c_customer_sk\n      and d_month_seq between 1182 and 1182 + 11\n) hot_cust\nlimit 100;\n\n\nselect /* { \"query\":\"query22\",\"streamId\":0,\"querySequence\":55 } */  i_product_name\n             ,i_brand\n             ,i_class\n             ,i_category\n             ,avg(inv_quantity_on_hand) qoh\n       from inventory\n           ,date_dim\n           ,item\n       where inv_date_sk=d_date_sk\n              and inv_item_sk=i_item_sk\n              and d_month_seq between 1176 and 1176 + 11\n       group by rollup(i_product_name\n                       ,i_brand\n                       ,i_class\n                       ,i_category)\norder by qoh, i_product_name, i_brand, i_class, i_category\nlimit 100;\n\n\nselect /* { \"query\":\"query89\",\"streamId\":0,\"querySequence\":56 } */  *\nfrom(\nselect i_category, i_class, i_brand,\n       s_store_name, s_company_name,\n       d_moy,\n       sum(ss_sales_price) sum_sales,\n       avg(sum(ss_sales_price)) over\n         (partition by i_category, i_brand, s_store_name, s_company_name)\n         avg_monthly_sales\nfrom item, store_sales, date_dim, store\nwhere ss_item_sk = i_item_sk and\n      ss_sold_date_sk = d_date_sk and\n      ss_store_sk = s_store_sk and\n      d_year in (2000) and\n        ((i_category in ('Electronics','Jewelry','Women') and\n          i_class in ('audio','birdal','maternity')\n         )\n      or (i_category in ('Children','Men','Books') and\n          i_class in ('newborn','shirts','self-help')\n        ))\ngroup by i_category, i_class, i_brand,\n         s_store_name, s_company_name, d_moy) tmp1\nwhere case when (avg_monthly_sales <> 0) then (abs(sum_sales - avg_monthly_sales) / avg_monthly_sales) else null end > 0.1\norder by sum_sales - avg_monthly_sales, s_store_name\nlimit 100;\n\n\nselect /* { \"query\":\"query15\",\"streamId\":0,\"querySequence\":57 } */  ca_zip\n       ,sum(cs_sales_price)\n from catalog_sales\n     ,customer\n     ,customer_address\n     ,date_dim\n where cs_bill_customer_sk = c_customer_sk\n \tand c_current_addr_sk = ca_address_sk\n \tand ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',\n                                   '85392', '85460', '80348', '81792')\n \t      or ca_state in ('CA','WA','GA')\n \t      or cs_sales_price > 500)\n \tand cs_sold_date_sk = d_date_sk\n \tand d_qoy = 1 and d_year = 2002\n group by ca_zip\n order by ca_zip\n limit 100;\n\n\nselect /* { \"query\":\"query06\",\"streamId\":0,\"querySequence\":58 } */  a.ca_state state, count(*) cnt\n from customer_address a\n     ,customer c\n     ,store_sales s\n     ,date_dim d\n     ,item i\n where       a.ca_address_sk = c.c_current_addr_sk\n \tand c.c_customer_sk = s.ss_customer_sk\n \tand s.ss_sold_date_sk = d.d_date_sk\n \tand s.ss_item_sk = i.i_item_sk\n \tand d.d_month_seq =\n \t     (select distinct (d_month_seq)\n \t      from date_dim\n               where d_year = 1998\n \t        and d_moy = 4 )\n \tand i.i_current_price > 1.2 *\n             (select avg(j.i_current_price)\n \t     from item j\n \t     where j.i_category = i.i_category)\n group by a.ca_state\n having count(*) >= 10\n order by cnt, a.ca_state\n limit 100;\n\n\nselect /* { \"query\":\"query52\",\"streamId\":0,\"querySequence\":59 } */  dt.d_year\n \t,item.i_brand_id brand_id\n \t,item.i_brand brand\n \t,sum(ss_ext_sales_price) ext_price\n from date_dim dt\n     ,store_sales\n     ,item\n where dt.d_date_sk = store_sales.ss_sold_date_sk\n    and store_sales.ss_item_sk = item.i_item_sk\n    and item.i_manager_id = 1\n    and dt.d_moy=12\n    and dt.d_year=2002\n group by dt.d_year\n \t,item.i_brand\n \t,item.i_brand_id\n order by dt.d_year\n \t,ext_price desc\n \t,brand_id\nlimit 100 ;\n\n\nselect /* { \"query\":\"query50\",\"streamId\":0,\"querySequence\":60 } */\n   s_store_name\n  ,s_company_id\n  ,s_street_number\n  ,s_street_name\n  ,s_street_type\n  ,s_suite_number\n  ,s_city\n  ,s_county\n  ,s_state\n  ,s_zip\n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\"\n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 30) and\n                 (sr_returned_date_sk - ss_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\"\n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 60) and\n                 (sr_returned_date_sk - ss_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\"\n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 90) and\n                 (sr_returned_date_sk - ss_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\"\n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\"\nfrom\n   store_sales\n  ,store_returns\n  ,store\n  ,date_dim d1\n  ,date_dim d2\nwhere\n    d2.d_year = 2000\nand d2.d_moy  = 9\nand ss_ticket_number = sr_ticket_number\nand ss_item_sk = sr_item_sk\nand ss_sold_date_sk   = d1.d_date_sk\nand sr_returned_date_sk   = d2.d_date_sk\nand ss_customer_sk = sr_customer_sk\nand ss_store_sk = s_store_sk\ngroup by\n   s_store_name\n  ,s_company_id\n  ,s_street_number\n  ,s_street_name\n  ,s_street_type\n  ,s_suite_number\n  ,s_city\n  ,s_county\n  ,s_state\n  ,s_zip\norder by s_store_name\n        ,s_company_id\n        ,s_street_number\n        ,s_street_name\n        ,s_street_type\n        ,s_suite_number\n        ,s_city\n        ,s_county\n        ,s_state\n        ,s_zip\nlimit 100;\n\n\nselect /* { \"query\":\"query42\",\"streamId\":0,\"querySequence\":61 } */  dt.d_year\n \t,item.i_category_id\n \t,item.i_category\n \t,sum(ss_ext_sales_price)\n from \tdate_dim dt\n \t,store_sales\n \t,item\n where dt.d_date_sk = store_sales.ss_sold_date_sk\n \tand store_sales.ss_item_sk = item.i_item_sk\n \tand item.i_manager_id = 1\n \tand dt.d_moy=12\n \tand dt.d_year=2002\n group by \tdt.d_year\n \t\t,item.i_category_id\n \t\t,item.i_category\n order by       sum(ss_ext_sales_price) desc,dt.d_year\n \t\t,item.i_category_id\n \t\t,item.i_category\nlimit 100 ;\n\n\nselect /* { \"query\":\"query41\",\"streamId\":0,\"querySequence\":62 } */  distinct(i_product_name)\n from item i1\n where i_manufact_id between 691 and 691+40\n   and (select count(*) as item_cnt\n        from item\n        where (i_manufact = i1.i_manufact and\n        ((i_category = 'Women' and\n        (i_color = 'forest' or i_color = 'dodger') and\n        (i_units = 'Tbl' or i_units = 'Carton') and\n        (i_size = 'economy' or i_size = 'large')\n        ) or\n        (i_category = 'Women' and\n        (i_color = 'green' or i_color = 'olive') and\n        (i_units = 'Dram' or i_units = 'Unknown') and\n        (i_size = 'extra large' or i_size = 'petite')\n        ) or\n        (i_category = 'Men' and\n        (i_color = 'navajo' or i_color = 'dark') and\n        (i_units = 'Bundle' or i_units = 'Tsp') and\n        (i_size = 'medium' or i_size = 'N/A')\n        ) or\n        (i_category = 'Men' and\n        (i_color = 'navy' or i_color = 'lace') and\n        (i_units = 'Gross' or i_units = 'Ton') and\n        (i_size = 'economy' or i_size = 'large')\n        ))) or\n       (i_manufact = i1.i_manufact and\n        ((i_category = 'Women' and\n        (i_color = 'chiffon' or i_color = 'medium') and\n        (i_units = 'Pound' or i_units = 'Dozen') and\n        (i_size = 'economy' or i_size = 'large')\n        ) or\n        (i_category = 'Women' and\n        (i_color = 'cornsilk' or i_color = 'grey') and\n        (i_units = 'Box' or i_units = 'Ounce') and\n        (i_size = 'extra large' or i_size = 'petite')\n        ) or\n        (i_category = 'Men' and\n        (i_color = 'sky' or i_color = 'blanched') and\n        (i_units = 'Case' or i_units = 'Gram') and\n        (i_size = 'medium' or i_size = 'N/A')\n        ) or\n        (i_category = 'Men' and\n        (i_color = 'azure' or i_color = 'firebrick') and\n        (i_units = 'N/A' or i_units = 'Cup') and\n        (i_size = 'economy' or i_size = 'large')\n        )))) > 0\n order by i_product_name\n limit 100;\n\n\nselect /* { \"query\":\"query08\",\"streamId\":0,\"querySequence\":63 } */  s_store_name\n      ,sum(ss_net_profit)\n from store_sales\n     ,date_dim\n     ,store,\n     (select ca_zip\n     from (\n      SELECT substr(ca_zip,1,5) ca_zip\n      FROM customer_address\n      WHERE substr(ca_zip,1,5) IN (\n                          '63138','67860','61967','53708','58786','76781',\n                          '57657','22833','40701','19526','24251',\n                          '42756','93357','70900','97478','25826',\n                          '89352','83287','87852','71728','20435',\n                          '97347','12829','31192','68398','77153',\n                          '76831','24463','89163','26332','75358',\n                          '91801','33809','40432','81945','99662',\n                          '97217','57073','65311','74620','37716',\n                          '35022','76576','19259','78957','39704',\n                          '61563','65732','35232','23086','92817',\n                          '28855','11008','92650','10280','57312',\n                          '90853','68049','25184','40886','15096',\n                          '48457','93467','62316','41732','14351',\n                          '46679','19198','34531','67619','21781',\n                          '15762','41893','61351','30899','72568',\n                          '23977','72730','98690','14381','15025',\n                          '11061','91659','63492','30467','58823',\n                          '34225','41751','22966','53904','10850',\n                          '49272','18533','91413','26270','66650',\n                          '78977','32727','41618','86724','89574',\n                          '80102','29243','56284','78679','41170',\n                          '65834','58524','17609','14482','65420',\n                          '61305','61602','55063','29845','37472',\n                          '92495','20762','98534','52840','94611',\n                          '88246','20941','77180','42161','50818',\n                          '59986','42931','96083','39284','42488',\n                          '18887','97244','87237','12691','70174',\n                          '45221','68006','43306','70606','51736',\n                          '69742','44782','22889','94777','78658',\n                          '57896','26701','16853','15015','35216',\n                          '51705','21424','38948','85706','63759',\n                          '43382','36655','43425','76461','27640',\n                          '20462','82792','49093','43674','56981',\n                          '65914','55967','35912','46158','78273',\n                          '38880','53734','41868','34833','67272',\n                          '85734','34147','96967','82112','40226',\n                          '70925','34591','21710','14823','52153',\n                          '38828','52994','15134','66643','39851',\n                          '56582','51108','46155','92016','51482',\n                          '62159','18137','96064','75231','91241',\n                          '82099','51090','77652','88986','21413',\n                          '34541','36011','46399','81547','31527',\n                          '87163','32251','79823','75752','82160',\n                          '10124','96204','95013','40385','25827',\n                          '93942','30382','18596','51115','51175',\n                          '20450','40294','53607','99744','26750',\n                          '44360','70414','70485','27962','99544',\n                          '20113','67297','26745','43124','76481',\n                          '13569','27295','10874','88751','65381',\n                          '35530','53520','74830','36758','34012',\n                          '77294','37011','27942','33548','23328',\n                          '18788','27889','89554','57476','53067',\n                          '90564','59313','24320','59616','78526',\n                          '62798','38573','92977','15249','32892',\n                          '13079','71636','27619','16195','42929',\n                          '35105','74684','21513','86627','77383',\n                          '87610','74689','91817','40620','35374',\n                          '71852','96322','15057','20308','33887',\n                          '44377','80226','29992','13647','74617',\n                          '46066','92902','46500','15191','47218',\n                          '47105','31405','67232','41698','20372',\n                          '43007','50248','11177','30705','11188',\n                          '90478','21509','59137','40264','15195',\n                          '39835','87611','52823','65271','28124',\n                          '61631','13764','71312','35636','91323',\n                          '46111','97081','91071','33770','56410',\n                          '65217','59087','55449','46572','42052',\n                          '42905','72602','80191','33901','97429',\n                          '83423','43443','68275','33275','46878',\n                          '96277','20178','12201','71391','37401',\n                          '66453','42093','45748','95121','86248',\n                          '76141','92863','36918','21700','67505',\n                          '46756','16507','18916','21804','78175',\n                          '13016','64727','39860','83563','16236',\n                          '96737','36363','94082','35839','65560',\n                          '16775','60185','82286','61848','89954',\n                          '62574','87619','35237','69642','32304',\n                          '65704','22592','84696','86673','25711',\n                          '57289','13095','56175','70743','53622',\n                          '16905','88034','55033','70258')\n     intersect\n      select ca_zip\n      from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt\n            FROM customer_address, customer\n            WHERE ca_address_sk = c_current_addr_sk and\n                  c_preferred_cust_flag='Y'\n            group by ca_zip\n            having count(*) > 10)A1)A2) V1\n where ss_store_sk = s_store_sk\n  and ss_sold_date_sk = d_date_sk\n  and d_qoy = 2 and d_year = 2002\n  and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))\n group by s_store_name\n order by s_store_name\n limit 100;\n\n\nselect /* { \"query\":\"query12\",\"streamId\":0,\"querySequence\":64 } */  i_item_id\n      ,i_item_desc\n      ,i_category\n      ,i_class\n      ,i_current_price\n      ,sum(ws_ext_sales_price) as itemrevenue\n      ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over\n          (partition by i_class) as revenueratio\nfrom\n\tweb_sales\n    \t,item\n    \t,date_dim\nwhere\n\tws_item_sk = i_item_sk\n  \tand i_category in ('Women', 'Books', 'Shoes')\n  \tand ws_sold_date_sk = d_date_sk\n\tand d_date between cast('2002-05-01' as date)\n\t\t\t\tand (cast('2002-05-01' as date) + interval '30 days')\ngroup by\n\ti_item_id\n        ,i_item_desc\n        ,i_category\n        ,i_class\n        ,i_current_price\norder by\n\ti_category\n        ,i_class\n        ,i_item_id\n        ,i_item_desc\n        ,revenueratio\nlimit 100;\n\n\nselect /* { \"query\":\"query20\",\"streamId\":0,\"querySequence\":65 } */  i_item_id\n       ,i_item_desc\n       ,i_category\n       ,i_class\n       ,i_current_price\n       ,sum(cs_ext_sales_price) as itemrevenue\n       ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over\n           (partition by i_class) as revenueratio\n from\tcatalog_sales\n     ,item\n     ,date_dim\n where cs_item_sk = i_item_sk\n   and i_category in ('Men', 'Books', 'Electronics')\n   and cs_sold_date_sk = d_date_sk\n and d_date between cast('2002-02-23' as date)\n \t\t\t\tand (cast('2002-02-23' as date) + interval '30 days')\n group by i_item_id\n         ,i_item_desc\n         ,i_category\n         ,i_class\n         ,i_current_price\n order by i_category\n         ,i_class\n         ,i_item_id\n         ,i_item_desc\n         ,revenueratio\nlimit 100;\n\n\nselect /* { \"query\":\"query88\",\"streamId\":0,\"querySequence\":66 } */  *\nfrom\n (select count(*) h8_30_to_9\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 8\n     and time_dim.t_minute >= 30\n     and ((household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2) or\n          (household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or\n          (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2))\n     and store.s_store_name = 'ese') s1,\n (select count(*) h9_to_9_30\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 9\n     and time_dim.t_minute < 30\n     and ((household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2) or\n          (household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or\n          (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2))\n     and store.s_store_name = 'ese') s2,\n (select count(*) h9_30_to_10\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 9\n     and time_dim.t_minute >= 30\n     and ((household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2) or\n          (household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or\n          (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2))\n     and store.s_store_name = 'ese') s3,\n (select count(*) h10_to_10_30\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 10\n     and time_dim.t_minute < 30\n     and ((household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2) or\n          (household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or\n          (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2))\n     and store.s_store_name = 'ese') s4,\n (select count(*) h10_30_to_11\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 10\n     and time_dim.t_minute >= 30\n     and ((household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2) or\n          (household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or\n          (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2))\n     and store.s_store_name = 'ese') s5,\n (select count(*) h11_to_11_30\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 11\n     and time_dim.t_minute < 30\n     and ((household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2) or\n          (household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or\n          (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2))\n     and store.s_store_name = 'ese') s6,\n (select count(*) h11_30_to_12\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 11\n     and time_dim.t_minute >= 30\n     and ((household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2) or\n          (household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or\n          (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2))\n     and store.s_store_name = 'ese') s7,\n (select count(*) h12_to_12_30\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 12\n     and time_dim.t_minute < 30\n     and ((household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2) or\n          (household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or\n          (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2))\n     and store.s_store_name = 'ese') s8\n;\n\n\nselect /* { \"query\":\"query82\",\"streamId\":0,\"querySequence\":67 } */  i_item_id\n       ,i_item_desc\n       ,i_current_price\n from item, inventory, date_dim, store_sales\n where i_current_price between 26 and 26+30\n and inv_item_sk = i_item_sk\n and d_date_sk=inv_date_sk\n and d_date between cast('1999-03-14' as date) and (cast('1999-03-14' as date) + interval '60 days')\n and i_manufact_id in (427,254,976,359)\n and inv_quantity_on_hand between 100 and 500\n and ss_item_sk = i_item_sk\n group by i_item_id,i_item_desc,i_current_price\n order by i_item_id\n limit 100;\n\n\nwith /* { \"query\":\"query23_p1\",\"streamId\":0,\"querySequence\":68 } */ frequent_ss_items as\n (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt\n  from store_sales\n      ,date_dim\n      ,item\n  where ss_sold_date_sk = d_date_sk\n    and ss_item_sk = i_item_sk\n    and d_year in (1999,1999+1,1999+2,1999+3)\n  group by substr(i_item_desc,1,30),i_item_sk,d_date\n  having count(*) >4),\n max_store_sales as\n (select max(csales) tpcds_cmax\n  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales\n        from store_sales\n            ,customer\n            ,date_dim\n        where ss_customer_sk = c_customer_sk\n         and ss_sold_date_sk = d_date_sk\n         and d_year in (1999,1999+1,1999+2,1999+3)\n        group by c_customer_sk)),\n best_ss_customer as\n (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales\n  from store_sales\n      ,customer\n  where ss_customer_sk = c_customer_sk\n  group by c_customer_sk\n  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select\n  *\nfrom\n max_store_sales))\n  select  sum(sales)\n from (select cs_quantity*cs_list_price sales\n       from catalog_sales\n           ,date_dim\n       where d_year = 1999\n         and d_moy = 1\n         and cs_sold_date_sk = d_date_sk\n         and cs_item_sk in (select item_sk from frequent_ss_items)\n         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)\n      union all\n      select ws_quantity*ws_list_price sales\n       from web_sales\n           ,date_dim\n       where d_year = 1999\n         and d_moy = 1\n         and ws_sold_date_sk = d_date_sk\n         and ws_item_sk in (select item_sk from frequent_ss_items)\n         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer))\n limit 100;\nwith /* { \"query\":\"query23_p2\",\"streamId\":0,\"querySequence\":68 } */ frequent_ss_items as\n (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt\n  from store_sales\n      ,date_dim\n      ,item\n  where ss_sold_date_sk = d_date_sk\n    and ss_item_sk = i_item_sk\n    and d_year in (1999,1999 + 1,1999 + 2,1999 + 3)\n  group by substr(i_item_desc,1,30),i_item_sk,d_date\n  having count(*) >4),\n max_store_sales as\n (select max(csales) tpcds_cmax\n  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales\n        from store_sales\n            ,customer\n            ,date_dim\n        where ss_customer_sk = c_customer_sk\n         and ss_sold_date_sk = d_date_sk\n         and d_year in (1999,1999+1,1999+2,1999+3)\n        group by c_customer_sk)),\n best_ss_customer as\n (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales\n  from store_sales\n      ,customer\n  where ss_customer_sk = c_customer_sk\n  group by c_customer_sk\n  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select\n  *\n from max_store_sales))\n  select  c_last_name,c_first_name,sales\n from (select c_last_name,c_first_name,sum(cs_quantity*cs_list_price) sales\n        from catalog_sales\n            ,customer\n            ,date_dim\n        where d_year = 1999\n         and d_moy = 1\n         and cs_sold_date_sk = d_date_sk\n         and cs_item_sk in (select item_sk from frequent_ss_items)\n         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)\n         and cs_bill_customer_sk = c_customer_sk\n       group by c_last_name,c_first_name\n      union all\n      select c_last_name,c_first_name,sum(ws_quantity*ws_list_price) sales\n       from web_sales\n           ,customer\n           ,date_dim\n       where d_year = 1999\n         and d_moy = 1\n         and ws_sold_date_sk = d_date_sk\n         and ws_item_sk in (select item_sk from frequent_ss_items)\n         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)\n         and ws_bill_customer_sk = c_customer_sk\n       group by c_last_name,c_first_name)\n     order by c_last_name,c_first_name,sales\n  limit 100;\n\n\nwith /* { \"query\":\"query14_p1\",\"streamId\":0,\"querySequence\":69 } */  cross_items as\n (select i_item_sk ss_item_sk\n from item,\n (select iss.i_brand_id brand_id\n     ,iss.i_class_id class_id\n     ,iss.i_category_id category_id\n from store_sales\n     ,item iss\n     ,date_dim d1\n where ss_item_sk = iss.i_item_sk\n   and ss_sold_date_sk = d1.d_date_sk\n   and d1.d_year between 1998 AND 1998 + 2\n intersect\n select ics.i_brand_id\n     ,ics.i_class_id\n     ,ics.i_category_id\n from catalog_sales\n     ,item ics\n     ,date_dim d2\n where cs_item_sk = ics.i_item_sk\n   and cs_sold_date_sk = d2.d_date_sk\n   and d2.d_year between 1998 AND 1998 + 2\n intersect\n select iws.i_brand_id\n     ,iws.i_class_id\n     ,iws.i_category_id\n from web_sales\n     ,item iws\n     ,date_dim d3\n where ws_item_sk = iws.i_item_sk\n   and ws_sold_date_sk = d3.d_date_sk\n   and d3.d_year between 1998 AND 1998 + 2)\n where i_brand_id = brand_id\n      and i_class_id = class_id\n      and i_category_id = category_id\n),\n avg_sales as\n (select avg(quantity*list_price) average_sales\n  from (select ss_quantity quantity\n             ,ss_list_price list_price\n       from store_sales\n           ,date_dim\n       where ss_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2\n       union all\n       select cs_quantity quantity\n             ,cs_list_price list_price\n       from catalog_sales\n           ,date_dim\n       where cs_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2\n       union all\n       select ws_quantity quantity\n             ,ws_list_price list_price\n       from web_sales\n           ,date_dim\n       where ws_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2) x)\n  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)\n from(\n       select 'store' channel, i_brand_id,i_class_id\n             ,i_category_id,sum(ss_quantity*ss_list_price) sales\n             , count(*) number_sales\n       from store_sales\n           ,item\n           ,date_dim\n       where ss_item_sk in (select ss_item_sk from cross_items)\n         and ss_item_sk = i_item_sk\n         and ss_sold_date_sk = d_date_sk\n         and d_year = 1998+2\n         and d_moy = 11\n       group by i_brand_id,i_class_id,i_category_id\n       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)\n       union all\n       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales\n       from catalog_sales\n           ,item\n           ,date_dim\n       where cs_item_sk in (select ss_item_sk from cross_items)\n         and cs_item_sk = i_item_sk\n         and cs_sold_date_sk = d_date_sk\n         and d_year = 1998+2\n         and d_moy = 11\n       group by i_brand_id,i_class_id,i_category_id\n       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)\n       union all\n       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales\n       from web_sales\n           ,item\n           ,date_dim\n       where ws_item_sk in (select ss_item_sk from cross_items)\n         and ws_item_sk = i_item_sk\n         and ws_sold_date_sk = d_date_sk\n         and d_year = 1998+2\n         and d_moy = 11\n       group by i_brand_id,i_class_id,i_category_id\n       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)\n ) y\n group by rollup (channel, i_brand_id,i_class_id,i_category_id)\n order by channel,i_brand_id,i_class_id,i_category_id\n limit 100;\nwith /* { \"query\":\"query14_p2\",\"streamId\":0,\"querySequence\":69 } */  cross_items as\n (select i_item_sk ss_item_sk\n from item,\n (select iss.i_brand_id brand_id\n     ,iss.i_class_id class_id\n     ,iss.i_category_id category_id\n from store_sales\n     ,item iss\n     ,date_dim d1\n where ss_item_sk = iss.i_item_sk\n   and ss_sold_date_sk = d1.d_date_sk\n   and d1.d_year between 1998 AND 1998 + 2\n intersect\n select ics.i_brand_id\n     ,ics.i_class_id\n     ,ics.i_category_id\n from catalog_sales\n     ,item ics\n     ,date_dim d2\n where cs_item_sk = ics.i_item_sk\n   and cs_sold_date_sk = d2.d_date_sk\n   and d2.d_year between 1998 AND 1998 + 2\n intersect\n select iws.i_brand_id\n     ,iws.i_class_id\n     ,iws.i_category_id\n from web_sales\n     ,item iws\n     ,date_dim d3\n where ws_item_sk = iws.i_item_sk\n   and ws_sold_date_sk = d3.d_date_sk\n   and d3.d_year between 1998 AND 1998 + 2) x\n where i_brand_id = brand_id\n      and i_class_id = class_id\n      and i_category_id = category_id\n),\n avg_sales as\n(select avg(quantity*list_price) average_sales\n  from (select ss_quantity quantity\n             ,ss_list_price list_price\n       from store_sales\n           ,date_dim\n       where ss_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2\n       union all\n       select cs_quantity quantity\n             ,cs_list_price list_price\n       from catalog_sales\n           ,date_dim\n       where cs_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2\n       union all\n       select ws_quantity quantity\n             ,ws_list_price list_price\n       from web_sales\n           ,date_dim\n       where ws_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2) x)\n  select  this_year.channel ty_channel\n                           ,this_year.i_brand_id ty_brand\n                           ,this_year.i_class_id ty_class\n                           ,this_year.i_category_id ty_category\n                           ,this_year.sales ty_sales\n                           ,this_year.number_sales ty_number_sales\n                           ,last_year.channel ly_channel\n                           ,last_year.i_brand_id ly_brand\n                           ,last_year.i_class_id ly_class\n                           ,last_year.i_category_id ly_category\n                           ,last_year.sales ly_sales\n                           ,last_year.number_sales ly_number_sales\n from\n (select 'store' channel, i_brand_id,i_class_id,i_category_id\n        ,sum(ss_quantity*ss_list_price) sales, count(*) number_sales\n from store_sales\n     ,item\n     ,date_dim\n where ss_item_sk in (select ss_item_sk from cross_items)\n   and ss_item_sk = i_item_sk\n   and ss_sold_date_sk = d_date_sk\n   and d_week_seq = (select d_week_seq\n                     from date_dim\n                     where d_year = 1998 + 1\n                       and d_moy = 12\n                       and d_dom = 12)\n group by i_brand_id,i_class_id,i_category_id\n having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) this_year,\n (select 'store' channel, i_brand_id,i_class_id\n        ,i_category_id, sum(ss_quantity*ss_list_price) sales, count(*) number_sales\n from store_sales\n     ,item\n     ,date_dim\n where ss_item_sk in (select ss_item_sk from cross_items)\n   and ss_item_sk = i_item_sk\n   and ss_sold_date_sk = d_date_sk\n   and d_week_seq = (select d_week_seq\n                     from date_dim\n                     where d_year = 1998\n                       and d_moy = 12\n                       and d_dom = 12)\n group by i_brand_id,i_class_id,i_category_id\n having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) last_year\n where this_year.i_brand_id= last_year.i_brand_id\n   and this_year.i_class_id = last_year.i_class_id\n   and this_year.i_category_id = last_year.i_category_id\n order by this_year.channel, this_year.i_brand_id, this_year.i_class_id, this_year.i_category_id\n limit 100;\n\n\nwith /* { \"query\":\"query57\",\"streamId\":0,\"querySequence\":70 } */ v1 as(\n select i_category, i_brand,\n        cc_name,\n        d_year, d_moy,\n        sum(cs_sales_price) sum_sales,\n        avg(sum(cs_sales_price)) over\n          (partition by i_category, i_brand,\n                     cc_name, d_year)\n          avg_monthly_sales,\n        rank() over\n          (partition by i_category, i_brand,\n                     cc_name\n           order by d_year, d_moy) rn\n from item, catalog_sales, date_dim, call_center\n where cs_item_sk = i_item_sk and\n       cs_sold_date_sk = d_date_sk and\n       cc_call_center_sk= cs_call_center_sk and\n       (\n         d_year = 1999 or\n         ( d_year = 1999-1 and d_moy =12) or\n         ( d_year = 1999+1 and d_moy =1)\n       )\n group by i_category, i_brand,\n          cc_name , d_year, d_moy),\n v2 as(\n select v1.i_brand\n        ,v1.d_year, v1.d_moy\n        ,v1.avg_monthly_sales\n        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum\n from v1, v1 v1_lag, v1 v1_lead\n where v1.i_category = v1_lag.i_category and\n       v1.i_category = v1_lead.i_category and\n       v1.i_brand = v1_lag.i_brand and\n       v1.i_brand = v1_lead.i_brand and\n       v1. cc_name = v1_lag. cc_name and\n       v1. cc_name = v1_lead. cc_name and\n       v1.rn = v1_lag.rn + 1 and\n       v1.rn = v1_lead.rn - 1)\n  select  *\n from v2\n where  d_year = 1999 and\n        avg_monthly_sales > 0 and\n        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1\n order by sum_sales - avg_monthly_sales, nsum\n limit 100;\n\n\nselect /* { \"query\":\"query65\",\"streamId\":0,\"querySequence\":71 } */\n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n     (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t    (select  ss_store_sk, ss_item_sk,\n \t\t     sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1201 and 1201+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n     (select  ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1201 and 1201+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and\n       sc.revenue <= 0.1 * sb.ave and\n       s_store_sk = sc.ss_store_sk and\n       i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;\n\n\nselect /* { \"query\":\"query71\",\"streamId\":0,\"querySequence\":72 } */ i_brand_id brand_id, i_brand brand,t_hour,t_minute,\n \tsum(ext_price) ext_price\n from item, (select ws_ext_sales_price as ext_price,\n                        ws_sold_date_sk as sold_date_sk,\n                        ws_item_sk as sold_item_sk,\n                        ws_sold_time_sk as time_sk\n                 from web_sales,date_dim\n                 where d_date_sk = ws_sold_date_sk\n                   and d_moy=11\n                   and d_year=1998\n                 union all\n                 select cs_ext_sales_price as ext_price,\n                        cs_sold_date_sk as sold_date_sk,\n                        cs_item_sk as sold_item_sk,\n                        cs_sold_time_sk as time_sk\n                 from catalog_sales,date_dim\n                 where d_date_sk = cs_sold_date_sk\n                   and d_moy=11\n                   and d_year=1998\n                 union all\n                 select ss_ext_sales_price as ext_price,\n                        ss_sold_date_sk as sold_date_sk,\n                        ss_item_sk as sold_item_sk,\n                        ss_sold_time_sk as time_sk\n                 from store_sales,date_dim\n                 where d_date_sk = ss_sold_date_sk\n                   and d_moy=11\n                   and d_year=1998\n                 ) tmp,time_dim\n where\n   sold_item_sk = i_item_sk\n   and i_manager_id=1\n   and time_sk = t_time_sk\n   and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')\n group by i_brand, i_brand_id,t_hour,t_minute\n order by ext_price desc, i_brand_id\n ;\n\n\nselect /* { \"query\":\"query34\",\"streamId\":0,\"querySequence\":73 } */ c_last_name\n       ,c_first_name\n       ,c_salutation\n       ,c_preferred_cust_flag\n       ,ss_ticket_number\n       ,cnt from\n   (select ss_ticket_number\n          ,ss_customer_sk\n          ,count(*) cnt\n    from store_sales,date_dim,store,household_demographics\n    where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n    and store_sales.ss_store_sk = store.s_store_sk\n    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    and (date_dim.d_dom between 1 and 3 or date_dim.d_dom between 25 and 28)\n    and (household_demographics.hd_buy_potential = '1001-5000' or\n         household_demographics.hd_buy_potential = 'Unknown')\n    and household_demographics.hd_vehicle_count > 0\n    and (case when household_demographics.hd_vehicle_count > 0\n\tthen household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count\n\telse null\n\tend)  > 1.2\n    and date_dim.d_year in (2000,2000+1,2000+2)\n    and store.s_county in ('Harmon County','Tehama County','Huron County','Brazos County',\n                           'Mesa County','Somerset County','Abbeville County','Van Buren County')\n    group by ss_ticket_number,ss_customer_sk) dn,customer\n    where ss_customer_sk = c_customer_sk\n      and cnt between 15 and 20\n    order by c_last_name,c_first_name,c_salutation,c_preferred_cust_flag desc, ss_ticket_number;\n\n\nselect /* { \"query\":\"query48\",\"streamId\":0,\"querySequence\":74 } */ sum (ss_quantity)\n from store_sales, store, customer_demographics, customer_address, date_dim\n where s_store_sk = ss_store_sk\n and  ss_sold_date_sk = d_date_sk and d_year = 1999\n and\n (\n  (\n   cd_demo_sk = ss_cdemo_sk\n   and\n   cd_marital_status = 'M'\n   and\n   cd_education_status = 'Advanced Degree'\n   and\n   ss_sales_price between 100.00 and 150.00\n   )\n or\n  (\n  cd_demo_sk = ss_cdemo_sk\n   and\n   cd_marital_status = 'W'\n   and\n   cd_education_status = 'College'\n   and\n   ss_sales_price between 50.00 and 100.00\n  )\n or\n (\n  cd_demo_sk = ss_cdemo_sk\n  and\n   cd_marital_status = 'U'\n   and\n   cd_education_status = '2 yr Degree'\n   and\n   ss_sales_price between 150.00 and 200.00\n )\n )\n and\n (\n  (\n  ss_addr_sk = ca_address_sk\n  and\n  ca_country = 'United States'\n  and\n  ca_state in ('NC', 'SD', 'MS')\n  and ss_net_profit between 0 and 2000\n  )\n or\n  (ss_addr_sk = ca_address_sk\n  and\n  ca_country = 'United States'\n  and\n  ca_state in ('MN', 'KS', 'IN')\n  and ss_net_profit between 150 and 3000\n  )\n or\n  (ss_addr_sk = ca_address_sk\n  and\n  ca_country = 'United States'\n  and\n  ca_state in ('AR', 'ND', 'TX')\n  and ss_net_profit between 50 and 25000\n  )\n )\n;\n\n\nwith /* { \"query\":\"query30\",\"streamId\":0,\"querySequence\":75 } */ customer_total_return as\n (select wr_returning_customer_sk as ctr_customer_sk\n        ,ca_state as ctr_state,\n \tsum(wr_return_amt) as ctr_total_return\n from web_returns\n     ,date_dim\n     ,customer_address\n where wr_returned_date_sk = d_date_sk\n   and d_year =2001\n   and wr_returning_addr_sk = ca_address_sk\n group by wr_returning_customer_sk\n         ,ca_state)\n  select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag\n       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address\n       ,c_last_review_date,ctr_total_return\n from customer_total_return ctr1\n     ,customer_address\n     ,customer\n where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2\n \t\t\t  from customer_total_return ctr2\n                  \t  where ctr1.ctr_state = ctr2.ctr_state)\n       and ca_address_sk = c_current_addr_sk\n       and ca_state = 'AR'\n       and ctr1.ctr_customer_sk = c_customer_sk\n order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag\n                  ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address\n                  ,c_last_review_date,ctr_total_return\nlimit 100;\n\n\nwith /* { \"query\":\"query74\",\"streamId\":0,\"querySequence\":76 } */ year_total as (\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,d_year as year\n       ,max(ss_net_paid) year_total\n       ,'s' sale_type\n from customer\n     ,store_sales\n     ,date_dim\n where c_customer_sk = ss_customer_sk\n   and ss_sold_date_sk = d_date_sk\n   and d_year in (2001,2001+1)\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,d_year\n union all\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,d_year as year\n       ,max(ws_net_paid) year_total\n       ,'w' sale_type\n from customer\n     ,web_sales\n     ,date_dim\n where c_customer_sk = ws_bill_customer_sk\n   and ws_sold_date_sk = d_date_sk\n   and d_year in (2001,2001+1)\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,d_year\n         )\n  select\n        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name\n from year_total t_s_firstyear\n     ,year_total t_s_secyear\n     ,year_total t_w_firstyear\n     ,year_total t_w_secyear\n where t_s_secyear.customer_id = t_s_firstyear.customer_id\n         and t_s_firstyear.customer_id = t_w_secyear.customer_id\n         and t_s_firstyear.customer_id = t_w_firstyear.customer_id\n         and t_s_firstyear.sale_type = 's'\n         and t_w_firstyear.sale_type = 'w'\n         and t_s_secyear.sale_type = 's'\n         and t_w_secyear.sale_type = 'w'\n         and t_s_firstyear.year = 2001\n         and t_s_secyear.year = 2001+1\n         and t_w_firstyear.year = 2001\n         and t_w_secyear.year = 2001+1\n         and t_s_firstyear.year_total > 0\n         and t_w_firstyear.year_total > 0\n         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end\n           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end\n order by 1,3,2\nlimit 100;\n\n\nselect /* { \"query\":\"query87\",\"streamId\":0,\"querySequence\":77 } */ count(*)\nfrom ((select distinct c_last_name, c_first_name, d_date\n       from store_sales, date_dim, customer\n       where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n         and store_sales.ss_customer_sk = customer.c_customer_sk\n         and d_month_seq between 1182 and 1182+11)\n       except\n      (select distinct c_last_name, c_first_name, d_date\n       from catalog_sales, date_dim, customer\n       where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk\n         and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk\n         and d_month_seq between 1182 and 1182+11)\n       except\n      (select distinct c_last_name, c_first_name, d_date\n       from web_sales, date_dim, customer\n       where web_sales.ws_sold_date_sk = date_dim.d_date_sk\n         and web_sales.ws_bill_customer_sk = customer.c_customer_sk\n         and d_month_seq between 1182 and 1182+11)\n) cool_cust\n;\n\n\nwith /* { \"query\":\"query77\",\"streamId\":0,\"querySequence\":78 } */ ss as\n (select s_store_sk,\n         sum(ss_ext_sales_price) as sales,\n         sum(ss_net_profit) as profit\n from store_sales,\n      date_dim,\n      store\n where ss_sold_date_sk = d_date_sk\n       and d_date between cast('2001-08-21' as date)\n                  and (cast('2001-08-21' as date) + interval '30 days')\n       and ss_store_sk = s_store_sk\n group by s_store_sk)\n ,\n sr as\n (select s_store_sk,\n         sum(sr_return_amt) as returns,\n         sum(sr_net_loss) as profit_loss\n from store_returns,\n      date_dim,\n      store\n where sr_returned_date_sk = d_date_sk\n       and d_date between cast('2001-08-21' as date)\n                  and (cast('2001-08-21' as date) + interval '30 days')\n       and sr_store_sk = s_store_sk\n group by s_store_sk),\n cs as\n (select cs_call_center_sk,\n        sum(cs_ext_sales_price) as sales,\n        sum(cs_net_profit) as profit\n from catalog_sales,\n      date_dim\n where cs_sold_date_sk = d_date_sk\n       and d_date between cast('2001-08-21' as date)\n                  and (cast('2001-08-21' as date) + interval '30 days')\n group by cs_call_center_sk\n ),\n cr as\n (select cr_call_center_sk,\n         sum(cr_return_amount) as returns,\n         sum(cr_net_loss) as profit_loss\n from catalog_returns,\n      date_dim\n where cr_returned_date_sk = d_date_sk\n       and d_date between cast('2001-08-21' as date)\n                  and (cast('2001-08-21' as date) + interval '30 days')\n group by cr_call_center_sk\n ),\n ws as\n ( select wp_web_page_sk,\n        sum(ws_ext_sales_price) as sales,\n        sum(ws_net_profit) as profit\n from web_sales,\n      date_dim,\n      web_page\n where ws_sold_date_sk = d_date_sk\n       and d_date between cast('2001-08-21' as date)\n                  and (cast('2001-08-21' as date) + interval '30 days')\n       and ws_web_page_sk = wp_web_page_sk\n group by wp_web_page_sk),\n wr as\n (select wp_web_page_sk,\n        sum(wr_return_amt) as returns,\n        sum(wr_net_loss) as profit_loss\n from web_returns,\n      date_dim,\n      web_page\n where wr_returned_date_sk = d_date_sk\n       and d_date between cast('2001-08-21' as date)\n                  and (cast('2001-08-21' as date) + interval '30 days')\n       and wr_web_page_sk = wp_web_page_sk\n group by wp_web_page_sk)\n  select  channel\n        , id\n        , sum(sales) as sales\n        , sum(returns) as returns\n        , sum(profit) as profit\n from\n (select 'store channel' as channel\n        , ss.s_store_sk as id\n        , sales\n        , coalesce(returns, 0) as returns\n        , (profit - coalesce(profit_loss,0)) as profit\n from   ss left join sr\n        on  ss.s_store_sk = sr.s_store_sk\n union all\n select 'catalog channel' as channel\n        , cs_call_center_sk as id\n        , sales\n        , returns\n        , (profit - profit_loss) as profit\n from  cs\n       , cr\n union all\n select 'web channel' as channel\n        , ws.wp_web_page_sk as id\n        , sales\n        , coalesce(returns, 0) returns\n        , (profit - coalesce(profit_loss,0)) as profit\n from   ws left join wr\n        on  ws.wp_web_page_sk = wr.wp_web_page_sk\n ) x\n group by rollup (channel, id)\n order by channel\n         ,id\n limit 100;\n\n\nselect /* { \"query\":\"query73\",\"streamId\":0,\"querySequence\":79 } */ c_last_name\n       ,c_first_name\n       ,c_salutation\n       ,c_preferred_cust_flag\n       ,ss_ticket_number\n       ,cnt from\n   (select ss_ticket_number\n          ,ss_customer_sk\n          ,count(*) cnt\n    from store_sales,date_dim,store,household_demographics\n    where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n    and store_sales.ss_store_sk = store.s_store_sk\n    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    and date_dim.d_dom between 1 and 2\n    and (household_demographics.hd_buy_potential = '1001-5000' or\n         household_demographics.hd_buy_potential = '5001-10000')\n    and household_demographics.hd_vehicle_count > 0\n    and case when household_demographics.hd_vehicle_count > 0 then\n             household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count else null end > 1\n    and date_dim.d_year in (1998,1998+1,1998+2)\n    and store.s_county in ('Dauphin County','Walker County','Quay County','Marshall County')\n    group by ss_ticket_number,ss_customer_sk) dj,customer\n    where ss_customer_sk = c_customer_sk\n      and cnt between 1 and 5\n    order by cnt desc, c_last_name asc;\n\n\nselect /* { \"query\":\"query84\",\"streamId\":0,\"querySequence\":80 } */  c_customer_id as customer_id\n       , coalesce(c_last_name,'') || ', ' || coalesce(c_first_name,'') as customername\n from customer\n     ,customer_address\n     ,customer_demographics\n     ,household_demographics\n     ,income_band\n     ,store_returns\n where ca_city\t        =  'Bunker Hill'\n   and c_current_addr_sk = ca_address_sk\n   and ib_lower_bound   >=  1797\n   and ib_upper_bound   <=  1797 + 50000\n   and ib_income_band_sk = hd_income_band_sk\n   and cd_demo_sk = c_current_cdemo_sk\n   and hd_demo_sk = c_current_hdemo_sk\n   and sr_cdemo_sk = cd_demo_sk\n order by c_customer_id\n limit 100;\n\n\nwith /* { \"query\":\"query54\",\"streamId\":0,\"querySequence\":81 } */ my_customers as (\n select distinct c_customer_sk\n        , c_current_addr_sk\n from\n        ( select cs_sold_date_sk sold_date_sk,\n                 cs_bill_customer_sk customer_sk,\n                 cs_item_sk item_sk\n          from   catalog_sales\n          union all\n          select ws_sold_date_sk sold_date_sk,\n                 ws_bill_customer_sk customer_sk,\n                 ws_item_sk item_sk\n          from   web_sales\n         ) cs_or_ws_sales,\n         item,\n         date_dim,\n         customer\n where   sold_date_sk = d_date_sk\n         and item_sk = i_item_sk\n         and i_category = 'Children'\n         and i_class = 'infants'\n         and c_customer_sk = cs_or_ws_sales.customer_sk\n         and d_moy = 2\n         and d_year = 1999\n )\n , my_revenue as (\n select c_customer_sk,\n        sum(ss_ext_sales_price) as revenue\n from   my_customers,\n        store_sales,\n        customer_address,\n        store,\n        date_dim\n where  c_current_addr_sk = ca_address_sk\n        and ca_county = s_county\n        and ca_state = s_state\n        and ss_sold_date_sk = d_date_sk\n        and c_customer_sk = ss_customer_sk\n        and d_month_seq between (select distinct d_month_seq+1\n                                 from   date_dim where d_year = 1999 and d_moy = 2)\n                           and  (select distinct d_month_seq+3\n                                 from   date_dim where d_year = 1999 and d_moy = 2)\n group by c_customer_sk\n )\n , segments as\n (select cast((revenue/50) as int) as segment\n  from   my_revenue\n )\n  select  segment, count(*) as num_customers, segment*50 as segment_base\n from segments\n group by segment\n order by segment, num_customers\n limit 100;\n\n\nselect /* { \"query\":\"query55\",\"streamId\":0,\"querySequence\":82 } */  i_brand_id brand_id, i_brand brand,\n \tsum(ss_ext_sales_price) ext_price\n from date_dim, store_sales, item\n where d_date_sk = ss_sold_date_sk\n \tand ss_item_sk = i_item_sk\n \tand i_manager_id=69\n \tand d_moy=12\n \tand d_year=2002\n group by i_brand, i_brand_id\n order by ext_price desc, i_brand_id\nlimit 100 ;\n\n\nwith /* { \"query\":\"query56\",\"streamId\":0,\"querySequence\":83 } */ ss as (\n select i_item_id,sum(ss_ext_sales_price) total_sales\n from\n \tstore_sales,\n \tdate_dim,\n         customer_address,\n         item\n where i_item_id in (select\n     i_item_id\nfrom item\nwhere i_color in ('yellow','honeydew','orchid'))\n and     ss_item_sk              = i_item_sk\n and     ss_sold_date_sk         = d_date_sk\n and     d_year                  = 1999\n and     d_moy                   = 3\n and     ss_addr_sk              = ca_address_sk\n and     ca_gmt_offset           = -5\n group by i_item_id),\n cs as (\n select i_item_id,sum(cs_ext_sales_price) total_sales\n from\n \tcatalog_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id               in (select\n  i_item_id\nfrom item\nwhere i_color in ('yellow','honeydew','orchid'))\n and     cs_item_sk              = i_item_sk\n and     cs_sold_date_sk         = d_date_sk\n and     d_year                  = 1999\n and     d_moy                   = 3\n and     cs_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -5\n group by i_item_id),\n ws as (\n select i_item_id,sum(ws_ext_sales_price) total_sales\n from\n \tweb_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id               in (select\n  i_item_id\nfrom item\nwhere i_color in ('yellow','honeydew','orchid'))\n and     ws_item_sk              = i_item_sk\n and     ws_sold_date_sk         = d_date_sk\n and     d_year                  = 1999\n and     d_moy                   = 3\n and     ws_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -5\n group by i_item_id)\n  select  i_item_id ,sum(total_sales) total_sales\n from  (select * from ss\n        union all\n        select * from cs\n        union all\n        select * from ws) tmp1\n group by i_item_id\n order by total_sales,\n          i_item_id\n limit 100;\n\n\nwith /* { \"query\":\"query02\",\"streamId\":0,\"querySequence\":84 } */ wscs as\n (select sold_date_sk\n        ,sales_price\n  from (select ws_sold_date_sk sold_date_sk\n              ,ws_ext_sales_price sales_price\n        from web_sales\n        union all\n        select cs_sold_date_sk sold_date_sk\n              ,cs_ext_sales_price sales_price\n        from catalog_sales)),\n wswscs as\n (select d_week_seq,\n        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,\n        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,\n        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,\n        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,\n        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,\n        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,\n        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales\n from wscs\n     ,date_dim\n where d_date_sk = sold_date_sk\n group by d_week_seq)\n select d_week_seq1\n       ,round(sun_sales1/sun_sales2,2)\n       ,round(mon_sales1/mon_sales2,2)\n       ,round(tue_sales1/tue_sales2,2)\n       ,round(wed_sales1/wed_sales2,2)\n       ,round(thu_sales1/thu_sales2,2)\n       ,round(fri_sales1/fri_sales2,2)\n       ,round(sat_sales1/sat_sales2,2)\n from\n (select wswscs.d_week_seq d_week_seq1\n        ,sun_sales sun_sales1\n        ,mon_sales mon_sales1\n        ,tue_sales tue_sales1\n        ,wed_sales wed_sales1\n        ,thu_sales thu_sales1\n        ,fri_sales fri_sales1\n        ,sat_sales sat_sales1\n  from wswscs,date_dim\n  where date_dim.d_week_seq = wswscs.d_week_seq and\n        d_year = 1999) y,\n (select wswscs.d_week_seq d_week_seq2\n        ,sun_sales sun_sales2\n        ,mon_sales mon_sales2\n        ,tue_sales tue_sales2\n        ,wed_sales wed_sales2\n        ,thu_sales thu_sales2\n        ,fri_sales fri_sales2\n        ,sat_sales sat_sales2\n  from wswscs\n      ,date_dim\n  where date_dim.d_week_seq = wswscs.d_week_seq and\n        d_year = 1999+1) z\n where d_week_seq1=d_week_seq2-53\n order by d_week_seq1;\n\n\nselect /* { \"query\":\"query26\",\"streamId\":0,\"querySequence\":85 } */  i_item_id,\n        avg(cs_quantity) agg1,\n        avg(cs_list_price) agg2,\n        avg(cs_coupon_amt) agg3,\n        avg(cs_sales_price) agg4\n from catalog_sales, customer_demographics, date_dim, item, promotion\n where cs_sold_date_sk = d_date_sk and\n       cs_item_sk = i_item_sk and\n       cs_bill_cdemo_sk = cd_demo_sk and\n       cs_promo_sk = p_promo_sk and\n       cd_gender = 'M' and\n       cd_marital_status = 'U' and\n       cd_education_status = 'Primary' and\n       (p_channel_email = 'N' or p_channel_event = 'N') and\n       d_year = 1999\n group by i_item_id\n order by i_item_id\n limit 100;\n\n\nselect /* { \"query\":\"query40\",\"streamId\":0,\"querySequence\":86 } */\n   w_state\n  ,i_item_id\n  ,sum(case when (cast(d_date as date) < cast ('2002-06-04' as date))\n \t\tthen cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before\n  ,sum(case when (cast(d_date as date) >= cast ('2002-06-04' as date))\n \t\tthen cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after\n from\n   catalog_sales left outer join catalog_returns on\n       (cs_order_number = cr_order_number\n        and cs_item_sk = cr_item_sk)\n  ,warehouse\n  ,item\n  ,date_dim\n where\n     i_current_price between 0.99 and 1.49\n and i_item_sk          = cs_item_sk\n and cs_warehouse_sk    = w_warehouse_sk\n and cs_sold_date_sk    = d_date_sk\n and d_date between (cast ('2002-06-04' as date) - interval '30 days')\n                and (cast ('2002-06-04' as date) + interval '30 days')\n group by\n    w_state,i_item_id\n order by w_state,i_item_id\nlimit 100;\n\n\nselect /* { \"query\":\"query72\",\"streamId\":0,\"querySequence\":87 } */  i_item_desc\n      ,w_warehouse_name\n      ,d1.d_week_seq\n      ,sum(case when p_promo_sk is null then 1 else 0 end) no_promo\n      ,sum(case when p_promo_sk is not null then 1 else 0 end) promo\n      ,count(*) total_cnt\nfrom catalog_sales\njoin inventory on (cs_item_sk = inv_item_sk)\njoin warehouse on (w_warehouse_sk=inv_warehouse_sk)\njoin item on (i_item_sk = cs_item_sk)\njoin customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)\njoin household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)\njoin date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)\njoin date_dim d2 on (inv_date_sk = d2.d_date_sk)\njoin date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)\nleft outer join promotion on (cs_promo_sk=p_promo_sk)\nleft outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)\nwhere d1.d_week_seq = d2.d_week_seq\n  and inv_quantity_on_hand < cs_quantity\n  and d3.d_date > d1.d_date + 5\n  and hd_buy_potential = '1001-5000'\n  and d1.d_year = 1998\n  and cd_marital_status = 'D'\ngroup by i_item_desc,w_warehouse_name,d1.d_week_seq\norder by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq\nlimit 100;\n\n\nselect /* { \"query\":\"query53\",\"streamId\":0,\"querySequence\":88 } */  * from\n(select i_manufact_id,\nsum(ss_sales_price) sum_sales,\navg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales\nfrom item, store_sales, date_dim, store\nwhere ss_item_sk = i_item_sk and\nss_sold_date_sk = d_date_sk and\nss_store_sk = s_store_sk and\nd_month_seq in (1179,1179+1,1179+2,1179+3,1179+4,1179+5,1179+6,1179+7,1179+8,1179+9,1179+10,1179+11) and\n((i_category in ('Books','Children','Electronics') and\ni_class in ('personal','portable','reference','self-help') and\ni_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',\n\t\t'exportiunivamalg #9','scholaramalgamalg #9'))\nor(i_category in ('Women','Music','Men') and\ni_class in ('accessories','classical','fragrances','pants') and\ni_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',\n\t\t'importoamalg #1')))\ngroup by i_manufact_id, d_qoy ) tmp1\nwhere case when avg_quarterly_sales > 0\n\tthen abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales\n\telse null end > 0.1\norder by avg_quarterly_sales,\n\t sum_sales,\n\t i_manufact_id\nlimit 100;\n\n\nselect /* { \"query\":\"query79\",\"streamId\":0,\"querySequence\":89 } */\n  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit\n  from\n   (select ss_ticket_number\n          ,ss_customer_sk\n          ,store.s_city\n          ,sum(ss_coupon_amt) amt\n          ,sum(ss_net_profit) profit\n    from store_sales,date_dim,store,household_demographics\n    where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n    and store_sales.ss_store_sk = store.s_store_sk\n    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    and (household_demographics.hd_dep_count = 5 or household_demographics.hd_vehicle_count > 3)\n    and date_dim.d_dow = 1\n    and date_dim.d_year in (1998,1998+1,1998+2)\n    and store.s_number_employees between 200 and 295\n    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer\n    where ss_customer_sk = c_customer_sk\n order by c_last_name,c_first_name,substr(s_city,1,30), profit\nlimit 100;\n\n\nselect /* { \"query\":\"query18\",\"streamId\":0,\"querySequence\":90 } */  i_item_id,\n        ca_country,\n        ca_state,\n        ca_county,\n        avg( cast(cs_quantity as decimal(12,2))) agg1,\n        avg( cast(cs_list_price as decimal(12,2))) agg2,\n        avg( cast(cs_coupon_amt as decimal(12,2))) agg3,\n        avg( cast(cs_sales_price as decimal(12,2))) agg4,\n        avg( cast(cs_net_profit as decimal(12,2))) agg5,\n        avg( cast(c_birth_year as decimal(12,2))) agg6,\n        avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7\n from catalog_sales, customer_demographics cd1,\n      customer_demographics cd2, customer, customer_address, date_dim, item\n where cs_sold_date_sk = d_date_sk and\n       cs_item_sk = i_item_sk and\n       cs_bill_cdemo_sk = cd1.cd_demo_sk and\n       cs_bill_customer_sk = c_customer_sk and\n       cd1.cd_gender = 'M' and\n       cd1.cd_education_status = '2 yr Degree' and\n       c_current_cdemo_sk = cd2.cd_demo_sk and\n       c_current_addr_sk = ca_address_sk and\n       c_birth_month in (7,1,3,9,5,8) and\n       d_year = 2002 and\n       ca_state in ('IL','NM','GA'\n                   ,'MD','OH','MO','OR')\n group by rollup (i_item_id, ca_country, ca_state, ca_county)\n order by ca_country,\n        ca_state,\n        ca_county,\n\ti_item_id\n limit 100;\n\n\nselect /* { \"query\":\"query13\",\"streamId\":0,\"querySequence\":91 } */ avg(ss_quantity)\n       ,avg(ss_ext_sales_price)\n       ,avg(ss_ext_wholesale_cost)\n       ,sum(ss_ext_wholesale_cost)\n from store_sales\n     ,store\n     ,customer_demographics\n     ,household_demographics\n     ,customer_address\n     ,date_dim\n where s_store_sk = ss_store_sk\n and  ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n  and cd_demo_sk = ss_cdemo_sk\n  and cd_marital_status = 'S'\n  and cd_education_status = 'Primary'\n  and ss_sales_price between 100.00 and 150.00\n  and hd_dep_count = 3\n     )or\n     (ss_hdemo_sk=hd_demo_sk\n  and cd_demo_sk = ss_cdemo_sk\n  and cd_marital_status = 'M'\n  and cd_education_status = 'College'\n  and ss_sales_price between 50.00 and 100.00\n  and hd_dep_count = 1\n     ) or\n     (ss_hdemo_sk=hd_demo_sk\n  and cd_demo_sk = ss_cdemo_sk\n  and cd_marital_status = 'D'\n  and cd_education_status = 'Advanced Degree'\n  and ss_sales_price between 150.00 and 200.00\n  and hd_dep_count = 1\n     ))\n and((ss_addr_sk = ca_address_sk\n  and ca_country = 'United States'\n  and ca_state in ('AZ', 'IA', 'AL')\n  and ss_net_profit between 100 and 200\n     ) or\n     (ss_addr_sk = ca_address_sk\n  and ca_country = 'United States'\n  and ca_state in ('KY', 'TX', 'MT')\n  and ss_net_profit between 150 and 300\n     ) or\n     (ss_addr_sk = ca_address_sk\n  and ca_country = 'United States'\n  and ca_state in ('MO', 'OR', 'NY')\n  and ss_net_profit between 50 and 250\n     ))\n;\n\n\nwith /* { \"query\":\"query24_p1\",\"streamId\":0,\"querySequence\":92 } */ ssales as\n(select c_last_name\n      ,c_first_name\n      ,s_store_name\n      ,ca_state\n      ,s_state\n      ,i_color\n      ,i_current_price\n      ,i_manager_id\n      ,i_units\n      ,i_size\n      ,sum(ss_sales_price) netpaid\nfrom store_sales\n    ,store_returns\n    ,store\n    ,item\n    ,customer\n    ,customer_address\nwhere ss_ticket_number = sr_ticket_number\n  and ss_item_sk = sr_item_sk\n  and ss_customer_sk = c_customer_sk\n  and ss_item_sk = i_item_sk\n  and ss_store_sk = s_store_sk\n  and c_current_addr_sk = ca_address_sk\n  and c_birth_country <> upper(ca_country)\n  and s_zip = ca_zip\nand s_market_id=7\ngroup by c_last_name\n        ,c_first_name\n        ,s_store_name\n        ,ca_state\n        ,s_state\n        ,i_color\n        ,i_current_price\n        ,i_manager_id\n        ,i_units\n        ,i_size)\nselect c_last_name\n      ,c_first_name\n      ,s_store_name\n      ,sum(netpaid) paid\nfrom ssales\nwhere i_color = 'mint'\ngroup by c_last_name\n        ,c_first_name\n        ,s_store_name\nhaving sum(netpaid) > (select 0.05*avg(netpaid)\n                                 from ssales)\norder by c_last_name\n        ,c_first_name\n        ,s_store_name\n;\nwith /* { \"query\":\"query24_p2\",\"streamId\":0,\"querySequence\":92 } */ ssales as\n(select c_last_name\n      ,c_first_name\n      ,s_store_name\n      ,ca_state\n      ,s_state\n      ,i_color\n      ,i_current_price\n      ,i_manager_id\n      ,i_units\n      ,i_size\n      ,sum(ss_sales_price) netpaid\nfrom store_sales\n    ,store_returns\n    ,store\n    ,item\n    ,customer\n    ,customer_address\nwhere ss_ticket_number = sr_ticket_number\n  and ss_item_sk = sr_item_sk\n  and ss_customer_sk = c_customer_sk\n  and ss_item_sk = i_item_sk\n  and ss_store_sk = s_store_sk\n  and c_current_addr_sk = ca_address_sk\n  and c_birth_country <> upper(ca_country)\n  and s_zip = ca_zip\n  and s_market_id = 7\ngroup by c_last_name\n        ,c_first_name\n        ,s_store_name\n        ,ca_state\n        ,s_state\n        ,i_color\n        ,i_current_price\n        ,i_manager_id\n        ,i_units\n        ,i_size)\nselect c_last_name\n      ,c_first_name\n      ,s_store_name\n      ,sum(netpaid) paid\nfrom ssales\nwhere i_color = 'maroon'\ngroup by c_last_name\n        ,c_first_name\n        ,s_store_name\nhaving sum(netpaid) > (select 0.05*avg(netpaid)\n                           from ssales)\norder by c_last_name\n        ,c_first_name\n        ,s_store_name\n;\n\n\nwith /* { \"query\":\"query04\",\"streamId\":0,\"querySequence\":93 } */ year_total as (\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total\n       ,'s' sale_type\n from customer\n     ,store_sales\n     ,date_dim\n where c_customer_sk = ss_customer_sk\n   and ss_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag\n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year\n union all\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total\n       ,'c' sale_type\n from customer\n     ,catalog_sales\n     ,date_dim\n where c_customer_sk = cs_bill_customer_sk\n   and cs_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag\n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year\nunion all\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total\n       ,'w' sale_type\n from customer\n     ,web_sales\n     ,date_dim\n where c_customer_sk = ws_bill_customer_sk\n   and ws_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag\n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year\n         )\n  select\n                  t_s_secyear.customer_id\n                 ,t_s_secyear.customer_first_name\n                 ,t_s_secyear.customer_last_name\n                 ,t_s_secyear.customer_login\n from year_total t_s_firstyear\n     ,year_total t_s_secyear\n     ,year_total t_c_firstyear\n     ,year_total t_c_secyear\n     ,year_total t_w_firstyear\n     ,year_total t_w_secyear\n where t_s_secyear.customer_id = t_s_firstyear.customer_id\n   and t_s_firstyear.customer_id = t_c_secyear.customer_id\n   and t_s_firstyear.customer_id = t_c_firstyear.customer_id\n   and t_s_firstyear.customer_id = t_w_firstyear.customer_id\n   and t_s_firstyear.customer_id = t_w_secyear.customer_id\n   and t_s_firstyear.sale_type = 's'\n   and t_c_firstyear.sale_type = 'c'\n   and t_w_firstyear.sale_type = 'w'\n   and t_s_secyear.sale_type = 's'\n   and t_c_secyear.sale_type = 'c'\n   and t_w_secyear.sale_type = 'w'\n   and t_s_firstyear.dyear =  1999\n   and t_s_secyear.dyear = 1999+1\n   and t_c_firstyear.dyear =  1999\n   and t_c_secyear.dyear =  1999+1\n   and t_w_firstyear.dyear = 1999\n   and t_w_secyear.dyear = 1999+1\n   and t_s_firstyear.year_total > 0\n   and t_c_firstyear.year_total > 0\n   and t_w_firstyear.year_total > 0\n   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end\n           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end\n   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end\n           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end\n order by t_s_secyear.customer_id\n         ,t_s_secyear.customer_first_name\n         ,t_s_secyear.customer_last_name\n         ,t_s_secyear.customer_login\nlimit 100;\n\n\nselect /* { \"query\":\"query99\",\"streamId\":0,\"querySequence\":94 } */\n   substr(w_warehouse_name,1,20)\n  ,sm_type\n  ,cc_name\n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\"\n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 30) and\n                 (cs_ship_date_sk - cs_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\"\n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 60) and\n                 (cs_ship_date_sk - cs_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\"\n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 90) and\n                 (cs_ship_date_sk - cs_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\"\n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\"\nfrom\n   catalog_sales\n  ,warehouse\n  ,ship_mode\n  ,call_center\n  ,date_dim\nwhere\n    d_month_seq between 1208 and 1208 + 11\nand cs_ship_date_sk   = d_date_sk\nand cs_warehouse_sk   = w_warehouse_sk\nand cs_ship_mode_sk   = sm_ship_mode_sk\nand cs_call_center_sk = cc_call_center_sk\ngroup by\n   substr(w_warehouse_name,1,20)\n  ,sm_type\n  ,cc_name\norder by substr(w_warehouse_name,1,20)\n        ,sm_type\n        ,cc_name\nlimit 100;\n\n\nselect /* { \"query\":\"query68\",\"streamId\":0,\"querySequence\":95 } */  c_last_name\n       ,c_first_name\n       ,ca_city\n       ,bought_city\n       ,ss_ticket_number\n       ,extended_price\n       ,extended_tax\n       ,list_price\n from (select ss_ticket_number\n             ,ss_customer_sk\n             ,ca_city bought_city\n             ,sum(ss_ext_sales_price) extended_price\n             ,sum(ss_ext_list_price) list_price\n             ,sum(ss_ext_tax) extended_tax\n       from store_sales\n           ,date_dim\n           ,store\n           ,household_demographics\n           ,customer_address\n       where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n         and store_sales.ss_store_sk = store.s_store_sk\n        and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n        and store_sales.ss_addr_sk = customer_address.ca_address_sk\n        and date_dim.d_dom between 1 and 2\n        and (household_demographics.hd_dep_count = 0 or\n             household_demographics.hd_vehicle_count= -1)\n        and date_dim.d_year in (2000,2000+1,2000+2)\n        and store.s_city in ('Forest Hills','Dayton')\n       group by ss_ticket_number\n               ,ss_customer_sk\n               ,ss_addr_sk,ca_city) dn\n      ,customer\n      ,customer_address current_addr\n where ss_customer_sk = c_customer_sk\n   and customer.c_current_addr_sk = current_addr.ca_address_sk\n   and current_addr.ca_city <> bought_city\n order by c_last_name\n         ,ss_ticket_number\n limit 100;\n\n\nwith /* { \"query\":\"query83\",\"streamId\":0,\"querySequence\":96 } */ sr_items as\n (select i_item_id item_id,\n        sum(sr_return_quantity) sr_item_qty\n from store_returns,\n      item,\n      date_dim\n where sr_item_sk = i_item_sk\n and   d_date    in\n\t(select d_date\n\tfrom date_dim\n\twhere d_week_seq in\n\t\t(select d_week_seq\n\t\tfrom date_dim\n\t  where d_date in ('2001-05-15','2001-08-10','2001-11-07')))\n and   sr_returned_date_sk   = d_date_sk\n group by i_item_id),\n cr_items as\n (select i_item_id item_id,\n        sum(cr_return_quantity) cr_item_qty\n from catalog_returns,\n      item,\n      date_dim\n where cr_item_sk = i_item_sk\n and   d_date    in\n\t(select d_date\n\tfrom date_dim\n\twhere d_week_seq in\n\t\t(select d_week_seq\n\t\tfrom date_dim\n\t  where d_date in ('2001-05-15','2001-08-10','2001-11-07')))\n and   cr_returned_date_sk   = d_date_sk\n group by i_item_id),\n wr_items as\n (select i_item_id item_id,\n        sum(wr_return_quantity) wr_item_qty\n from web_returns,\n      item,\n      date_dim\n where wr_item_sk = i_item_sk\n and   d_date    in\n\t(select d_date\n\tfrom date_dim\n\twhere d_week_seq in\n\t\t(select d_week_seq\n\t\tfrom date_dim\n\t\twhere d_date in ('2001-05-15','2001-08-10','2001-11-07')))\n and   wr_returned_date_sk   = d_date_sk\n group by i_item_id)\n  select  sr_items.item_id\n       ,sr_item_qty\n       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev\n       ,cr_item_qty\n       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev\n       ,wr_item_qty\n       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev\n       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average\n from sr_items\n     ,cr_items\n     ,wr_items\n where sr_items.item_id=cr_items.item_id\n   and sr_items.item_id=wr_items.item_id\n order by sr_items.item_id\n         ,sr_item_qty\n limit 100;\n\n\nselect /* { \"query\":\"query61\",\"streamId\":0,\"querySequence\":97 } */  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100\nfrom\n  (select sum(ss_ext_sales_price) promotions\n   from  store_sales\n        ,store\n        ,promotion\n        ,date_dim\n        ,customer\n        ,customer_address\n        ,item\n   where ss_sold_date_sk = d_date_sk\n   and   ss_store_sk = s_store_sk\n   and   ss_promo_sk = p_promo_sk\n   and   ss_customer_sk= c_customer_sk\n   and   ca_address_sk = c_current_addr_sk\n   and   ss_item_sk = i_item_sk\n   and   ca_gmt_offset = -7\n   and   i_category = 'Jewelry'\n   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')\n   and   s_gmt_offset = -7\n   and   d_year = 2001\n   and   d_moy  = 11) promotional_sales,\n  (select sum(ss_ext_sales_price) total\n   from  store_sales\n        ,store\n        ,date_dim\n        ,customer\n        ,customer_address\n        ,item\n   where ss_sold_date_sk = d_date_sk\n   and   ss_store_sk = s_store_sk\n   and   ss_customer_sk= c_customer_sk\n   and   ca_address_sk = c_current_addr_sk\n   and   ss_item_sk = i_item_sk\n   and   ca_gmt_offset = -7\n   and   i_category = 'Jewelry'\n   and   s_gmt_offset = -7\n   and   d_year = 2001\n   and   d_moy  = 11) all_sales\norder by promotions, total\nlimit 100;\n\n\nwith /* { \"query\":\"query05\",\"streamId\":0,\"querySequence\":98 } */ ssr as\n (select s_store_id,\n        sum(sales_price) as sales,\n        sum(profit) as profit,\n        sum(return_amt) as returns,\n        sum(net_loss) as profit_loss\n from\n  ( select  ss_store_sk as store_sk,\n            ss_sold_date_sk  as date_sk,\n            ss_ext_sales_price as sales_price,\n            ss_net_profit as profit,\n            cast(0 as decimal(7,2)) as return_amt,\n            cast(0 as decimal(7,2)) as net_loss\n    from store_sales\n    union all\n    select sr_store_sk as store_sk,\n           sr_returned_date_sk as date_sk,\n           cast(0 as decimal(7,2)) as sales_price,\n           cast(0 as decimal(7,2)) as profit,\n           sr_return_amt as return_amt,\n           sr_net_loss as net_loss\n    from store_returns\n   ) salesreturns,\n     date_dim,\n     store\n where date_sk = d_date_sk\n       and d_date between cast('2002-08-27' as date)\n                  and (cast('2002-08-27' as date) + interval '14 days')\n       and store_sk = s_store_sk\n group by s_store_id)\n ,\n csr as\n (select cp_catalog_page_id,\n        sum(sales_price) as sales,\n        sum(profit) as profit,\n        sum(return_amt) as returns,\n        sum(net_loss) as profit_loss\n from\n  ( select  cs_catalog_page_sk as page_sk,\n            cs_sold_date_sk  as date_sk,\n            cs_ext_sales_price as sales_price,\n            cs_net_profit as profit,\n            cast(0 as decimal(7,2)) as return_amt,\n            cast(0 as decimal(7,2)) as net_loss\n    from catalog_sales\n    union all\n    select cr_catalog_page_sk as page_sk,\n           cr_returned_date_sk as date_sk,\n           cast(0 as decimal(7,2)) as sales_price,\n           cast(0 as decimal(7,2)) as profit,\n           cr_return_amount as return_amt,\n           cr_net_loss as net_loss\n    from catalog_returns\n   ) salesreturns,\n     date_dim,\n     catalog_page\n where date_sk = d_date_sk\n       and d_date between cast('2002-08-27' as date)\n                  and (cast('2002-08-27' as date) + interval '14 days')\n       and page_sk = cp_catalog_page_sk\n group by cp_catalog_page_id)\n ,\n wsr as\n (select web_site_id,\n        sum(sales_price) as sales,\n        sum(profit) as profit,\n        sum(return_amt) as returns,\n        sum(net_loss) as profit_loss\n from\n  ( select  ws_web_site_sk as wsr_web_site_sk,\n            ws_sold_date_sk  as date_sk,\n            ws_ext_sales_price as sales_price,\n            ws_net_profit as profit,\n            cast(0 as decimal(7,2)) as return_amt,\n            cast(0 as decimal(7,2)) as net_loss\n    from web_sales\n    union all\n    select ws_web_site_sk as wsr_web_site_sk,\n           wr_returned_date_sk as date_sk,\n           cast(0 as decimal(7,2)) as sales_price,\n           cast(0 as decimal(7,2)) as profit,\n           wr_return_amt as return_amt,\n           wr_net_loss as net_loss\n    from web_returns left outer join web_sales on\n         ( wr_item_sk = ws_item_sk\n           and wr_order_number = ws_order_number)\n   ) salesreturns,\n     date_dim,\n     web_site\n where date_sk = d_date_sk\n       and d_date between cast('2002-08-27' as date)\n                  and (cast('2002-08-27' as date) + interval '14 days')\n       and wsr_web_site_sk = web_site_sk\n group by web_site_id)\n  select  channel\n        , id\n        , sum(sales) as sales\n        , sum(returns) as returns\n        , sum(profit) as profit\n from\n (select 'store channel' as channel\n        , 'store' || s_store_id as id\n        , sales\n        , returns\n        , (profit - profit_loss) as profit\n from   ssr\n union all\n select 'catalog channel' as channel\n        , 'catalog_page' || cp_catalog_page_id as id\n        , sales\n        , returns\n        , (profit - profit_loss) as profit\n from  csr\n union all\n select 'web channel' as channel\n        , 'web_site' || web_site_id as id\n        , sales\n        , returns\n        , (profit - profit_loss) as profit\n from   wsr\n ) x\n group by rollup (channel, id)\n order by channel\n         ,id\n limit 100;\n\n\nselect /* { \"query\":\"query76\",\"streamId\":0,\"querySequence\":99 } */  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (\n        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price\n         FROM store_sales, item, date_dim\n         WHERE ss_addr_sk IS NULL\n           AND ss_sold_date_sk=d_date_sk\n           AND ss_item_sk=i_item_sk\n        UNION ALL\n        SELECT 'web' as channel, 'ws_promo_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price\n         FROM web_sales, item, date_dim\n         WHERE ws_promo_sk IS NULL\n           AND ws_sold_date_sk=d_date_sk\n           AND ws_item_sk=i_item_sk\n        UNION ALL\n        SELECT 'catalog' as channel, 'cs_bill_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price\n         FROM catalog_sales, item, date_dim\n         WHERE cs_bill_customer_sk IS NULL\n           AND cs_sold_date_sk=d_date_sk\n           AND cs_item_sk=i_item_sk) foo\nGROUP BY channel, col_name, d_year, d_qoy, i_category\nORDER BY channel, col_name, d_year, d_qoy, i_category\nlimit 100;\n\nSET end_time = CURRENT_TIMESTAMP();\n\nSELECT SUM(total_elapsed_time)/1000 AS total_seconds,\n       EXP(AVG(LN(total_elapsed_time)))/1000 AS geomean_seconds\nFROM (\n    SELECT total_elapsed_time\n      FROM TABLE(INFORMATION_SCHEMA.QUERY_HISTORY_BY_SESSION(\n                SESSION_ID => CAST(CURRENT_SESSION() AS BIGINT),\n                END_TIME_RANGE_START => $start_time::TIMESTAMP_LTZ,\n                END_TIME_RANGE_END => $end_time::TIMESTAMP_LTZ,\n                RESULT_LIMIT => 1000)\n                )\n     WHERE query_text ilike 'select%' or query_text ilike 'with%'\n    ORDER BY end_time DESC\n) x\n;\n\n", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "transforms": [], "queryLanguage": "sql", "pid": "1UmD56J47hm", "name": "TPC-DS 10TB Complete Query Test", "orgId": "202346043869", "ownerId": "505987850600", "folderId": "HF2dREvK", "visibility": "private", "modified": "2024-03-02T03:11:16.103188Z", "version": 2, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/w1UmD56J47hm#query", "slug": "w1UmD56J47hm", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}, "1btyFdjn8lA": {"snowflakeRequestId": null, "snowflakeQueryId": "", "query": "/* Tutorial 4: TPC-DS 100TB Complete Query Test\n\nPrerequisites\nThis tutorial requires the Snowflake provided\nsnowflake_sample_data database.  If you don't\nhave this database already in your account\nplease add it by following these instructions:\nhttps://docs.snowflake.net/manuals/user-guide/sample-data-using.html\n\nDetails on the queries and dataset can be found\nin the TPC-DS Benchmark specification at\nhttp://tpc.org/tpc_documents_current_versions/pdf/tpc-ds_v3.2.0.pdf\n\nThe business questions answered by these queries are\ndescribed in Appendix B: Business Questions\n\nTPC also provides tools to generate all 99\nqueries with varied parameter values.  The full\nbenchmark kit can be downloaded at\nhttp://www.tpc.org/tpc_documents_current_versions/current_specifications.asp\n\nThis is a sample set of the 99 queries\nused in the TPC-DS benchmark.\n\nHow to run\n1. Select all text in the worksheet.\n2. Click the Run button.\n*/\n\nCREATE WAREHOUSE if not exists TPCDS_BENCH_100T\nwith\n  WAREHOUSE_SIZE = XSMALL\n  AUTO_SUSPEND = 60\n  INITIALLY_SUSPENDED = TRUE\n  COMMENT = 'TEST WH for TPCDS 100TB BENCHMARK'\n;\n\nALTER WAREHOUSE TPCDS_BENCH_100T\n  RESUME IF SUSPENDED\n;\n\nALTER WAREHOUSE TPCDS_BENCH_100T\n  SET WAIT_FOR_COMPLETION = TRUE\n      WAREHOUSE_SIZE = X4LARGE\n;\n\nUSE SCHEMA snowflake_sample_data.tpcds_sf100tcl;\nALTER SESSION SET use_cached_result = FALSE;\nSET start_time = CURRENT_TIMESTAMP();\n\nselect /* { \"query\":\"query96\",\"streamId\":0,\"querySequence\":1 } */  count(*)\nfrom store_sales\n   ,household_demographics\n   ,time_dim, store\nwhere ss_sold_time_sk = time_dim.t_time_sk\n  and ss_hdemo_sk = household_demographics.hd_demo_sk\n  and ss_store_sk = s_store_sk\n  and time_dim.t_hour = 8\n  and time_dim.t_minute >= 30\n  and household_demographics.hd_dep_count = 5\n  and store.s_store_name = 'ese'\norder by count(*)\n    limit 100;\n\n\nselect /* { \"query\":\"query07\",\"streamId\":0,\"querySequence\":2 } */  i_item_id,\n                                                                   avg(ss_quantity) agg1,\n                                                                   avg(ss_list_price) agg2,\n                                                                   avg(ss_coupon_amt) agg3,\n                                                                   avg(ss_sales_price) agg4\nfrom store_sales, customer_demographics, date_dim, item, promotion\nwhere ss_sold_date_sk = d_date_sk and\n        ss_item_sk = i_item_sk and\n        ss_cdemo_sk = cd_demo_sk and\n        ss_promo_sk = p_promo_sk and\n        cd_gender = 'M' and\n        cd_marital_status = 'M' and\n        cd_education_status = '4 yr Degree' and\n    (p_channel_email = 'N' or p_channel_event = 'N') and\n        d_year = 2001\ngroup by i_item_id\norder by i_item_id\n    limit 100;\n\n\nWITH /* { \"query\":\"query75\",\"streamId\":0,\"querySequence\":3 } */ all_sales AS (\n    SELECT d_year\n         ,i_brand_id\n         ,i_class_id\n         ,i_category_id\n         ,i_manufact_id\n         ,SUM(sales_cnt) AS sales_cnt\n         ,SUM(sales_amt) AS sales_amt\n    FROM (SELECT d_year\n               ,i_brand_id\n               ,i_class_id\n               ,i_category_id\n               ,i_manufact_id\n               ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt\n               ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt\n          FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk\n                             JOIN date_dim ON d_date_sk=cs_sold_date_sk\n                             LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number\n              AND cs_item_sk=cr_item_sk)\n          WHERE i_category='Shoes'\n          UNION\n          SELECT d_year\n               ,i_brand_id\n               ,i_class_id\n               ,i_category_id\n               ,i_manufact_id\n               ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt\n               ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt\n          FROM store_sales JOIN item ON i_item_sk=ss_item_sk\n                           JOIN date_dim ON d_date_sk=ss_sold_date_sk\n                           LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number\n              AND ss_item_sk=sr_item_sk)\n          WHERE i_category='Shoes'\n          UNION\n          SELECT d_year\n               ,i_brand_id\n               ,i_class_id\n               ,i_category_id\n               ,i_manufact_id\n               ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt\n               ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt\n          FROM web_sales JOIN item ON i_item_sk=ws_item_sk\n                         JOIN date_dim ON d_date_sk=ws_sold_date_sk\n                         LEFT JOIN web_returns ON (ws_order_number=wr_order_number\n              AND ws_item_sk=wr_item_sk)\n          WHERE i_category='Shoes') sales_detail\n    GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)\nSELECT  prev_yr.d_year AS prev_year\n     ,curr_yr.d_year AS year\n                          ,curr_yr.i_brand_id\n                          ,curr_yr.i_class_id\n                          ,curr_yr.i_category_id\n                          ,curr_yr.i_manufact_id\n                          ,prev_yr.sales_cnt AS prev_yr_cnt\n                          ,curr_yr.sales_cnt AS curr_yr_cnt\n                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff\n                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff\nFROM all_sales curr_yr, all_sales prev_yr\nWHERE curr_yr.i_brand_id=prev_yr.i_brand_id\n  AND curr_yr.i_class_id=prev_yr.i_class_id\n  AND curr_yr.i_category_id=prev_yr.i_category_id\n  AND curr_yr.i_manufact_id=prev_yr.i_manufact_id\n  AND curr_yr.d_year=2000\n  AND prev_yr.d_year=2000-1\n  AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9\nORDER BY sales_cnt_diff,sales_amt_diff\n    limit 100;\n\n\nselect /* { \"query\":\"query44\",\"streamId\":0,\"querySequence\":4 } */  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing\nfrom(select *\n     from (select item_sk,rank() over (order by rank_col asc) rnk\n           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col\n                 from store_sales ss1\n                 where ss_store_sk = 114\n                 group by ss_item_sk\n                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col\n                                                  from store_sales\n                                                  where ss_store_sk = 114\n                                                    and ss_hdemo_sk is null\n                                                  group by ss_store_sk))V1)V11\n     where rnk  < 11) asceding,\n    (select *\n     from (select item_sk,rank() over (order by rank_col desc) rnk\n           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col\n                 from store_sales ss1\n                 where ss_store_sk = 114\n                 group by ss_item_sk\n                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col\n                                                  from store_sales\n                                                  where ss_store_sk = 114\n                                                    and ss_hdemo_sk is null\n                                                  group by ss_store_sk))V2)V21\n     where rnk  < 11) descending,\n    item i1,\n    item i2\nwhere asceding.rnk = descending.rnk\n  and i1.i_item_sk=asceding.item_sk\n  and i2.i_item_sk=descending.item_sk\norder by asceding.rnk\n    limit 100;\n\n\nwith /* { \"query\":\"query39_p1\",\"streamId\":0,\"querySequence\":5 } */ inv as\n                                                                       (select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n                                                                             ,stdev,mean, case mean when 0 then null else stdev/mean end cov\n                                                                        from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n                                                                                  ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean\n                                                                             from inventory\n                                                                                ,item\n                                                                                ,warehouse\n                                                                                ,date_dim\n                                                                             where inv_item_sk = i_item_sk\n                                                                               and inv_warehouse_sk = w_warehouse_sk\n                                                                               and inv_date_sk = d_date_sk\n                                                                               and d_year =2001\n                                                                             group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo\n                                                                        where case mean when 0 then 0 else stdev/mean end > 1)\nselect inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov\n     ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov\nfrom inv inv1,inv inv2\nwhere inv1.i_item_sk = inv2.i_item_sk\n  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk\n  and inv1.d_moy=1\n  and inv2.d_moy=1+1\norder by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov\n       ,inv2.d_moy,inv2.mean, inv2.cov\n;\n\nwith /* { \"query\":\"query39_p2\",\"streamId\":0,\"querySequence\":5 } */ inv as\n                                                                       (select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n                                                                             ,stdev,mean, case mean when 0 then null else stdev/mean end cov\n                                                                        from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n                                                                                  ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean\n                                                                             from inventory\n                                                                                ,item\n                                                                                ,warehouse\n                                                                                ,date_dim\n                                                                             where inv_item_sk = i_item_sk\n                                                                               and inv_warehouse_sk = w_warehouse_sk\n                                                                               and inv_date_sk = d_date_sk\n                                                                               and d_year =2001\n                                                                             group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo\n                                                                        where case mean when 0 then 0 else stdev/mean end > 1)\nselect inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov\n     ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov\nfrom inv inv1,inv inv2\nwhere inv1.i_item_sk = inv2.i_item_sk\n  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk\n  and inv1.d_moy=1\n  and inv2.d_moy=1+1\n  and inv1.cov > 1.5\norder by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov\n       ,inv2.d_moy,inv2.mean, inv2.cov\n;\n\n\nwith /* { \"query\":\"query80\",\"streamId\":0,\"querySequence\":6 } */ ssr as\n                                                                    (select  s_store_id as store_id,\n                                                                             sum(ss_ext_sales_price) as sales,\n                                                                             sum(coalesce(sr_return_amt, 0)) as returns,\n                                                                             sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit\n                                                                     from store_sales left outer join store_returns on\n                                                                         (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),\n                                                                          date_dim,\n                                                                          store,\n                                                                          item,\n                                                                          promotion\n                                                                     where ss_sold_date_sk = d_date_sk\n                                                                       and d_date between cast('2002-08-04' as date)\n                                                                         and dateadd(day,30,to_date('2002-08-04'))\n                                                                       and ss_store_sk = s_store_sk\n                                                                       and ss_item_sk = i_item_sk\n                                                                       and i_current_price > 50\n                                                                       and ss_promo_sk = p_promo_sk\n                                                                       and p_channel_tv = 'N'\n                                                                     group by s_store_id)\n        ,\n                                                                csr as\n                                                                    (select  cp_catalog_page_id as catalog_page_id,\n                                                                             sum(cs_ext_sales_price) as sales,\n                                                                             sum(coalesce(cr_return_amount, 0)) as returns,\n                                                                             sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit\n                                                                     from catalog_sales left outer join catalog_returns on\n                                                                         (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),\n                                                                          date_dim,\n                                                                          catalog_page,\n                                                                          item,\n                                                                          promotion\n                                                                     where cs_sold_date_sk = d_date_sk\n                                                                       and d_date between cast('2002-08-04' as date)\n                                                                         and dateadd(day,30,to_date('2002-08-04'))\n                                                                       and cs_catalog_page_sk = cp_catalog_page_sk\n                                                                       and cs_item_sk = i_item_sk\n                                                                       and i_current_price > 50\n                                                                       and cs_promo_sk = p_promo_sk\n                                                                       and p_channel_tv = 'N'\n                                                                     group by cp_catalog_page_id)\n        ,\n                                                                wsr as\n                                                                    (select  web_site_id,\n                                                                             sum(ws_ext_sales_price) as sales,\n                                                                             sum(coalesce(wr_return_amt, 0)) as returns,\n                                                                             sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit\n                                                                     from web_sales left outer join web_returns on\n                                                                         (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),\n                                                                          date_dim,\n                                                                          web_site,\n                                                                          item,\n                                                                          promotion\n                                                                     where ws_sold_date_sk = d_date_sk\n                                                                       and d_date between cast('2002-08-04' as date)\n                                                                         and dateadd(day,30,to_date('2002-08-04'))\n                                                                       and ws_web_site_sk = web_site_sk\n                                                                       and ws_item_sk = i_item_sk\n                                                                       and i_current_price > 50\n                                                                       and ws_promo_sk = p_promo_sk\n                                                                       and p_channel_tv = 'N'\n                                                                     group by web_site_id)\nselect  channel\n     , id\n     , sum(sales) as sales\n     , sum(returns) as returns\n     , sum(profit) as profit\nfrom\n    (select 'store channel' as channel\n          , 'store' || store_id as id\n          , sales\n          , returns\n          , profit\n     from   ssr\n     union all\n     select 'catalog channel' as channel\n          , 'catalog_page' || catalog_page_id as id\n          , sales\n          , returns\n          , profit\n     from  csr\n     union all\n     select 'web channel' as channel\n          , 'web_site' || web_site_id as id\n          , sales\n          , returns\n          , profit\n     from   wsr\n    ) x\ngroup by rollup (channel, id)\norder by channel\n       ,id\n    limit 100;\n\n\nselect /* { \"query\":\"query32\",\"streamId\":0,\"querySequence\":7 } */  sum(cs_ext_discount_amt)  as \"excess discount amount\"\nfrom\n    catalog_sales\n   ,item\n   ,date_dim\nwhere\n        i_manufact_id = 283\n  and i_item_sk = cs_item_sk\n  and d_date between '1999-02-22' and\n    dateadd(day,90,to_date('1999-02-22'))\n  and d_date_sk = cs_sold_date_sk\n  and cs_ext_discount_amt\n    > (\n          select\n                  1.3 * avg(cs_ext_discount_amt)\n          from\n              catalog_sales\n             ,date_dim\n          where\n                  cs_item_sk = i_item_sk\n            and d_date between '1999-02-22' and\n              dateadd(day,90,to_date('1999-02-22'))\n            and d_date_sk = cs_sold_date_sk\n      )\n    limit 100;\n\n\nselect /* { \"query\":\"query19\",\"streamId\":0,\"querySequence\":8 } */  i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact,\n                                                                   sum(ss_ext_sales_price) ext_price\nfrom date_dim, store_sales, item,customer,customer_address,store\nwhere d_date_sk = ss_sold_date_sk\n  and ss_item_sk = i_item_sk\n  and i_manager_id=8\n  and d_moy=11\n  and d_year=1999\n  and ss_customer_sk = c_customer_sk\n  and c_current_addr_sk = ca_address_sk\n  and substr(ca_zip,1,5) <> substr(s_zip,1,5)\n  and ss_store_sk = s_store_sk\ngroup by i_brand\n       ,i_brand_id\n       ,i_manufact_id\n       ,i_manufact\norder by ext_price desc\n       ,i_brand\n       ,i_brand_id\n       ,i_manufact_id\n       ,i_manufact\n    limit 100 ;\n\n\nselect /* { \"query\":\"query25\",\"streamId\":0,\"querySequence\":9 } */\n    i_item_id\n     ,i_item_desc\n     ,s_store_id\n     ,s_store_name\n     ,min(ss_net_profit) as store_sales_profit\n     ,min(sr_net_loss) as store_returns_loss\n     ,min(cs_net_profit) as catalog_sales_profit\nfrom\n    store_sales\n   ,store_returns\n   ,catalog_sales\n   ,date_dim d1\n   ,date_dim d2\n   ,date_dim d3\n   ,store\n   ,item\nwhere\n        d1.d_moy = 4\n  and d1.d_year = 2002\n  and d1.d_date_sk = ss_sold_date_sk\n  and i_item_sk = ss_item_sk\n  and s_store_sk = ss_store_sk\n  and ss_customer_sk = sr_customer_sk\n  and ss_item_sk = sr_item_sk\n  and ss_ticket_number = sr_ticket_number\n  and sr_returned_date_sk = d2.d_date_sk\n  and d2.d_moy               between 4 and  10\n  and d2.d_year              = 2002\n  and sr_customer_sk = cs_bill_customer_sk\n  and sr_item_sk = cs_item_sk\n  and cs_sold_date_sk = d3.d_date_sk\n  and d3.d_moy               between 4 and  10\n  and d3.d_year              = 2002\ngroup by\n    i_item_id\n       ,i_item_desc\n       ,s_store_id\n       ,s_store_name\norder by\n    i_item_id\n       ,i_item_desc\n       ,s_store_id\n       ,s_store_name\n    limit 100;\n\n\nwith /* { \"query\":\"query78\",\"streamId\":0,\"querySequence\":10 } */ ws as\n                                                                     (select d_year AS ws_sold_year, ws_item_sk,\n                                                                             ws_bill_customer_sk ws_customer_sk,\n                                                                             sum(ws_quantity) ws_qty,\n                                                                             sum(ws_wholesale_cost) ws_wc,\n                                                                             sum(ws_sales_price) ws_sp\n                                                                      from web_sales\n                                                                               left join web_returns on wr_order_number=ws_order_number and ws_item_sk=wr_item_sk\n                                                                               join date_dim on ws_sold_date_sk = d_date_sk\n                                                                      where wr_order_number is null\n                                                                      group by d_year, ws_item_sk, ws_bill_customer_sk\n                                                                     ),\n                                                                 cs as\n                                                                     (select d_year AS cs_sold_year, cs_item_sk,\n                                                                             cs_bill_customer_sk cs_customer_sk,\n                                                                             sum(cs_quantity) cs_qty,\n                                                                             sum(cs_wholesale_cost) cs_wc,\n                                                                             sum(cs_sales_price) cs_sp\n                                                                      from catalog_sales\n                                                                               left join catalog_returns on cr_order_number=cs_order_number and cs_item_sk=cr_item_sk\n                                                                               join date_dim on cs_sold_date_sk = d_date_sk\n                                                                      where cr_order_number is null\n                                                                      group by d_year, cs_item_sk, cs_bill_customer_sk\n                                                                     ),\n                                                                 ss as\n                                                                     (select d_year AS ss_sold_year, ss_item_sk,\n                                                                             ss_customer_sk,\n                                                                             sum(ss_quantity) ss_qty,\n                                                                             sum(ss_wholesale_cost) ss_wc,\n                                                                             sum(ss_sales_price) ss_sp\n                                                                      from store_sales\n                                                                               left join store_returns on sr_ticket_number=ss_ticket_number and ss_item_sk=sr_item_sk\n                                                                               join date_dim on ss_sold_date_sk = d_date_sk\n                                                                      where sr_ticket_number is null\n                                                                      group by d_year, ss_item_sk, ss_customer_sk\n                                                                     )\nselect\n    ss_customer_sk,\n    round(ss_qty/(coalesce(ws_qty,0)+coalesce(cs_qty,0)),2) ratio,\n    ss_qty store_qty, ss_wc store_wholesale_cost, ss_sp store_sales_price,\n    coalesce(ws_qty,0)+coalesce(cs_qty,0) other_chan_qty,\n    coalesce(ws_wc,0)+coalesce(cs_wc,0) other_chan_wholesale_cost,\n    coalesce(ws_sp,0)+coalesce(cs_sp,0) other_chan_sales_price\nfrom ss\n         left join ws on (ws_sold_year=ss_sold_year and ws_item_sk=ss_item_sk and ws_customer_sk=ss_customer_sk)\n         left join cs on (cs_sold_year=ss_sold_year and cs_item_sk=ss_item_sk and cs_customer_sk=ss_customer_sk)\nwhere (coalesce(ws_qty,0)>0 or coalesce(cs_qty, 0)>0) and ss_sold_year=2001\norder by\n    ss_customer_sk,\n    ss_qty desc, ss_wc desc, ss_sp desc,\n    other_chan_qty,\n    other_chan_wholesale_cost,\n    other_chan_sales_price,\n    ratio\n    limit 100;\n\n\nselect /* { \"query\":\"query86\",\"streamId\":0,\"querySequence\":11 } */\n    sum(ws_net_paid) as total_sum\n     ,i_category\n     ,i_class\n     ,grouping(i_category)+grouping(i_class) as lochierarchy\n     ,rank() over (\n \tpartition by grouping(i_category)+grouping(i_class),\n \tcase when grouping(i_class) = 0 then i_category end\n \torder by sum(ws_net_paid) desc) as rank_within_parent\nfrom\n    web_sales\n   ,date_dim       d1\n   ,item\nwhere\n    d1.d_month_seq between 1205 and 1205+11\n  and d1.d_date_sk = ws_sold_date_sk\n  and i_item_sk  = ws_item_sk\ngroup by rollup(i_category,i_class)\norder by\n    lochierarchy desc,\n    case when lochierarchy = 0 then i_category end,\n    rank_within_parent\n    limit 100;\n\n\nwith /* { \"query\":\"query01\",\"streamId\":0,\"querySequence\":12 } */ customer_total_return as\n                                                                     (select sr_customer_sk as ctr_customer_sk\n                                                                           ,sr_store_sk as ctr_store_sk\n                                                                           ,sum(SR_RETURN_AMT_INC_TAX) as ctr_total_return\n                                                                      from store_returns\n                                                                         ,date_dim\n                                                                      where sr_returned_date_sk = d_date_sk\n                                                                        and d_year =1999\n                                                                      group by sr_customer_sk\n                                                                             ,sr_store_sk)\nselect  c_customer_id\nfrom customer_total_return ctr1\n   ,store\n   ,customer\nwhere ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2\n                               from customer_total_return ctr2\n                               where ctr1.ctr_store_sk = ctr2.ctr_store_sk)\n  and s_store_sk = ctr1.ctr_store_sk\n  and s_state = 'NM'\n  and ctr1.ctr_customer_sk = c_customer_sk\norder by c_customer_id\n    limit 100;\n\n\nselect /* { \"query\":\"query91\",\"streamId\":0,\"querySequence\":13 } */\n    cc_call_center_id Call_Center,\n    cc_name Call_Center_Name,\n    cc_manager Manager,\n    sum(cr_net_loss) Returns_Loss\nfrom\n    call_center,\n    catalog_returns,\n    date_dim,\n    customer,\n    customer_address,\n    customer_demographics,\n    household_demographics\nwhere\n        cr_call_center_sk       = cc_call_center_sk\n  and     cr_returned_date_sk     = d_date_sk\n  and     cr_returning_customer_sk= c_customer_sk\n  and     cd_demo_sk              = c_current_cdemo_sk\n  and     hd_demo_sk              = c_current_hdemo_sk\n  and     ca_address_sk           = c_current_addr_sk\n  and     d_year                  = 2002\n  and     d_moy                   = 11\n  and     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')\n    or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree'))\n  and     hd_buy_potential like 'Unknown%'\n  and     ca_gmt_offset           = -6\ngroup by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status\norder by sum(cr_net_loss) desc;\n\n\nselect /* { \"query\":\"query21\",\"streamId\":0,\"querySequence\":14 } */  *\nfrom(select w_warehouse_name\n          ,i_item_id\n          ,sum(case when (cast(d_date as date) < cast ('2000-05-19' as date))\n                        then inv_quantity_on_hand\n                    else 0 end) as inv_before\n          ,sum(case when (cast(d_date as date) >= cast ('2000-05-19' as date))\n                        then inv_quantity_on_hand\n                    else 0 end) as inv_after\n     from inventory\n        ,warehouse\n        ,item\n        ,date_dim\n     where i_current_price between 0.99 and 1.49\n       and i_item_sk          = inv_item_sk\n       and inv_warehouse_sk   = w_warehouse_sk\n       and inv_date_sk    = d_date_sk\n       and d_date between dateadd(day,-30,to_date('2000-05-19'))\n         and dateadd(day,30,to_date('2000-05-19'))\n     group by w_warehouse_name, i_item_id) x\nwhere (case when inv_before > 0\n                then inv_after / inv_before\n            else null\n    end) between 2.0/3.0 and 3.0/2.0\norder by w_warehouse_name\n       ,i_item_id\n    limit 100;\n\n\nselect /* { \"query\":\"query43\",\"streamId\":0,\"querySequence\":15 } */  s_store_name, s_store_id,\n                                                                    sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,\n                                                                    sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,\n                                                                    sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,\n                                                                    sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,\n                                                                    sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,\n                                                                    sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,\n                                                                    sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales\nfrom date_dim, store_sales, store\nwhere d_date_sk = ss_sold_date_sk and\n        s_store_sk = ss_store_sk and\n        s_gmt_offset = -6 and\n        d_year = 2000\ngroup by s_store_name, s_store_id\norder by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales\n    limit 100;\n\n\nselect /* { \"query\":\"query27\",\"streamId\":0,\"querySequence\":16 } */  i_item_id,\n                                                                    s_state, grouping(s_state) g_state,\n                                                                    avg(ss_quantity) agg1,\n                                                                    avg(ss_list_price) agg2,\n                                                                    avg(ss_coupon_amt) agg3,\n                                                                    avg(ss_sales_price) agg4\nfrom store_sales, customer_demographics, date_dim, store, item\nwhere ss_sold_date_sk = d_date_sk and\n        ss_item_sk = i_item_sk and\n        ss_store_sk = s_store_sk and\n        ss_cdemo_sk = cd_demo_sk and\n        cd_gender = 'F' and\n        cd_marital_status = 'U' and\n        cd_education_status = '2 yr Degree' and\n        d_year = 2000 and\n        s_state in ('SD','OH', 'NM', 'MI', 'TX', 'NM')\ngroup by rollup (i_item_id, s_state)\norder by i_item_id\n       ,s_state\n    limit 100;\n\n\nselect /* { \"query\":\"query94\",\"streamId\":0,\"querySequence\":17 } */\n    count(distinct ws_order_number) as \"order count\"\n     ,sum(ws_ext_ship_cost) as \"total shipping cost\"\n     ,sum(ws_net_profit) as \"total net profit\"\nfrom\n    web_sales ws1\n   ,date_dim\n   ,customer_address\n   ,web_site\nwhere\n    d_date between '2002-2-01' and\n        dateadd(day,60,to_date('2002-2-01'))\n  and ws1.ws_ship_date_sk = d_date_sk\n  and ws1.ws_ship_addr_sk = ca_address_sk\n  and ca_state = 'CA'\n  and ws1.ws_web_site_sk = web_site_sk\n  and web_company_name = 'pri'\n  and exists (select *\n              from web_sales ws2\n              where ws1.ws_order_number = ws2.ws_order_number\n                and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)\n  and not exists(select *\n                 from web_returns wr1\n                 where ws1.ws_order_number = wr1.wr_order_number)\norder by count(distinct ws_order_number)\n    limit 100;\n\n\nselect /* { \"query\":\"query45\",\"streamId\":0,\"querySequence\":18 } */  ca_zip, ca_city, sum(ws_sales_price)\nfrom web_sales, customer, customer_address, date_dim, item\nwhere ws_bill_customer_sk = c_customer_sk\n  and c_current_addr_sk = ca_address_sk\n  and ws_item_sk = i_item_sk\n  and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')\n    or\n        i_item_id in (select i_item_id\n                      from item\n                      where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n        )\n    )\n  and ws_sold_date_sk = d_date_sk\n  and d_qoy = 1 and d_year = 1998\ngroup by ca_zip, ca_city\norder by ca_zip, ca_city\n    limit 100;\n\n\nwith /* { \"query\":\"query58\",\"streamId\":0,\"querySequence\":19 } */ ss_items as\n                                                                     (select i_item_id item_id\n                                                                           ,sum(ss_ext_sales_price) ss_item_rev\n                                                                      from store_sales\n                                                                         ,item\n                                                                         ,date_dim\n                                                                      where ss_item_sk = i_item_sk\n                                                                        and d_date in (select d_date\n                                                                                       from date_dim\n                                                                                       where d_week_seq = (select d_week_seq\n                                                                                                           from date_dim\n                                                                                                           where d_date = '1999-04-16'))\n                                                                        and ss_sold_date_sk   = d_date_sk\n                                                                      group by i_item_id),\n                                                                 cs_items as\n                                                                     (select i_item_id item_id\n                                                                           ,sum(cs_ext_sales_price) cs_item_rev\n                                                                      from catalog_sales\n                                                                         ,item\n                                                                         ,date_dim\n                                                                      where cs_item_sk = i_item_sk\n                                                                        and  d_date in (select d_date\n                                                                                        from date_dim\n                                                                                        where d_week_seq = (select d_week_seq\n                                                                                                            from date_dim\n                                                                                                            where d_date = '1999-04-16'))\n                                                                        and  cs_sold_date_sk = d_date_sk\n                                                                      group by i_item_id),\n                                                                 ws_items as\n                                                                     (select i_item_id item_id\n                                                                           ,sum(ws_ext_sales_price) ws_item_rev\n                                                                      from web_sales\n                                                                         ,item\n                                                                         ,date_dim\n                                                                      where ws_item_sk = i_item_sk\n                                                                        and  d_date in (select d_date\n                                                                                        from date_dim\n                                                                                        where d_week_seq =(select d_week_seq\n                                                                                                           from date_dim\n                                                                                                           where d_date = '1999-04-16'))\n                                                                        and ws_sold_date_sk   = d_date_sk\n                                                                      group by i_item_id)\nselect  ss_items.item_id\n     ,ss_item_rev\n     ,ss_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ss_dev\n     ,cs_item_rev\n     ,cs_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 cs_dev\n     ,ws_item_rev\n     ,ws_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ws_dev\n     ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average\nfrom ss_items,cs_items,ws_items\nwhere ss_items.item_id=cs_items.item_id\n  and ss_items.item_id=ws_items.item_id\n  and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev\n  and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev\n  and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev\n  and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev\n  and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev\n  and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev\norder by item_id\n       ,ss_item_rev\n    limit 100;\n\n\nwith /* { \"query\":\"query64\",\"streamId\":0,\"querySequence\":20 } */ cs_ui as\n                                                                     (select cs_item_sk\n                                                                           ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund\n                                                                      from catalog_sales\n                                                                         ,catalog_returns\n                                                                      where cs_item_sk = cr_item_sk\n                                                                        and cs_order_number = cr_order_number\n                                                                      group by cs_item_sk\n                                                                      having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)),\n                                                                 cross_sales as\n                                                                     (select i_product_name product_name\n                                                                           ,i_item_sk item_sk\n                                                                           ,s_store_name store_name\n                                                                           ,s_zip store_zip\n                                                                           ,ad1.ca_street_number b_street_number\n                                                                           ,ad1.ca_street_name b_street_name\n                                                                           ,ad1.ca_city b_city\n                                                                           ,ad1.ca_zip b_zip\n                                                                           ,ad2.ca_street_number c_street_number\n                                                                           ,ad2.ca_street_name c_street_name\n                                                                           ,ad2.ca_city c_city\n                                                                           ,ad2.ca_zip c_zip\n                                                                           ,d1.d_year as syear\n                                                                           ,d2.d_year as fsyear\n                                                                           ,d3.d_year s2year\n                                                                           ,count(*) cnt\n                                                                           ,sum(ss_wholesale_cost) s1\n                                                                           ,sum(ss_list_price) s2\n                                                                           ,sum(ss_coupon_amt) s3\n                                                                      FROM   store_sales\n                                                                         ,store_returns\n                                                                         ,cs_ui\n                                                                         ,date_dim d1\n                                                                         ,date_dim d2\n                                                                         ,date_dim d3\n                                                                         ,store\n                                                                         ,customer\n                                                                         ,customer_demographics cd1\n                                                                         ,customer_demographics cd2\n                                                                         ,promotion\n                                                                         ,household_demographics hd1\n                                                                         ,household_demographics hd2\n                                                                         ,customer_address ad1\n                                                                         ,customer_address ad2\n                                                                         ,income_band ib1\n                                                                         ,income_band ib2\n                                                                         ,item\n                                                                      WHERE  ss_store_sk = s_store_sk AND\n                                                                              ss_sold_date_sk = d1.d_date_sk AND\n                                                                              ss_customer_sk = c_customer_sk AND\n                                                                              ss_cdemo_sk= cd1.cd_demo_sk AND\n                                                                              ss_hdemo_sk = hd1.hd_demo_sk AND\n                                                                              ss_addr_sk = ad1.ca_address_sk and\n                                                                              ss_item_sk = i_item_sk and\n                                                                              ss_item_sk = sr_item_sk and\n                                                                              ss_ticket_number = sr_ticket_number and\n                                                                              ss_item_sk = cs_ui.cs_item_sk and\n                                                                              c_current_cdemo_sk = cd2.cd_demo_sk AND\n                                                                              c_current_hdemo_sk = hd2.hd_demo_sk AND\n                                                                              c_current_addr_sk = ad2.ca_address_sk and\n                                                                              c_first_sales_date_sk = d2.d_date_sk and\n                                                                              c_first_shipto_date_sk = d3.d_date_sk and\n                                                                              ss_promo_sk = p_promo_sk and\n                                                                              hd1.hd_income_band_sk = ib1.ib_income_band_sk and\n                                                                              hd2.hd_income_band_sk = ib2.ib_income_band_sk and\n                                                                              cd1.cd_marital_status <> cd2.cd_marital_status and\n                                                                              i_color in ('burlywood','coral','dark','puff','smoke','peach') and\n                                                                          i_current_price between 22 and 22 + 10 and\n                                                                          i_current_price between 22 + 1 and 22 + 15\n                                                                      group by i_product_name\n                                                                             ,i_item_sk\n                                                                             ,s_store_name\n                                                                             ,s_zip\n                                                                             ,ad1.ca_street_number\n                                                                             ,ad1.ca_street_name\n                                                                             ,ad1.ca_city\n                                                                             ,ad1.ca_zip\n                                                                             ,ad2.ca_street_number\n                                                                             ,ad2.ca_street_name\n                                                                             ,ad2.ca_city\n                                                                             ,ad2.ca_zip\n                                                                             ,d1.d_year\n                                                                             ,d2.d_year\n                                                                             ,d3.d_year\n                                                                     )\nselect cs1.product_name\n     ,cs1.store_name\n     ,cs1.store_zip\n     ,cs1.b_street_number\n     ,cs1.b_street_name\n     ,cs1.b_city\n     ,cs1.b_zip\n     ,cs1.c_street_number\n     ,cs1.c_street_name\n     ,cs1.c_city\n     ,cs1.c_zip\n     ,cs1.syear\n     ,cs1.cnt\n     ,cs1.s1 as s11\n     ,cs1.s2 as s21\n     ,cs1.s3 as s31\n     ,cs2.s1 as s12\n     ,cs2.s2 as s22\n     ,cs2.s3 as s32\n     ,cs2.syear\n     ,cs2.cnt\nfrom cross_sales cs1,cross_sales cs2\nwhere cs1.item_sk=cs2.item_sk and\n        cs1.syear = 1999 and\n        cs2.syear = 1999 + 1 and\n        cs2.cnt <= cs1.cnt and\n        cs1.store_name = cs2.store_name and\n        cs1.store_zip = cs2.store_zip\norder by cs1.product_name\n       ,cs1.store_name\n       ,cs2.cnt\n       ,cs1.s1\n       ,cs2.s1;\n\n\nselect /* { \"query\":\"query36\",\"streamId\":0,\"querySequence\":21 } */\n        sum(ss_net_profit)/sum(ss_ext_sales_price) as gross_margin\n     ,i_category\n     ,i_class\n     ,grouping(i_category)+grouping(i_class) as lochierarchy\n     ,rank() over (\n \tpartition by grouping(i_category)+grouping(i_class),\n \tcase when grouping(i_class) = 0 then i_category end\n \torder by sum(ss_net_profit)/sum(ss_ext_sales_price) asc) as rank_within_parent\nfrom\n    store_sales\n   ,date_dim       d1\n   ,item\n   ,store\nwhere\n        d1.d_year = 1998\n  and d1.d_date_sk = ss_sold_date_sk\n  and i_item_sk  = ss_item_sk\n  and s_store_sk  = ss_store_sk\n  and s_state in ('GA','AL','LA','NM',\n                  'MN','NM','CO','MI')\ngroup by rollup(i_category,i_class)\norder by\n    lochierarchy desc\n       ,case when lochierarchy = 0 then i_category end\n       ,rank_within_parent\n    limit 100;\n\n\nwith /* { \"query\":\"query33\",\"streamId\":0,\"querySequence\":22 } */ ss as (\n    select\n        i_manufact_id,sum(ss_ext_sales_price) total_sales\n    from\n        store_sales,\n        date_dim,\n        customer_address,\n        item\n    where\n            i_manufact_id in (select\n                                  i_manufact_id\n                              from\n                                  item\n                              where i_category in ('Electronics'))\n      and     ss_item_sk              = i_item_sk\n      and     ss_sold_date_sk         = d_date_sk\n      and     d_year                  = 1999\n      and     d_moy                   = 7\n      and     ss_addr_sk              = ca_address_sk\n      and     ca_gmt_offset           = -5\n    group by i_manufact_id),\n                                                                 cs as (\n                                                                     select\n                                                                         i_manufact_id,sum(cs_ext_sales_price) total_sales\n                                                                     from\n                                                                         catalog_sales,\n                                                                         date_dim,\n                                                                         customer_address,\n                                                                         item\n                                                                     where\n                                                                             i_manufact_id               in (select\n                                                                                                                 i_manufact_id\n                                                                                                             from\n                                                                                                                 item\n                                                                                                             where i_category in ('Electronics'))\n                                                                       and     cs_item_sk              = i_item_sk\n                                                                       and     cs_sold_date_sk         = d_date_sk\n                                                                       and     d_year                  = 1999\n                                                                       and     d_moy                   = 7\n                                                                       and     cs_bill_addr_sk         = ca_address_sk\n                                                                       and     ca_gmt_offset           = -5\n                                                                     group by i_manufact_id),\n                                                                 ws as (\n                                                                     select\n                                                                         i_manufact_id,sum(ws_ext_sales_price) total_sales\n                                                                     from\n                                                                         web_sales,\n                                                                         date_dim,\n                                                                         customer_address,\n                                                                         item\n                                                                     where\n                                                                             i_manufact_id               in (select\n                                                                                                                 i_manufact_id\n                                                                                                             from\n                                                                                                                 item\n                                                                                                             where i_category in ('Electronics'))\n                                                                       and     ws_item_sk              = i_item_sk\n                                                                       and     ws_sold_date_sk         = d_date_sk\n                                                                       and     d_year                  = 1999\n                                                                       and     d_moy                   = 7\n                                                                       and     ws_bill_addr_sk         = ca_address_sk\n                                                                       and     ca_gmt_offset           = -5\n                                                                     group by i_manufact_id)\nselect  i_manufact_id ,sum(total_sales) total_sales\nfrom  (select * from ss\n       union all\n       select * from cs\n       union all\n       select * from ws) tmp1\ngroup by i_manufact_id\norder by total_sales\n    limit 100;\n\n\nselect /* { \"query\":\"query46\",\"streamId\":0,\"querySequence\":23 } */  c_last_name\n     ,c_first_name\n     ,ca_city\n     ,bought_city\n     ,ss_ticket_number\n     ,amt,profit\nfrom\n    (select ss_ticket_number\n          ,ss_customer_sk\n          ,ca_city bought_city\n          ,sum(ss_coupon_amt) amt\n          ,sum(ss_net_profit) profit\n     from store_sales,date_dim,store,household_demographics,customer_address\n     where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n       and store_sales.ss_store_sk = store.s_store_sk\n       and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n       and store_sales.ss_addr_sk = customer_address.ca_address_sk\n       and (household_demographics.hd_dep_count = 4 or\n            household_demographics.hd_vehicle_count= 3)\n       and date_dim.d_dow in (6,0)\n       and date_dim.d_year in (1999,1999+1,1999+2)\n       and store.s_city in ('Woodland','Rockville','Oakdale','Pleasant Grove','Springfield')\n     group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr\nwhere ss_customer_sk = c_customer_sk\n  and customer.c_current_addr_sk = current_addr.ca_address_sk\n  and current_addr.ca_city <> bought_city\norder by c_last_name\n       ,c_first_name\n       ,ca_city\n       ,bought_city\n       ,ss_ticket_number\n    limit 100;\n\n\nselect /* { \"query\":\"query62\",\"streamId\":0,\"querySequence\":24 } */\n    substr(w_warehouse_name,1,20)\n     ,sm_type\n     ,web_name\n     ,sum(case when (ws_ship_date_sk - ws_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\"\n     ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 30) and\n                    (ws_ship_date_sk - ws_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\"\n     ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 60) and\n                    (ws_ship_date_sk - ws_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\"\n     ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 90) and\n                    (ws_ship_date_sk - ws_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\"\n     ,sum(case when (ws_ship_date_sk - ws_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\"\nfrom\n    web_sales\n   ,warehouse\n   ,ship_mode\n   ,web_site\n   ,date_dim\nwhere\n    d_month_seq between 1214 and 1214 + 11\n  and ws_ship_date_sk   = d_date_sk\n  and ws_warehouse_sk   = w_warehouse_sk\n  and ws_ship_mode_sk   = sm_ship_mode_sk\n  and ws_web_site_sk    = web_site_sk\ngroup by\n    substr(w_warehouse_name,1,20)\n       ,sm_type\n       ,web_name\norder by substr(w_warehouse_name,1,20)\n       ,sm_type\n       ,web_name\n    limit 100;\n\n\nselect /* { \"query\":\"query16\",\"streamId\":0,\"querySequence\":25 } */\n    count(distinct cs_order_number) as \"order count\"\n     ,sum(cs_ext_ship_cost) as \"total shipping cost\"\n     ,sum(cs_net_profit) as \"total net profit\"\nfrom\n    catalog_sales cs1\n   ,date_dim\n   ,customer_address\n   ,call_center\nwhere\n    d_date between '2000-3-01' and\n        dateadd(day,60,to_date('2000-3-01'))\n  and cs1.cs_ship_date_sk = d_date_sk\n  and cs1.cs_ship_addr_sk = ca_address_sk\n  and ca_state = 'AL'\n  and cs1.cs_call_center_sk = cc_call_center_sk\n  and cc_county in ('Luce County','Ziebach County','San Miguel County','Dauphin County',\n                    'Marshall County'\n    )\n  and exists (select *\n              from catalog_sales cs2\n              where cs1.cs_order_number = cs2.cs_order_number\n                and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk)\n  and not exists(select *\n                 from catalog_returns cr1\n                 where cs1.cs_order_number = cr1.cr_order_number)\norder by count(distinct cs_order_number)\n    limit 100;\n\n\nselect /* { \"query\":\"query10\",\"streamId\":0,\"querySequence\":26 } */\n    cd_gender,\n    cd_marital_status,\n    cd_education_status,\n    count(*) cnt1,\n    cd_purchase_estimate,\n    count(*) cnt2,\n    cd_credit_rating,\n    count(*) cnt3,\n    cd_dep_count,\n    count(*) cnt4,\n    cd_dep_employed_count,\n    count(*) cnt5,\n    cd_dep_college_count,\n    count(*) cnt6\nfrom\n    customer c,customer_address ca,customer_demographics\nwhere\n        c.c_current_addr_sk = ca.ca_address_sk and\n        ca_county in ('Polk County','Denton County','Union County','Swisher County','Cherokee County') and\n        cd_demo_sk = c.c_current_cdemo_sk and\n    exists (select *\n            from store_sales,date_dim\n            where c.c_customer_sk = ss_customer_sk and\n                    ss_sold_date_sk = d_date_sk and\n                    d_year = 2002 and\n                d_moy between 3 and 3+3) and\n    (exists (select *\n             from web_sales,date_dim\n             where c.c_customer_sk = ws_bill_customer_sk and\n                     ws_sold_date_sk = d_date_sk and\n                     d_year = 2002 and\n                 d_moy between 3 ANd 3+3) or\n     exists (select *\n             from catalog_sales,date_dim\n             where c.c_customer_sk = cs_ship_customer_sk and\n                     cs_sold_date_sk = d_date_sk and\n                     d_year = 2002 and\n                 d_moy between 3 and 3+3))\ngroup by cd_gender,\n         cd_marital_status,\n         cd_education_status,\n         cd_purchase_estimate,\n         cd_credit_rating,\n         cd_dep_count,\n         cd_dep_employed_count,\n         cd_dep_college_count\norder by cd_gender,\n         cd_marital_status,\n         cd_education_status,\n         cd_purchase_estimate,\n         cd_credit_rating,\n         cd_dep_count,\n         cd_dep_employed_count,\n         cd_dep_college_count\n    limit 100;\n\n\nselect /* { \"query\":\"query63\",\"streamId\":0,\"querySequence\":27 } */  *\nfrom (select i_manager_id\n           ,sum(ss_sales_price) sum_sales\n           ,avg(sum(ss_sales_price)) over (partition by i_manager_id) avg_monthly_sales\n      from item\n         ,store_sales\n         ,date_dim\n         ,store\n      where ss_item_sk = i_item_sk\n        and ss_sold_date_sk = d_date_sk\n        and ss_store_sk = s_store_sk\n        and d_month_seq in (1188,1188+1,1188+2,1188+3,1188+4,1188+5,1188+6,1188+7,1188+8,1188+9,1188+10,1188+11)\n        and ((    i_category in ('Books','Children','Electronics')\n          and i_class in ('personal','portable','reference','self-help')\n          and i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',\n                          'exportiunivamalg #9','scholaramalgamalg #9'))\n          or(    i_category in ('Women','Music','Men')\n              and i_class in ('accessories','classical','fragrances','pants')\n              and i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',\n                              'importoamalg #1')))\n      group by i_manager_id, d_moy) tmp1\nwhere case when avg_monthly_sales > 0 then abs (sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1\norder by i_manager_id\n       ,avg_monthly_sales\n       ,sum_sales\n    limit 100;\n\n\nselect /* { \"query\":\"query69\",\"streamId\":0,\"querySequence\":28 } */\n    cd_gender,\n    cd_marital_status,\n    cd_education_status,\n    count(*) cnt1,\n    cd_purchase_estimate,\n    count(*) cnt2,\n    cd_credit_rating,\n    count(*) cnt3\nfrom\n    customer c,customer_address ca,customer_demographics\nwhere\n        c.c_current_addr_sk = ca.ca_address_sk and\n        ca_state in ('IA','GA','MN') and\n        cd_demo_sk = c.c_current_cdemo_sk and\n    exists (select *\n            from store_sales,date_dim\n            where c.c_customer_sk = ss_customer_sk and\n                    ss_sold_date_sk = d_date_sk and\n                    d_year = 2001 and\n                d_moy between 4 and 4+2) and\n    (not exists (select *\n                 from web_sales,date_dim\n                 where c.c_customer_sk = ws_bill_customer_sk and\n                         ws_sold_date_sk = d_date_sk and\n                         d_year = 2001 and\n                     d_moy between 4 and 4+2) and\n     not exists (select *\n                 from catalog_sales,date_dim\n                 where c.c_customer_sk = cs_ship_customer_sk and\n                         cs_sold_date_sk = d_date_sk and\n                         d_year = 2001 and\n                     d_moy between 4 and 4+2))\ngroup by cd_gender,\n         cd_marital_status,\n         cd_education_status,\n         cd_purchase_estimate,\n         cd_credit_rating\norder by cd_gender,\n         cd_marital_status,\n         cd_education_status,\n         cd_purchase_estimate,\n         cd_credit_rating\n    limit 100;\n\n\nwith /* { \"query\":\"query60\",\"streamId\":0,\"querySequence\":29 } */ ss as (\n    select\n        i_item_id,sum(ss_ext_sales_price) total_sales\n    from\n        store_sales,\n        date_dim,\n        customer_address,\n        item\n    where\n            i_item_id in (select\n                              i_item_id\n                          from\n                              item\n                          where i_category in ('Jewelry'))\n      and     ss_item_sk              = i_item_sk\n      and     ss_sold_date_sk         = d_date_sk\n      and     d_year                  = 1999\n      and     d_moy                   = 9\n      and     ss_addr_sk              = ca_address_sk\n      and     ca_gmt_offset           = -6\n    group by i_item_id),\n                                                                 cs as (\n                                                                     select\n                                                                         i_item_id,sum(cs_ext_sales_price) total_sales\n                                                                     from\n                                                                         catalog_sales,\n                                                                         date_dim,\n                                                                         customer_address,\n                                                                         item\n                                                                     where\n                                                                             i_item_id               in (select\n                                                                                                             i_item_id\n                                                                                                         from\n                                                                                                             item\n                                                                                                         where i_category in ('Jewelry'))\n                                                                       and     cs_item_sk              = i_item_sk\n                                                                       and     cs_sold_date_sk         = d_date_sk\n                                                                       and     d_year                  = 1999\n                                                                       and     d_moy                   = 9\n                                                                       and     cs_bill_addr_sk         = ca_address_sk\n                                                                       and     ca_gmt_offset           = -6\n                                                                     group by i_item_id),\n                                                                 ws as (\n                                                                     select\n                                                                         i_item_id,sum(ws_ext_sales_price) total_sales\n                                                                     from\n                                                                         web_sales,\n                                                                         date_dim,\n                                                                         customer_address,\n                                                                         item\n                                                                     where\n                                                                             i_item_id               in (select\n                                                                                                             i_item_id\n                                                                                                         from\n                                                                                                             item\n                                                                                                         where i_category in ('Jewelry'))\n                                                                       and     ws_item_sk              = i_item_sk\n                                                                       and     ws_sold_date_sk         = d_date_sk\n                                                                       and     d_year                  = 1999\n                                                                       and     d_moy                   = 9\n                                                                       and     ws_bill_addr_sk         = ca_address_sk\n                                                                       and     ca_gmt_offset           = -6\n                                                                     group by i_item_id)\nselect\n    i_item_id\n     ,sum(total_sales) total_sales\nfrom  (select * from ss\n       union all\n       select * from cs\n       union all\n       select * from ws) tmp1\ngroup by i_item_id\norder by i_item_id\n       ,total_sales\n    limit 100;\n\n\nwith /* { \"query\":\"query59\",\"streamId\":0,\"querySequence\":30 } */ wss as\n                                                                     (select d_week_seq,\n                                                                             ss_store_sk,\n                                                                             sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,\n                                                                             sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,\n                                                                             sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,\n                                                                             sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,\n                                                                             sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,\n                                                                             sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,\n                                                                             sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales\n                                                                      from store_sales,date_dim\n                                                                      where d_date_sk = ss_sold_date_sk\n                                                                      group by d_week_seq,ss_store_sk\n                                                                     )\nselect  s_store_name1,s_store_id1,d_week_seq1\n     ,sun_sales1/sun_sales2,mon_sales1/mon_sales2\n     ,tue_sales1/tue_sales2,wed_sales1/wed_sales2,thu_sales1/thu_sales2\n     ,fri_sales1/fri_sales2,sat_sales1/sat_sales2\nfrom\n    (select s_store_name s_store_name1,wss.d_week_seq d_week_seq1\n          ,s_store_id s_store_id1,sun_sales sun_sales1\n          ,mon_sales mon_sales1,tue_sales tue_sales1\n          ,wed_sales wed_sales1,thu_sales thu_sales1\n          ,fri_sales fri_sales1,sat_sales sat_sales1\n     from wss,store,date_dim d\n     where d.d_week_seq = wss.d_week_seq and\n             ss_store_sk = s_store_sk and\n         d_month_seq between 1201 and 1201 + 11) y,\n    (select s_store_name s_store_name2,wss.d_week_seq d_week_seq2\n          ,s_store_id s_store_id2,sun_sales sun_sales2\n          ,mon_sales mon_sales2,tue_sales tue_sales2\n          ,wed_sales wed_sales2,thu_sales thu_sales2\n          ,fri_sales fri_sales2,sat_sales sat_sales2\n     from wss,store,date_dim d\n     where d.d_week_seq = wss.d_week_seq and\n             ss_store_sk = s_store_sk and\n         d_month_seq between 1201+ 12 and 1201 + 23) x\nwhere s_store_id1=s_store_id2\n  and d_week_seq1=d_week_seq2-52\norder by s_store_name1,s_store_id1,d_week_seq1\n    limit 100;\n\n\nselect /* { \"query\":\"query37\",\"streamId\":0,\"querySequence\":31 } */  i_item_id\n     ,i_item_desc\n     ,i_current_price\nfrom item, inventory, date_dim, catalog_sales\nwhere i_current_price between 58 and 58 + 30\n  and inv_item_sk = i_item_sk\n  and d_date_sk=inv_date_sk\n  and d_date between cast('2001-02-11' as date) and dateadd(day,60,to_date('2001-02-11'))\n  and i_manufact_id in (910,893,984,865)\n  and inv_quantity_on_hand between 100 and 500\n  and cs_item_sk = i_item_sk\ngroup by i_item_id,i_item_desc,i_current_price\norder by i_item_id\n    limit 100;\n\n\nselect /* { \"query\":\"query98\",\"streamId\":0,\"querySequence\":32 } */ i_item_id\n     ,i_item_desc\n     ,i_category\n     ,i_class\n     ,i_current_price\n     ,sum(ss_ext_sales_price) as itemrevenue\n     ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over\n    (partition by i_class) as revenueratio\nfrom\n    store_sales\n   ,item\n   ,date_dim\nwhere\n        ss_item_sk = i_item_sk\n  and i_category in ('Women', 'Electronics', 'Shoes')\n  and ss_sold_date_sk = d_date_sk\n  and d_date between cast('2002-05-27' as date)\n    and dateadd(day,30,to_date('2002-05-27'))\ngroup by\n    i_item_id\n       ,i_item_desc\n       ,i_category\n       ,i_class\n       ,i_current_price\norder by\n    i_category\n       ,i_class\n       ,i_item_id\n       ,i_item_desc\n       ,revenueratio;\n\n\nselect /* { \"query\":\"query85\",\"streamId\":0,\"querySequence\":33 } */  substr(r_reason_desc,1,20)\n     ,avg(ws_quantity)\n     ,avg(wr_refunded_cash)\n     ,avg(wr_fee)\nfrom web_sales, web_returns, web_page, customer_demographics cd1,\n     customer_demographics cd2, customer_address, date_dim, reason\nwhere ws_web_page_sk = wp_web_page_sk\n  and ws_item_sk = wr_item_sk\n  and ws_order_number = wr_order_number\n  and ws_sold_date_sk = d_date_sk and d_year = 1998\n  and cd1.cd_demo_sk = wr_refunded_cdemo_sk\n  and cd2.cd_demo_sk = wr_returning_cdemo_sk\n  and ca_address_sk = wr_refunded_addr_sk\n  and r_reason_sk = wr_reason_sk\n  and\n    (\n            (\n                        cd1.cd_marital_status = 'D'\n                    and\n                        cd1.cd_marital_status = cd2.cd_marital_status\n                    and\n                        cd1.cd_education_status = 'Primary'\n                    and\n                        cd1.cd_education_status = cd2.cd_education_status\n                    and\n                        ws_sales_price between 100.00 and 150.00\n                )\n            or\n            (\n                        cd1.cd_marital_status = 'U'\n                    and\n                        cd1.cd_marital_status = cd2.cd_marital_status\n                    and\n                        cd1.cd_education_status = '4 yr Degree'\n                    and\n                        cd1.cd_education_status = cd2.cd_education_status\n                    and\n                        ws_sales_price between 50.00 and 100.00\n                )\n            or\n            (\n                        cd1.cd_marital_status = 'W'\n                    and\n                        cd1.cd_marital_status = cd2.cd_marital_status\n                    and\n                        cd1.cd_education_status = 'Advanced Degree'\n                    and\n                        cd1.cd_education_status = cd2.cd_education_status\n                    and\n                        ws_sales_price between 150.00 and 200.00\n                )\n        )\n  and\n    (\n            (\n                        ca_country = 'United States'\n                    and\n                        ca_state in ('LA', 'CO', 'TX')\n                    and ws_net_profit between 100 and 200\n                )\n            or\n            (\n                        ca_country = 'United States'\n                    and\n                        ca_state in ('OH', 'VA', 'MO')\n                    and ws_net_profit between 150 and 300\n                )\n            or\n            (\n                        ca_country = 'United States'\n                    and\n                        ca_state in ('FL', 'OK', 'MS')\n                    and ws_net_profit between 50 and 250\n                )\n        )\ngroup by r_reason_desc\norder by substr(r_reason_desc,1,20)\n       ,avg(ws_quantity)\n       ,avg(wr_refunded_cash)\n       ,avg(wr_fee)\n    limit 100;\n\n\nselect /* { \"query\":\"query70\",\"streamId\":0,\"querySequence\":34 } */\n    sum(ss_net_profit) as total_sum\n     ,s_state\n     ,s_county\n     ,grouping(s_state)+grouping(s_county) as lochierarchy\n     ,rank() over (\n \tpartition by grouping(s_state)+grouping(s_county),\n \tcase when grouping(s_county) = 0 then s_state end\n \torder by sum(ss_net_profit) desc) as rank_within_parent\nfrom\n    store_sales\n   ,date_dim       d1\n   ,store\nwhere\n    d1.d_month_seq between 1210 and 1210+11\n  and d1.d_date_sk = ss_sold_date_sk\n  and s_store_sk  = ss_store_sk\n  and s_state in\n      ( select s_state\n        from  (select s_state as s_state,\n                      rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking\n               from   store_sales, store, date_dim\n               where  d_month_seq between 1210 and 1210+11\n                 and d_date_sk = ss_sold_date_sk\n                 and s_store_sk  = ss_store_sk\n               group by s_state\n              ) tmp1\n        where ranking <= 5\n      )\ngroup by rollup(s_state,s_county)\norder by\n    lochierarchy desc\n       ,case when lochierarchy = 0 then s_state end\n       ,rank_within_parent\n    limit 100;\n\n\nselect /* { \"query\":\"query67\",\"streamId\":0,\"querySequence\":35 } */  *\nfrom (select i_category\n           ,i_class\n           ,i_brand\n           ,i_product_name\n           ,d_year\n           ,d_qoy\n           ,d_moy\n           ,s_store_id\n           ,sumsales\n           ,rank() over (partition by i_category order by sumsales desc) rk\n      from (select i_category\n                 ,i_class\n                 ,i_brand\n                 ,i_product_name\n                 ,d_year\n                 ,d_qoy\n                 ,d_moy\n                 ,s_store_id\n                 ,sum(coalesce(ss_sales_price*ss_quantity,0)) sumsales\n            from store_sales\n               ,date_dim\n               ,store\n               ,item\n            where  ss_sold_date_sk=d_date_sk\n              and ss_item_sk=i_item_sk\n              and ss_store_sk = s_store_sk\n              and d_month_seq between 1213 and 1213+11\n            group by  rollup(i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy,s_store_id))dw1) dw2\nwhere rk <= 100\norder by i_category\n       ,i_class\n       ,i_brand\n       ,i_product_name\n       ,d_year\n       ,d_qoy\n       ,d_moy\n       ,s_store_id\n       ,sumsales\n       ,rk\n    limit 100;\n\n\nselect /* { \"query\":\"query28\",\"streamId\":0,\"querySequence\":36 } */  *\nfrom (select avg(ss_list_price) B1_LP\n           ,count(ss_list_price) B1_CNT\n           ,count(distinct ss_list_price) B1_CNTD\n      from store_sales\n      where ss_quantity between 0 and 5\n        and (ss_list_price between 173 and 173+10\n          or ss_coupon_amt between 12318 and 12318+1000\n          or ss_wholesale_cost between 4 and 4+20)) B1,\n     (select avg(ss_list_price) B2_LP\n           ,count(ss_list_price) B2_CNT\n           ,count(distinct ss_list_price) B2_CNTD\n      from store_sales\n      where ss_quantity between 6 and 10\n        and (ss_list_price between 148 and 148+10\n          or ss_coupon_amt between 15913 and 15913+1000\n          or ss_wholesale_cost between 54 and 54+20)) B2,\n     (select avg(ss_list_price) B3_LP\n           ,count(ss_list_price) B3_CNT\n           ,count(distinct ss_list_price) B3_CNTD\n      from store_sales\n      where ss_quantity between 11 and 15\n        and (ss_list_price between 114 and 114+10\n          or ss_coupon_amt between 10419 and 10419+1000\n          or ss_wholesale_cost between 20 and 20+20)) B3,\n     (select avg(ss_list_price) B4_LP\n           ,count(ss_list_price) B4_CNT\n           ,count(distinct ss_list_price) B4_CNTD\n      from store_sales\n      where ss_quantity between 16 and 20\n        and (ss_list_price between 120 and 120+10\n          or ss_coupon_amt between 13066 and 13066+1000\n          or ss_wholesale_cost between 41 and 41+20)) B4,\n     (select avg(ss_list_price) B5_LP\n           ,count(ss_list_price) B5_CNT\n           ,count(distinct ss_list_price) B5_CNTD\n      from store_sales\n      where ss_quantity between 21 and 25\n        and (ss_list_price between 42 and 42+10\n          or ss_coupon_amt between 5802 and 5802+1000\n          or ss_wholesale_cost between 8 and 8+20)) B5,\n     (select avg(ss_list_price) B6_LP\n           ,count(ss_list_price) B6_CNT\n           ,count(distinct ss_list_price) B6_CNTD\n      from store_sales\n      where ss_quantity between 26 and 30\n        and (ss_list_price between 22 and 22+10\n          or ss_coupon_amt between 281 and 281+1000\n          or ss_wholesale_cost between 48 and 48+20)) B6\n    limit 100;\n\n\nwith /* { \"query\":\"query81\",\"streamId\":0,\"querySequence\":37 } */ customer_total_return as\n                                                                     (select cr_returning_customer_sk as ctr_customer_sk\n                                                                              ,ca_state as ctr_state,\n                                                                             sum(cr_return_amt_inc_tax) as ctr_total_return\n                                                                      from catalog_returns\n                                                                         ,date_dim\n                                                                         ,customer_address\n                                                                      where cr_returned_date_sk = d_date_sk\n                                                                        and d_year =2000\n                                                                        and cr_returning_addr_sk = ca_address_sk\n                                                                      group by cr_returning_customer_sk\n                                                                             ,ca_state )\nselect  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name\n     ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset\n     ,ca_location_type,ctr_total_return\nfrom customer_total_return ctr1\n   ,customer_address\n   ,customer\nwhere ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2\n                               from customer_total_return ctr2\n                               where ctr1.ctr_state = ctr2.ctr_state)\n  and ca_address_sk = c_current_addr_sk\n  and ca_state = 'VA'\n  and ctr1.ctr_customer_sk = c_customer_sk\norder by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name\n       ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset\n       ,ca_location_type,ctr_total_return\n    limit 100;\n\n\nwith /* { \"query\":\"query97\",\"streamId\":0,\"querySequence\":38 } */ ssci as (\n    select ss_customer_sk customer_sk\n         ,ss_item_sk item_sk\n    from store_sales,date_dim\n    where ss_sold_date_sk = d_date_sk\n      and d_month_seq between 1214 and 1214 + 11\n    group by ss_customer_sk\n           ,ss_item_sk),\n                                                                 csci as(\n                                                                     select cs_bill_customer_sk customer_sk\n                                                                          ,cs_item_sk item_sk\n                                                                     from catalog_sales,date_dim\n                                                                     where cs_sold_date_sk = d_date_sk\n                                                                       and d_month_seq between 1214 and 1214 + 11\n                                                                     group by cs_bill_customer_sk\n                                                                            ,cs_item_sk)\nselect  sum(case when ssci.customer_sk is not null and csci.customer_sk is null then 1 else 0 end) store_only\n     ,sum(case when ssci.customer_sk is null and csci.customer_sk is not null then 1 else 0 end) catalog_only\n     ,sum(case when ssci.customer_sk is not null and csci.customer_sk is not null then 1 else 0 end) store_and_catalog\nfrom ssci full outer join csci on (ssci.customer_sk=csci.customer_sk\n    and ssci.item_sk = csci.item_sk)\n    limit 100;\n\n\nselect /* { \"query\":\"query66\",\"streamId\":0,\"querySequence\":39 } */\n    w_warehouse_name\n     ,w_warehouse_sq_ft\n     ,w_city\n     ,w_county\n     ,w_state\n     ,w_country\n     ,ship_carriers\n     ,year\n     ,sum(jan_sales) as jan_sales\n     ,sum(feb_sales) as feb_sales\n     ,sum(mar_sales) as mar_sales\n     ,sum(apr_sales) as apr_sales\n     ,sum(may_sales) as may_sales\n     ,sum(jun_sales) as jun_sales\n     ,sum(jul_sales) as jul_sales\n     ,sum(aug_sales) as aug_sales\n     ,sum(sep_sales) as sep_sales\n     ,sum(oct_sales) as oct_sales\n     ,sum(nov_sales) as nov_sales\n     ,sum(dec_sales) as dec_sales\n     ,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot\n     ,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot\n     ,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot\n     ,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot\n     ,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot\n     ,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot\n     ,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot\n     ,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot\n     ,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot\n     ,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot\n     ,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot\n     ,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot\n     ,sum(jan_net) as jan_net\n     ,sum(feb_net) as feb_net\n     ,sum(mar_net) as mar_net\n     ,sum(apr_net) as apr_net\n     ,sum(may_net) as may_net\n     ,sum(jun_net) as jun_net\n     ,sum(jul_net) as jul_net\n     ,sum(aug_net) as aug_net\n     ,sum(sep_net) as sep_net\n     ,sum(oct_net) as oct_net\n     ,sum(nov_net) as nov_net\n     ,sum(dec_net) as dec_net\nfrom (\n    select\n    w_warehouse_name\n        ,w_warehouse_sq_ft\n        ,w_city\n        ,w_county\n        ,w_state\n        ,w_country\n        ,'GREAT EASTERN' || ',' || 'UPS' as ship_carriers\n        ,d_year as year\n        ,sum(case when d_moy = 1\n    then ws_ext_sales_price* ws_quantity else 0 end) as jan_sales\n        ,sum(case when d_moy = 2\n    then ws_ext_sales_price* ws_quantity else 0 end) as feb_sales\n        ,sum(case when d_moy = 3\n    then ws_ext_sales_price* ws_quantity else 0 end) as mar_sales\n        ,sum(case when d_moy = 4\n    then ws_ext_sales_price* ws_quantity else 0 end) as apr_sales\n        ,sum(case when d_moy = 5\n    then ws_ext_sales_price* ws_quantity else 0 end) as may_sales\n        ,sum(case when d_moy = 6\n    then ws_ext_sales_price* ws_quantity else 0 end) as jun_sales\n        ,sum(case when d_moy = 7\n    then ws_ext_sales_price* ws_quantity else 0 end) as jul_sales\n        ,sum(case when d_moy = 8\n    then ws_ext_sales_price* ws_quantity else 0 end) as aug_sales\n        ,sum(case when d_moy = 9\n    then ws_ext_sales_price* ws_quantity else 0 end) as sep_sales\n        ,sum(case when d_moy = 10\n    then ws_ext_sales_price* ws_quantity else 0 end) as oct_sales\n        ,sum(case when d_moy = 11\n    then ws_ext_sales_price* ws_quantity else 0 end) as nov_sales\n        ,sum(case when d_moy = 12\n    then ws_ext_sales_price* ws_quantity else 0 end) as dec_sales\n        ,sum(case when d_moy = 1\n    then ws_net_paid * ws_quantity else 0 end) as jan_net\n        ,sum(case when d_moy = 2\n    then ws_net_paid * ws_quantity else 0 end) as feb_net\n        ,sum(case when d_moy = 3\n    then ws_net_paid * ws_quantity else 0 end) as mar_net\n        ,sum(case when d_moy = 4\n    then ws_net_paid * ws_quantity else 0 end) as apr_net\n        ,sum(case when d_moy = 5\n    then ws_net_paid * ws_quantity else 0 end) as may_net\n        ,sum(case when d_moy = 6\n    then ws_net_paid * ws_quantity else 0 end) as jun_net\n        ,sum(case when d_moy = 7\n    then ws_net_paid * ws_quantity else 0 end) as jul_net\n        ,sum(case when d_moy = 8\n    then ws_net_paid * ws_quantity else 0 end) as aug_net\n        ,sum(case when d_moy = 9\n    then ws_net_paid * ws_quantity else 0 end) as sep_net\n        ,sum(case when d_moy = 10\n    then ws_net_paid * ws_quantity else 0 end) as oct_net\n        ,sum(case when d_moy = 11\n    then ws_net_paid * ws_quantity else 0 end) as nov_net\n        ,sum(case when d_moy = 12\n    then ws_net_paid * ws_quantity else 0 end) as dec_net\n    from\n    web_sales\n        ,warehouse\n        ,date_dim\n        ,time_dim\n        ,ship_mode\n    where\n    ws_warehouse_sk =  w_warehouse_sk\n    and ws_sold_date_sk = d_date_sk\n    and ws_sold_time_sk = t_time_sk\n    and ws_ship_mode_sk = sm_ship_mode_sk\n    and d_year = 1998\n    and t_time between 46866 and 46866+28800\n    and sm_carrier in ('GREAT EASTERN','UPS')\n    group by\n    w_warehouse_name\n        ,w_warehouse_sq_ft\n        ,w_city\n        ,w_county\n        ,w_state\n        ,w_country\n        ,d_year\n    union all\n    select\n    w_warehouse_name\n        ,w_warehouse_sq_ft\n        ,w_city\n        ,w_county\n        ,w_state\n        ,w_country\n        ,'GREAT EASTERN' || ',' || 'UPS' as ship_carriers\n        ,d_year as year\n        ,sum(case when d_moy = 1\n    then cs_sales_price* cs_quantity else 0 end) as jan_sales\n        ,sum(case when d_moy = 2\n    then cs_sales_price* cs_quantity else 0 end) as feb_sales\n        ,sum(case when d_moy = 3\n    then cs_sales_price* cs_quantity else 0 end) as mar_sales\n        ,sum(case when d_moy = 4\n    then cs_sales_price* cs_quantity else 0 end) as apr_sales\n        ,sum(case when d_moy = 5\n    then cs_sales_price* cs_quantity else 0 end) as may_sales\n        ,sum(case when d_moy = 6\n    then cs_sales_price* cs_quantity else 0 end) as jun_sales\n        ,sum(case when d_moy = 7\n    then cs_sales_price* cs_quantity else 0 end) as jul_sales\n        ,sum(case when d_moy = 8\n    then cs_sales_price* cs_quantity else 0 end) as aug_sales\n        ,sum(case when d_moy = 9\n    then cs_sales_price* cs_quantity else 0 end) as sep_sales\n        ,sum(case when d_moy = 10\n    then cs_sales_price* cs_quantity else 0 end) as oct_sales\n        ,sum(case when d_moy = 11\n    then cs_sales_price* cs_quantity else 0 end) as nov_sales\n        ,sum(case when d_moy = 12\n    then cs_sales_price* cs_quantity else 0 end) as dec_sales\n        ,sum(case when d_moy = 1\n    then cs_net_paid * cs_quantity else 0 end) as jan_net\n        ,sum(case when d_moy = 2\n    then cs_net_paid * cs_quantity else 0 end) as feb_net\n        ,sum(case when d_moy = 3\n    then cs_net_paid * cs_quantity else 0 end) as mar_net\n        ,sum(case when d_moy = 4\n    then cs_net_paid * cs_quantity else 0 end) as apr_net\n        ,sum(case when d_moy = 5\n    then cs_net_paid * cs_quantity else 0 end) as may_net\n        ,sum(case when d_moy = 6\n    then cs_net_paid * cs_quantity else 0 end) as jun_net\n        ,sum(case when d_moy = 7\n    then cs_net_paid * cs_quantity else 0 end) as jul_net\n        ,sum(case when d_moy = 8\n    then cs_net_paid * cs_quantity else 0 end) as aug_net\n        ,sum(case when d_moy = 9\n    then cs_net_paid * cs_quantity else 0 end) as sep_net\n        ,sum(case when d_moy = 10\n    then cs_net_paid * cs_quantity else 0 end) as oct_net\n        ,sum(case when d_moy = 11\n    then cs_net_paid * cs_quantity else 0 end) as nov_net\n        ,sum(case when d_moy = 12\n    then cs_net_paid * cs_quantity else 0 end) as dec_net\n    from\n    catalog_sales\n        ,warehouse\n        ,date_dim\n        ,time_dim\n        ,ship_mode\n    where\n    cs_warehouse_sk =  w_warehouse_sk\n    and cs_sold_date_sk = d_date_sk\n    and cs_sold_time_sk = t_time_sk\n    and cs_ship_mode_sk = sm_ship_mode_sk\n    and d_year = 1998\n    and t_time between 46866 AND 46866+28800\n    and sm_carrier in ('GREAT EASTERN','UPS')\n    group by\n    w_warehouse_name\n        ,w_warehouse_sq_ft\n        ,w_city\n        ,w_county\n        ,w_state\n        ,w_country\n        ,d_year\n    ) x\ngroup by\n    w_warehouse_name\n        ,w_warehouse_sq_ft\n        ,w_city\n        ,w_county\n        ,w_state\n        ,w_country\n        ,ship_carriers\n        ,year\norder by w_warehouse_name\n    limit 100;\n\n\nselect /* { \"query\":\"query90\",\"streamId\":0,\"querySequence\":40 } */  cast(amc as decimal(15,4))/cast(pmc as decimal(15,4)) am_pm_ratio\nfrom ( select count(*) amc\n       from web_sales, household_demographics , time_dim, web_page\n       where ws_sold_time_sk = time_dim.t_time_sk\n         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk\n         and ws_web_page_sk = web_page.wp_web_page_sk\n         and time_dim.t_hour between 8 and 8+1\n         and household_demographics.hd_dep_count = 9\n         and web_page.wp_char_count between 5000 and 5200) at,\n      ( select count(*) pmc\n       from web_sales, household_demographics , time_dim, web_page\n       where ws_sold_time_sk = time_dim.t_time_sk\n         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk\n         and ws_web_page_sk = web_page.wp_web_page_sk\n         and time_dim.t_hour between 18 and 18+1\n         and household_demographics.hd_dep_count = 9\n         and web_page.wp_char_count between 5000 and 5200) pt\norder by am_pm_ratio\n    limit 100;\n\n\nselect /* { \"query\":\"query17\",\"streamId\":0,\"querySequence\":41 } */  i_item_id\n     ,i_item_desc\n     ,s_state\n     ,count(ss_quantity) as store_sales_quantitycount\n     ,avg(ss_quantity) as store_sales_quantityave\n     ,stddev_samp(ss_quantity) as store_sales_quantitystdev\n     ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov\n     ,count(sr_return_quantity) as store_returns_quantitycount\n     ,avg(sr_return_quantity) as store_returns_quantityave\n     ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev\n     ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov\n     ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave\n     ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev\n     ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov\nfrom store_sales\n   ,store_returns\n   ,catalog_sales\n   ,date_dim d1\n   ,date_dim d2\n   ,date_dim d3\n   ,store\n   ,item\nwhere d1.d_quarter_name = '1999Q1'\n  and d1.d_date_sk = ss_sold_date_sk\n  and i_item_sk = ss_item_sk\n  and s_store_sk = ss_store_sk\n  and ss_customer_sk = sr_customer_sk\n  and ss_item_sk = sr_item_sk\n  and ss_ticket_number = sr_ticket_number\n  and sr_returned_date_sk = d2.d_date_sk\n  and d2.d_quarter_name in ('1999Q1','1999Q2','1999Q3')\n  and sr_customer_sk = cs_bill_customer_sk\n  and sr_item_sk = cs_item_sk\n  and cs_sold_date_sk = d3.d_date_sk\n  and d3.d_quarter_name in ('1999Q1','1999Q2','1999Q3')\ngroup by i_item_id\n       ,i_item_desc\n       ,s_state\norder by i_item_id\n       ,i_item_desc\n       ,s_state\n    limit 100;\n\n\nwith /* { \"query\":\"query47\",\"streamId\":0,\"querySequence\":42 } */ v1 as(\n    select i_category, i_brand,\n           s_store_name, s_company_name,\n           d_year, d_moy,\n           sum(ss_sales_price) sum_sales,\n           avg(sum(ss_sales_price)) over\n        (partition by i_category, i_brand,\n                     s_store_name, s_company_name, d_year)\n          avg_monthly_sales,\n            rank() over\n        (partition by i_category, i_brand,\n                     s_store_name, s_company_name\n           order by d_year, d_moy) rn\n    from item, store_sales, date_dim, store\n    where ss_item_sk = i_item_sk and\n            ss_sold_date_sk = d_date_sk and\n            ss_store_sk = s_store_sk and\n        (\n                    d_year = 1999 or\n                    ( d_year = 1999-1 and d_moy =12) or\n                    ( d_year = 1999+1 and d_moy =1)\n            )\n    group by i_category, i_brand,\n             s_store_name, s_company_name,\n             d_year, d_moy),\n                                                                 v2 as(\n                                                                     select v1.s_store_name, v1.s_company_name\n                                                                          ,v1.d_year, v1.d_moy\n                                                                          ,v1.avg_monthly_sales\n                                                                          ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum\n                                                                     from v1, v1 v1_lag, v1 v1_lead\n                                                                     where v1.i_category = v1_lag.i_category and\n                                                                             v1.i_category = v1_lead.i_category and\n                                                                             v1.i_brand = v1_lag.i_brand and\n                                                                             v1.i_brand = v1_lead.i_brand and\n                                                                             v1.s_store_name = v1_lag.s_store_name and\n                                                                             v1.s_store_name = v1_lead.s_store_name and\n                                                                             v1.s_company_name = v1_lag.s_company_name and\n                                                                             v1.s_company_name = v1_lead.s_company_name and\n                                                                             v1.rn = v1_lag.rn + 1 and\n                                                                             v1.rn = v1_lead.rn - 1)\nselect  *\nfrom v2\nwhere  d_year = 1999 and\n        avg_monthly_sales > 0 and\n        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1\norder by sum_sales - avg_monthly_sales, sum_sales\n    limit 100;\n\n\nwith /* { \"query\":\"query95\",\"streamId\":0,\"querySequence\":43 } */ ws_wh as\n                                                                     (select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2\n                                                                      from web_sales ws1,web_sales ws2\n                                                                      where ws1.ws_order_number = ws2.ws_order_number\n                                                                        and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)\nselect\n    count(distinct ws_order_number) as \"order count\"\n     ,sum(ws_ext_ship_cost) as \"total shipping cost\"\n     ,sum(ws_net_profit) as \"total net profit\"\nfrom\n    web_sales ws1\n   ,date_dim\n   ,customer_address\n   ,web_site\nwhere\n    d_date between '2002-2-01' and\n        dateadd(day,60,to_date('2002-2-01'))\n  and ws1.ws_ship_date_sk = d_date_sk\n  and ws1.ws_ship_addr_sk = ca_address_sk\n  and ca_state = 'TN'\n  and ws1.ws_web_site_sk = web_site_sk\n  and web_company_name = 'pri'\n  and ws1.ws_order_number in (select ws_order_number\n                              from ws_wh)\n  and ws1.ws_order_number in (select wr_order_number\n                              from web_returns,ws_wh\n                              where wr_order_number = ws_wh.ws_order_number)\norder by count(distinct ws_order_number)\n    limit 100;\n\n\nselect /* { \"query\":\"query92\",\"streamId\":0,\"querySequence\":44 } */\n    sum(ws_ext_discount_amt)  as \"Excess Discount Amount\"\nfrom\n    web_sales\n   ,item\n   ,date_dim\nwhere\n        i_manufact_id = 939\n  and i_item_sk = ws_item_sk\n  and d_date between '2002-02-16' and\n    dateadd(day,90,to_date('2002-02-16'))\n  and d_date_sk = ws_sold_date_sk\n  and ws_ext_discount_amt\n    > (\n          SELECT\n                  1.3 * avg(ws_ext_discount_amt)\n          FROM\n              web_sales\n             ,date_dim\n          WHERE\n                  ws_item_sk = i_item_sk\n            and d_date between '2002-02-16' and\n              dateadd(day,90,to_date('2002-02-16'))\n            and d_date_sk = ws_sold_date_sk\n      )\norder by sum(ws_ext_discount_amt)\n    limit 100;\n\n\nselect /* { \"query\":\"query03\",\"streamId\":0,\"querySequence\":45 } */  dt.d_year\n     ,item.i_brand_id brand_id\n     ,item.i_brand brand\n     ,sum(ss_ext_discount_amt) sum_agg\nfrom  date_dim dt\n   ,store_sales\n   ,item\nwhere dt.d_date_sk = store_sales.ss_sold_date_sk\n  and store_sales.ss_item_sk = item.i_item_sk\n  and item.i_manufact_id = 540\n  and dt.d_moy=12\ngroup by dt.d_year\n       ,item.i_brand\n       ,item.i_brand_id\norder by dt.d_year\n       ,sum_agg desc\n       ,brand_id\n    limit 100;\n\n\nWITH /* { \"query\":\"query51\",\"streamId\":0,\"querySequence\":46 } */ web_v1 as (\n    select\n        ws_item_sk item_sk, d_date,\n        sum(sum(ws_sales_price))\n                   over (partition by ws_item_sk order by d_date rows between unbounded preceding and current row) cume_sales\n    from web_sales\n       ,date_dim\n    where ws_sold_date_sk=d_date_sk\n      and d_month_seq between 1176 and 1176+11\n      and ws_item_sk is not NULL\n    group by ws_item_sk, d_date),\n                                                                 store_v1 as (\n                                                                     select\n                                                                         ss_item_sk item_sk, d_date,\n                                                                         sum(sum(ss_sales_price))\n                                                                                    over (partition by ss_item_sk order by d_date rows between unbounded preceding and current row) cume_sales\n                                                                     from store_sales\n                                                                        ,date_dim\n                                                                     where ss_sold_date_sk=d_date_sk\n                                                                       and d_month_seq between 1176 and 1176+11\n                                                                       and ss_item_sk is not NULL\n                                                                     group by ss_item_sk, d_date)\nselect  *\nfrom (select item_sk\n           ,d_date\n           ,web_sales\n           ,store_sales\n           ,max(web_sales)\n        over (partition by item_sk order by d_date rows between unbounded preceding and current row) web_cumulative\n     ,max(store_sales)\n            over (partition by item_sk order by d_date rows between unbounded preceding and current row) store_cumulative\n      from (select case when web.item_sk is not null then web.item_sk else store.item_sk end item_sk\n                 ,case when web.d_date is not null then web.d_date else store.d_date end d_date\n                 ,web.cume_sales web_sales\n                 ,store.cume_sales store_sales\n            from web_v1 web full outer join store_v1 store on (web.item_sk = store.item_sk\n                and web.d_date = store.d_date)\n           )x )y\nwhere web_cumulative > store_cumulative\norder by item_sk\n       ,d_date\n    limit 100;\n\n\nselect /* { \"query\":\"query35\",\"streamId\":0,\"querySequence\":47 } */\n    ca_state,\n    cd_gender,\n    cd_marital_status,\n    cd_dep_count,\n    count(*) cnt1,\n    stddev_samp(cd_dep_count),\n    max(cd_dep_count),\n    sum(cd_dep_count),\n    cd_dep_employed_count,\n    count(*) cnt2,\n    stddev_samp(cd_dep_employed_count),\n    max(cd_dep_employed_count),\n    sum(cd_dep_employed_count),\n    cd_dep_college_count,\n    count(*) cnt3,\n    stddev_samp(cd_dep_college_count),\n    max(cd_dep_college_count),\n    sum(cd_dep_college_count)\nfrom\n    customer c,customer_address ca,customer_demographics\nwhere\n        c.c_current_addr_sk = ca.ca_address_sk and\n        cd_demo_sk = c.c_current_cdemo_sk and\n    exists (select *\n            from store_sales,date_dim\n            where c.c_customer_sk = ss_customer_sk and\n                    ss_sold_date_sk = d_date_sk and\n                    d_year = 2000 and\n                    d_qoy < 4) and\n    (exists (select *\n             from web_sales,date_dim\n             where c.c_customer_sk = ws_bill_customer_sk and\n                     ws_sold_date_sk = d_date_sk and\n                     d_year = 2000 and\n                     d_qoy < 4) or\n     exists (select *\n             from catalog_sales,date_dim\n             where c.c_customer_sk = cs_ship_customer_sk and\n                     cs_sold_date_sk = d_date_sk and\n                     d_year = 2000 and\n                     d_qoy < 4))\ngroup by ca_state,\n         cd_gender,\n         cd_marital_status,\n         cd_dep_count,\n         cd_dep_employed_count,\n         cd_dep_college_count\norder by ca_state,\n         cd_gender,\n         cd_marital_status,\n         cd_dep_count,\n         cd_dep_employed_count,\n         cd_dep_college_count\n    limit 100;\n\n\nselect /* { \"query\":\"query49\",\"streamId\":0,\"querySequence\":48 } */  channel, item, return_ratio, return_rank, currency_rank from\n    (select\n         'web' as channel\n          ,web.item\n          ,web.return_ratio\n          ,web.return_rank\n          ,web.currency_rank\n     from (\n              select\n                  item\n                   ,return_ratio\n                   ,currency_ratio\n                   ,rank() over (order by return_ratio) as return_rank\n \t,rank() over (order by currency_ratio) as currency_rank\n              from\n                  (\tselect ws.ws_item_sk as item\n                            ,(cast(sum(coalesce(wr.wr_return_quantity,0)) as decimal(15,4))/\n                              cast(sum(coalesce(ws.ws_quantity,0)) as decimal(15,4) )) as return_ratio\n                            ,(cast(sum(coalesce(wr.wr_return_amt,0)) as decimal(15,4))/\n                              cast(sum(coalesce(ws.ws_net_paid,0)) as decimal(15,4) )) as currency_ratio\n                       from\n                           web_sales ws left outer join web_returns wr\n                                                        on (ws.ws_order_number = wr.wr_order_number and\n                                                            ws.ws_item_sk = wr.wr_item_sk)\n                          ,date_dim\n                       where\n                               wr.wr_return_amt > 10000\n                         and ws.ws_net_profit > 1\n                         and ws.ws_net_paid > 0\n                         and ws.ws_quantity > 0\n                         and ws_sold_date_sk = d_date_sk\n                         and d_year = 2002\n                         and d_moy = 11\n                       group by ws.ws_item_sk\n                  ) in_web\n          ) web\n     where\n         (\n                     web.return_rank <= 10\n                 or\n                     web.currency_rank <= 10\n             )\n     union\n     select\n         'catalog' as channel\n          ,catalog.item\n          ,catalog.return_ratio\n          ,catalog.return_rank\n          ,catalog.currency_rank\n     from (\n              select\n                  item\n                   ,return_ratio\n                   ,currency_ratio\n                   ,rank() over (order by return_ratio) as return_rank\n \t,rank() over (order by currency_ratio) as currency_rank\n              from\n                  (\tselect\n                           cs.cs_item_sk as item\n                            ,(cast(sum(coalesce(cr.cr_return_quantity,0)) as decimal(15,4))/\n                              cast(sum(coalesce(cs.cs_quantity,0)) as decimal(15,4) )) as return_ratio\n                            ,(cast(sum(coalesce(cr.cr_return_amount,0)) as decimal(15,4))/\n                              cast(sum(coalesce(cs.cs_net_paid,0)) as decimal(15,4) )) as currency_ratio\n                       from\n                           catalog_sales cs left outer join catalog_returns cr\n                                                            on (cs.cs_order_number = cr.cr_order_number and\n                                                                cs.cs_item_sk = cr.cr_item_sk)\n                          ,date_dim\n                       where\n                               cr.cr_return_amount > 10000\n                         and cs.cs_net_profit > 1\n                         and cs.cs_net_paid > 0\n                         and cs.cs_quantity > 0\n                         and cs_sold_date_sk = d_date_sk\n                         and d_year = 2002\n                         and d_moy = 11\n                       group by cs.cs_item_sk\n                  ) in_cat\n          ) catalog\n     where\n         (\n         catalog.return_rank <= 10\n        or\n         catalog.currency_rank <=10\n         )\n     union\n     select\n         'store' as channel\n             ,store.item\n             ,store.return_ratio\n             ,store.return_rank\n             ,store.currency_rank\n     from (\n         select\n         item\n             ,return_ratio\n             ,currency_ratio\n             ,rank() over (order by return_ratio) as return_rank\n             ,rank() over (order by currency_ratio) as currency_rank\n         from\n         (\tselect sts.ss_item_sk as item\n             ,(cast(sum(coalesce(sr.sr_return_quantity,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_quantity,0)) as decimal(15,4) )) as return_ratio\n             ,(cast(sum(coalesce(sr.sr_return_amt,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_net_paid,0)) as decimal(15,4) )) as currency_ratio\n         from\n         store_sales sts left outer join store_returns sr\n         on (sts.ss_ticket_number = sr.sr_ticket_number and sts.ss_item_sk = sr.sr_item_sk)\n             ,date_dim\n         where\n         sr.sr_return_amt > 10000\n         and sts.ss_net_profit > 1\n         and sts.ss_net_paid > 0\n         and sts.ss_quantity > 0\n         and ss_sold_date_sk = d_date_sk\n         and d_year = 2002\n         and d_moy = 11\n         group by sts.ss_item_sk\n         ) in_store\n         ) store\n     where  (\n         store.return_rank <= 10\n        or\n         store.currency_rank <= 10\n         )\n    )\norder by 1,4,5,2\n    limit 100;\n\n\nselect /* { \"query\":\"query09\",\"streamId\":0,\"querySequence\":49 } */ case when (select count(*)\n                                                                              from store_sales\n                                                                              where ss_quantity between 1 and 20) > 177560856\n                                                                            then (select avg(ss_ext_discount_amt)\n                                                                                  from store_sales\n                                                                                  where ss_quantity between 1 and 20)\n                                                                        else (select avg(ss_net_paid_inc_tax)\n                                                                              from store_sales\n                                                                              where ss_quantity between 1 and 20) end bucket1 ,\n                                                                   case when (select count(*)\n                                                                              from store_sales\n                                                                              where ss_quantity between 21 and 40) > 165030289\n                                                                            then (select avg(ss_ext_discount_amt)\n                                                                                  from store_sales\n                                                                                  where ss_quantity between 21 and 40)\n                                                                        else (select avg(ss_net_paid_inc_tax)\n                                                                              from store_sales\n                                                                              where ss_quantity between 21 and 40) end bucket2,\n                                                                   case when (select count(*)\n                                                                              from store_sales\n                                                                              where ss_quantity between 41 and 60) > 357290662\n                                                                            then (select avg(ss_ext_discount_amt)\n                                                                                  from store_sales\n                                                                                  where ss_quantity between 41 and 60)\n                                                                        else (select avg(ss_net_paid_inc_tax)\n                                                                              from store_sales\n                                                                              where ss_quantity between 41 and 60) end bucket3,\n                                                                   case when (select count(*)\n                                                                              from store_sales\n                                                                              where ss_quantity between 61 and 80) > 205197751\n                                                                            then (select avg(ss_ext_discount_amt)\n                                                                                  from store_sales\n                                                                                  where ss_quantity between 61 and 80)\n                                                                        else (select avg(ss_net_paid_inc_tax)\n                                                                              from store_sales\n                                                                              where ss_quantity between 61 and 80) end bucket4,\n                                                                   case when (select count(*)\n                                                                              from store_sales\n                                                                              where ss_quantity between 81 and 100) > 80111186\n                                                                            then (select avg(ss_ext_discount_amt)\n                                                                                  from store_sales\n                                                                                  where ss_quantity between 81 and 100)\n                                                                        else (select avg(ss_net_paid_inc_tax)\n                                                                              from store_sales\n                                                                              where ss_quantity between 81 and 100) end bucket5\nfrom reason\nwhere r_reason_sk = 1\n;\n\n\nwith /* { \"query\":\"query31\",\"streamId\":0,\"querySequence\":50 } */ ss as\n                                                                     (select ca_county,d_qoy, d_year,sum(ss_ext_sales_price) as store_sales\n                                                                      from store_sales,date_dim,customer_address\n                                                                      where ss_sold_date_sk = d_date_sk\n                                                                        and ss_addr_sk=ca_address_sk\n                                                                      group by ca_county,d_qoy, d_year),\n                                                                 ws as\n                                                                     (select ca_county,d_qoy, d_year,sum(ws_ext_sales_price) as web_sales\n                                                                      from web_sales,date_dim,customer_address\n                                                                      where ws_sold_date_sk = d_date_sk\n                                                                        and ws_bill_addr_sk=ca_address_sk\n                                                                      group by ca_county,d_qoy, d_year)\nselect\n    ss1.ca_county\n     ,ss1.d_year\n     ,ws2.web_sales/ws1.web_sales web_q1_q2_increase\n     ,ss2.store_sales/ss1.store_sales store_q1_q2_increase\n     ,ws3.web_sales/ws2.web_sales web_q2_q3_increase\n     ,ss3.store_sales/ss2.store_sales store_q2_q3_increase\nfrom\n    ss ss1\n   ,ss ss2\n   ,ss ss3\n   ,ws ws1\n   ,ws ws2\n   ,ws ws3\nwhere\n        ss1.d_qoy = 1\n  and ss1.d_year = 1999\n  and ss1.ca_county = ss2.ca_county\n  and ss2.d_qoy = 2\n  and ss2.d_year = 1999\n  and ss2.ca_county = ss3.ca_county\n  and ss3.d_qoy = 3\n  and ss3.d_year = 1999\n  and ss1.ca_county = ws1.ca_county\n  and ws1.d_qoy = 1\n  and ws1.d_year = 1999\n  and ws1.ca_county = ws2.ca_county\n  and ws2.d_qoy = 2\n  and ws2.d_year = 1999\n  and ws1.ca_county = ws3.ca_county\n  and ws3.d_qoy = 3\n  and ws3.d_year =1999\n  and case when ws1.web_sales > 0 then ws2.web_sales/ws1.web_sales else null end\n    > case when ss1.store_sales > 0 then ss2.store_sales/ss1.store_sales else null end\n  and case when ws2.web_sales > 0 then ws3.web_sales/ws2.web_sales else null end\n    > case when ss2.store_sales > 0 then ss3.store_sales/ss2.store_sales else null end\norder by web_q1_q2_increase;\n\n\nwith /* { \"query\":\"query11\",\"streamId\":0,\"querySequence\":51 } */ year_total as (\n    select c_customer_id customer_id\n         ,c_first_name customer_first_name\n         ,c_last_name customer_last_name\n         ,c_preferred_cust_flag customer_preferred_cust_flag\n         ,c_birth_country customer_birth_country\n         ,c_login customer_login\n         ,c_email_address customer_email_address\n         ,d_year dyear\n         ,sum(ss_ext_list_price-ss_ext_discount_amt) year_total\n         ,'s' sale_type\n    from customer\n       ,store_sales\n       ,date_dim\n    where c_customer_sk = ss_customer_sk\n      and ss_sold_date_sk = d_date_sk\n    group by c_customer_id\n           ,c_first_name\n           ,c_last_name\n           ,c_preferred_cust_flag\n           ,c_birth_country\n           ,c_login\n           ,c_email_address\n           ,d_year\n    union all\n    select c_customer_id customer_id\n         ,c_first_name customer_first_name\n         ,c_last_name customer_last_name\n         ,c_preferred_cust_flag customer_preferred_cust_flag\n         ,c_birth_country customer_birth_country\n         ,c_login customer_login\n         ,c_email_address customer_email_address\n         ,d_year dyear\n         ,sum(ws_ext_list_price-ws_ext_discount_amt) year_total\n         ,'w' sale_type\n    from customer\n       ,web_sales\n       ,date_dim\n    where c_customer_sk = ws_bill_customer_sk\n      and ws_sold_date_sk = d_date_sk\n    group by c_customer_id\n           ,c_first_name\n           ,c_last_name\n           ,c_preferred_cust_flag\n           ,c_birth_country\n           ,c_login\n           ,c_email_address\n           ,d_year\n)\nselect\n    t_s_secyear.customer_id\n     ,t_s_secyear.customer_first_name\n     ,t_s_secyear.customer_last_name\n     ,t_s_secyear.customer_login\nfrom year_total t_s_firstyear\n   ,year_total t_s_secyear\n   ,year_total t_w_firstyear\n   ,year_total t_w_secyear\nwhere t_s_secyear.customer_id = t_s_firstyear.customer_id\n  and t_s_firstyear.customer_id = t_w_secyear.customer_id\n  and t_s_firstyear.customer_id = t_w_firstyear.customer_id\n  and t_s_firstyear.sale_type = 's'\n  and t_w_firstyear.sale_type = 'w'\n  and t_s_secyear.sale_type = 's'\n  and t_w_secyear.sale_type = 'w'\n  and t_s_firstyear.dyear = 1999\n  and t_s_secyear.dyear = 1999+1\n  and t_w_firstyear.dyear = 1999\n  and t_w_secyear.dyear = 1999+1\n  and t_s_firstyear.year_total > 0\n  and t_w_firstyear.year_total > 0\n  and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else 0.0 end\n    > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else 0.0 end\norder by t_s_secyear.customer_id\n       ,t_s_secyear.customer_first_name\n       ,t_s_secyear.customer_last_name\n       ,t_s_secyear.customer_login\n    limit 100;\n\n\nselect /* { \"query\":\"query93\",\"streamId\":0,\"querySequence\":52 } */  ss_customer_sk\n     ,sum(act_sales) sumsales\nfrom (select ss_item_sk\n           ,ss_ticket_number\n           ,ss_customer_sk\n           ,case when sr_return_quantity is not null then (ss_quantity-sr_return_quantity)*ss_sales_price\n                 else (ss_quantity*ss_sales_price) end act_sales\n      from store_sales left outer join store_returns on (sr_item_sk = ss_item_sk\n          and sr_ticket_number = ss_ticket_number)\n         ,reason\n      where sr_reason_sk = r_reason_sk\n        and r_reason_desc = 'reason 75') t\ngroup by ss_customer_sk\norder by sumsales, ss_customer_sk\n    limit 100;\n\n\nselect /* { \"query\":\"query29\",\"streamId\":0,\"querySequence\":53 } */\n    i_item_id\n     ,i_item_desc\n     ,s_store_id\n     ,s_store_name\n     ,sum(ss_quantity)        as store_sales_quantity\n     ,sum(sr_return_quantity) as store_returns_quantity\n     ,sum(cs_quantity)        as catalog_sales_quantity\nfrom\n    store_sales\n   ,store_returns\n   ,catalog_sales\n   ,date_dim             d1\n   ,date_dim             d2\n   ,date_dim             d3\n   ,store\n   ,item\nwhere\n        d1.d_moy               = 4\n  and d1.d_year              = 2000\n  and d1.d_date_sk           = ss_sold_date_sk\n  and i_item_sk              = ss_item_sk\n  and s_store_sk             = ss_store_sk\n  and ss_customer_sk         = sr_customer_sk\n  and ss_item_sk             = sr_item_sk\n  and ss_ticket_number       = sr_ticket_number\n  and sr_returned_date_sk    = d2.d_date_sk\n  and d2.d_moy               between 4 and  4 + 3\n  and d2.d_year              = 2000\n  and sr_customer_sk         = cs_bill_customer_sk\n  and sr_item_sk             = cs_item_sk\n  and cs_sold_date_sk        = d3.d_date_sk\n  and d3.d_year              in (2000,2000+1,2000+2)\ngroup by\n    i_item_id\n       ,i_item_desc\n       ,s_store_id\n       ,s_store_name\norder by\n    i_item_id\n       ,i_item_desc\n       ,s_store_id\n       ,s_store_name\n    limit 100;\n\n\nselect /* { \"query\":\"query38\",\"streamId\":0,\"querySequence\":54 } */  count(*) from (\n                                                                                      select distinct c_last_name, c_first_name, d_date\n                                                                                      from store_sales, date_dim, customer\n                                                                                      where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n                                                                                        and store_sales.ss_customer_sk = customer.c_customer_sk\n                                                                                        and d_month_seq between 1176 and 1176 + 11\n                                                                                      intersect\n                                                                                      select distinct c_last_name, c_first_name, d_date\n                                                                                      from catalog_sales, date_dim, customer\n                                                                                      where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk\n                                                                                        and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk\n                                                                                        and d_month_seq between 1176 and 1176 + 11\n                                                                                      intersect\n                                                                                      select distinct c_last_name, c_first_name, d_date\n                                                                                      from web_sales, date_dim, customer\n                                                                                      where web_sales.ws_sold_date_sk = date_dim.d_date_sk\n                                                                                        and web_sales.ws_bill_customer_sk = customer.c_customer_sk\n                                                                                        and d_month_seq between 1176 and 1176 + 11\n                                                                                  ) hot_cust\n    limit 100;\n\n\nselect /* { \"query\":\"query22\",\"streamId\":0,\"querySequence\":55 } */  i_product_name\n     ,i_brand\n     ,i_class\n     ,i_category\n     ,avg(inv_quantity_on_hand) qoh\nfrom inventory\n   ,date_dim\n   ,item\nwhere inv_date_sk=d_date_sk\n  and inv_item_sk=i_item_sk\n  and d_month_seq between 1190 and 1190 + 11\ngroup by rollup(i_product_name\n       ,i_brand\n       ,i_class\n       ,i_category)\norder by qoh, i_product_name, i_brand, i_class, i_category\n    limit 100;\n\n\nselect /* { \"query\":\"query89\",\"streamId\":0,\"querySequence\":56 } */  *\nfrom(\n        select i_category, i_class, i_brand,\n               s_store_name, s_company_name,\n               d_moy,\n               sum(ss_sales_price) sum_sales,\n               avg(sum(ss_sales_price)) over\n            (partition by i_category, i_brand, s_store_name, s_company_name)\n         avg_monthly_sales\n        from item, store_sales, date_dim, store\n        where ss_item_sk = i_item_sk and\n                ss_sold_date_sk = d_date_sk and\n                ss_store_sk = s_store_sk and\n                d_year in (2000) and\n            ((i_category in ('Electronics','Women','Home') and\n              i_class in ('cameras','maternity','kids')\n                 )\n                or (i_category in ('Sports','Jewelry','Shoes') and\n                    i_class in ('guns','semi-precious','athletic')\n                 ))\n        group by i_category, i_class, i_brand,\n                 s_store_name, s_company_name, d_moy) tmp1\nwhere case when (avg_monthly_sales <> 0) then (abs(sum_sales - avg_monthly_sales) / avg_monthly_sales) else null end > 0.1\norder by sum_sales - avg_monthly_sales, s_store_name\n    limit 100;\n\n\nselect /* { \"query\":\"query15\",\"streamId\":0,\"querySequence\":57 } */  ca_zip\n     ,sum(cs_sales_price)\nfrom catalog_sales\n   ,customer\n   ,customer_address\n   ,date_dim\nwhere cs_bill_customer_sk = c_customer_sk\n  and c_current_addr_sk = ca_address_sk\n  and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',\n                               '85392', '85460', '80348', '81792')\n    or ca_state in ('CA','WA','GA')\n    or cs_sales_price > 500)\n  and cs_sold_date_sk = d_date_sk\n  and d_qoy = 2 and d_year = 2000\ngroup by ca_zip\norder by ca_zip\n    limit 100;\n\n\nselect /* { \"query\":\"query06\",\"streamId\":0,\"querySequence\":58 } */  a.ca_state state, count(*) cnt\nfrom customer_address a\n   ,customer c\n   ,store_sales s\n   ,date_dim d\n   ,item i\nwhere       a.ca_address_sk = c.c_current_addr_sk\n  and c.c_customer_sk = s.ss_customer_sk\n  and s.ss_sold_date_sk = d.d_date_sk\n  and s.ss_item_sk = i.i_item_sk\n  and d.d_month_seq =\n      (select distinct (d_month_seq)\n       from date_dim\n       where d_year = 2002\n         and d_moy = 7 )\n  and i.i_current_price > 1.2 *\n                          (select avg(j.i_current_price)\n                           from item j\n                           where j.i_category = i.i_category)\ngroup by a.ca_state\nhaving count(*) >= 10\norder by cnt, a.ca_state\n    limit 100;\n\n\nselect /* { \"query\":\"query52\",\"streamId\":0,\"querySequence\":59 } */  dt.d_year\n     ,item.i_brand_id brand_id\n     ,item.i_brand brand\n     ,sum(ss_ext_sales_price) ext_price\nfrom date_dim dt\n   ,store_sales\n   ,item\nwhere dt.d_date_sk = store_sales.ss_sold_date_sk\n  and store_sales.ss_item_sk = item.i_item_sk\n  and item.i_manager_id = 1\n  and dt.d_moy=11\n  and dt.d_year=2002\ngroup by dt.d_year\n       ,item.i_brand\n       ,item.i_brand_id\norder by dt.d_year\n       ,ext_price desc\n       ,brand_id\n    limit 100 ;\n\n\nselect /* { \"query\":\"query50\",\"streamId\":0,\"querySequence\":60 } */\n    s_store_name\n     ,s_company_id\n     ,s_street_number\n     ,s_street_name\n     ,s_street_type\n     ,s_suite_number\n     ,s_city\n     ,s_county\n     ,s_state\n     ,s_zip\n     ,sum(case when (sr_returned_date_sk - ss_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\"\n     ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 30) and\n                    (sr_returned_date_sk - ss_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\"\n     ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 60) and\n                    (sr_returned_date_sk - ss_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\"\n     ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 90) and\n                    (sr_returned_date_sk - ss_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\"\n     ,sum(case when (sr_returned_date_sk - ss_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\"\nfrom\n    store_sales\n   ,store_returns\n   ,store\n   ,date_dim d1\n   ,date_dim d2\nwhere\n        d2.d_year = 1998\n  and d2.d_moy  = 10\n  and ss_ticket_number = sr_ticket_number\n  and ss_item_sk = sr_item_sk\n  and ss_sold_date_sk   = d1.d_date_sk\n  and sr_returned_date_sk   = d2.d_date_sk\n  and ss_customer_sk = sr_customer_sk\n  and ss_store_sk = s_store_sk\ngroup by\n    s_store_name\n       ,s_company_id\n       ,s_street_number\n       ,s_street_name\n       ,s_street_type\n       ,s_suite_number\n       ,s_city\n       ,s_county\n       ,s_state\n       ,s_zip\norder by s_store_name\n       ,s_company_id\n       ,s_street_number\n       ,s_street_name\n       ,s_street_type\n       ,s_suite_number\n       ,s_city\n       ,s_county\n       ,s_state\n       ,s_zip\n    limit 100;\n\n\nselect /* { \"query\":\"query42\",\"streamId\":0,\"querySequence\":61 } */  dt.d_year\n     ,item.i_category_id\n     ,item.i_category\n     ,sum(ss_ext_sales_price)\nfrom \tdate_dim dt\n   ,store_sales\n   ,item\nwhere dt.d_date_sk = store_sales.ss_sold_date_sk\n  and store_sales.ss_item_sk = item.i_item_sk\n  and item.i_manager_id = 1\n  and dt.d_moy=12\n  and dt.d_year=2001\ngroup by \tdt.d_year\n       ,item.i_category_id\n       ,item.i_category\norder by       sum(ss_ext_sales_price) desc,dt.d_year\n       ,item.i_category_id\n       ,item.i_category\n    limit 100 ;\n\n\nselect /* { \"query\":\"query41\",\"streamId\":0,\"querySequence\":62 } */  distinct(i_product_name)\nfrom item i1\nwhere i_manufact_id between 869 and 869+40\n  and (select count(*) as item_cnt\n       from item\n       where (i_manufact = i1.i_manufact and\n              ((i_category = 'Women' and\n                (i_color = 'seashell' or i_color = 'indian') and\n                (i_units = 'Carton' or i_units = 'Dozen') and\n                (i_size = 'small' or i_size = 'extra large')\n                   ) or\n               (i_category = 'Women' and\n                (i_color = 'thistle' or i_color = 'green') and\n                (i_units = 'Box' or i_units = 'Tsp') and\n                (i_size = 'N/A' or i_size = 'large')\n                   ) or\n               (i_category = 'Men' and\n                (i_color = 'steel' or i_color = 'papaya') and\n                (i_units = 'Dram' or i_units = 'Bundle') and\n                (i_size = 'petite' or i_size = 'economy')\n                   ) or\n               (i_category = 'Men' and\n                (i_color = 'pink' or i_color = 'black') and\n                (i_units = 'Gross' or i_units = 'Oz') and\n                (i_size = 'small' or i_size = 'extra large')\n                   ))) or\n           (i_manufact = i1.i_manufact and\n            ((i_category = 'Women' and\n              (i_color = 'lemon' or i_color = 'chocolate') and\n              (i_units = 'Each' or i_units = 'N/A') and\n              (i_size = 'small' or i_size = 'extra large')\n                 ) or\n             (i_category = 'Women' and\n              (i_color = 'purple' or i_color = 'peru') and\n              (i_units = 'Ounce' or i_units = 'Unknown') and\n              (i_size = 'N/A' or i_size = 'large')\n                 ) or\n             (i_category = 'Men' and\n              (i_color = 'rosy' or i_color = 'floral') and\n              (i_units = 'Pound' or i_units = 'Ton') and\n              (i_size = 'petite' or i_size = 'economy')\n                 ) or\n             (i_category = 'Men' and\n              (i_color = 'plum' or i_color = 'firebrick') and\n              (i_units = 'Bunch' or i_units = 'Gram') and\n              (i_size = 'small' or i_size = 'extra large')\n                 )))) > 0\norder by i_product_name\n    limit 100;\n\n\nselect /* { \"query\":\"query08\",\"streamId\":0,\"querySequence\":63 } */  s_store_name\n     ,sum(ss_net_profit)\nfrom store_sales\n   ,date_dim\n   ,store,\n    (select ca_zip\n     from (\n              SELECT substr(ca_zip,1,5) ca_zip\n              FROM customer_address\n              WHERE substr(ca_zip,1,5) IN (\n                                           '10338','56623','51423','26456','19500','65832',\n                                           '17178','68879','49935','49849','93956',\n                                           '71765','45100','50587','68389','41899',\n                                           '98316','56217','94686','59350','32857',\n                                           '14925','31266','37817','27519','20787',\n                                           '26967','49045','39397','32010','23144',\n                                           '53580','15491','74151','18442','51916',\n                                           '17730','22824','28290','21657','45460',\n                                           '39386','21133','35017','19894','21759',\n                                           '79293','86733','76777','41688','13810',\n                                           '49053','17992','13395','19869','40785',\n                                           '63897','65049','27388','94701','41482',\n                                           '97923','23951','88284','61718','94317',\n                                           '72294','63544','31306','41242','28830',\n                                           '75535','86189','88177','16147','12902',\n                                           '48271','54036','20936','27802','96741',\n                                           '70286','75710','16034','90285','22058',\n                                           '52590','40584','62441','64039','68999',\n                                           '64327','33844','52497','88495','25989',\n                                           '67814','13767','83194','99395','35524',\n                                           '89640','48834','51875','71073','25383',\n                                           '19129','57805','47962','61905','19557',\n                                           '74159','98032','13917','50936','47993',\n                                           '41606','17592','11470','28216','19732',\n                                           '97958','60997','85688','96863','16605',\n                                           '10898','31340','71340','72902','98949',\n                                           '74440','53057','30323','76166','27195',\n                                           '11204','32771','38189','83221','22295',\n                                           '15325','20844','65549','69207','71903',\n                                           '63929','56922','25733','75482','14986',\n                                           '79223','73692','98769','70275','33793',\n                                           '13057','30142','95737','30072','32097',\n                                           '25845','50282','19289','92221','59533',\n                                           '37375','29706','48186','22385','55809',\n                                           '17416','10592','55385','71829','91975',\n                                           '73557','38036','10448','95252','51386',\n                                           '14190','15247','39907','79438','78053',\n                                           '66623','27720','84139','74147','58637',\n                                           '11434','36573','10081','53536','41724',\n                                           '97898','36752','50384','87352','35696',\n                                           '69486','50026','27837','42592','58865',\n                                           '80523','53682','65423','77611','98529',\n                                           '13909','13727','52190','36152','48355',\n                                           '62496','16527','18143','98830','75198',\n                                           '73043','64043','63042','67797','50656',\n                                           '27700','60687','57905','94404','15733',\n                                           '80809','74562','84493','67977','11213',\n                                           '19125','84496','16435','97510','46040',\n                                           '33968','20256','42332','16480','54277',\n                                           '82819','93799','69101','57689','42821',\n                                           '68073','49342','46915','25825','92332',\n                                           '20219','96577','49463','19221','35814',\n                                           '64783','97303','52061','24357','58167',\n                                           '56286','64474','99847','53626','39703',\n                                           '24880','24365','50652','29611','90638',\n                                           '59246','27171','30483','11708','38630',\n                                           '81914','48269','11720','88662','68844',\n                                           '54838','93795','38102','33481','97546',\n                                           '49306','97216','49032','14270','72418',\n                                           '32540','53208','15588','29990','10407',\n                                           '92334','48543','51495','77996','53686',\n                                           '14827','30978','30482','86296','48869',\n                                           '59600','29495','24775','34645','19763',\n                                           '98602','20456','10468','13887','65714',\n                                           '74740','37096','96240','44111','54109',\n                                           '62693','87874','64295','62027','86027',\n                                           '54341','68582','67809','44159','97913',\n                                           '79150','38974','64754','73946','20840',\n                                           '16138','58939','20428','19890','70842',\n                                           '78648','55576','37267','40470','12957',\n                                           '57553','53593','34067','22555','79719',\n                                           '25809','28496','11083','87624','83622',\n                                           '84898','28678','14297','79461','22910',\n                                           '87129','49941','64817','93905','39721',\n                                           '81837','18753','86432','67821','66080',\n                                           '28246','13466','16363','56950','35446',\n                                           '58326','11760','33962','28399','45848',\n                                           '52560','66894','15169','20988','85925',\n                                           '38582','34825','94227','56758','24801',\n                                           '14128','14012','35824','49784')\n              intersect\n              select ca_zip\n              from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt\n                    FROM customer_address, customer\n                    WHERE ca_address_sk = c_current_addr_sk and\n                            c_preferred_cust_flag='Y'\n                    group by ca_zip\n                    having count(*) > 10)A1)A2) V1\nwhere ss_store_sk = s_store_sk\n  and ss_sold_date_sk = d_date_sk\n  and d_qoy = 1 and d_year = 2002\n  and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))\ngroup by s_store_name\norder by s_store_name\n    limit 100;\n\n\nselect /* { \"query\":\"query12\",\"streamId\":0,\"querySequence\":64 } */  i_item_id\n     ,i_item_desc\n     ,i_category\n     ,i_class\n     ,i_current_price\n     ,sum(ws_ext_sales_price) as itemrevenue\n     ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over\n    (partition by i_class) as revenueratio\nfrom\n    web_sales\n   ,item\n   ,date_dim\nwhere\n        ws_item_sk = i_item_sk\n  and i_category in ('Shoes', 'Children', 'Electronics')\n  and ws_sold_date_sk = d_date_sk\n  and d_date between cast('2002-04-12' as date)\n    and dateadd(day,30,to_date('2002-04-12'))\ngroup by\n    i_item_id\n       ,i_item_desc\n       ,i_category\n       ,i_class\n       ,i_current_price\norder by\n    i_category\n       ,i_class\n       ,i_item_id\n       ,i_item_desc\n       ,revenueratio\n    limit 100;\n\n\nselect /* { \"query\":\"query20\",\"streamId\":0,\"querySequence\":65 } */  i_item_id\n     ,i_item_desc\n     ,i_category\n     ,i_class\n     ,i_current_price\n     ,sum(cs_ext_sales_price) as itemrevenue\n     ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over\n    (partition by i_class) as revenueratio\nfrom catalog_sales\n   ,item\n   ,date_dim\nwhere cs_item_sk = i_item_sk\n  and i_category in ('Men', 'Electronics', 'Music')\n  and cs_sold_date_sk = d_date_sk\n  and d_date between cast('2001-03-09' as date)\n    and dateadd(day,30,to_date('2001-03-09'))\ngroup by i_item_id\n       ,i_item_desc\n       ,i_category\n       ,i_class\n       ,i_current_price\norder by i_category\n       ,i_class\n       ,i_item_id\n       ,i_item_desc\n       ,revenueratio\n    limit 100;\n\n\nselect /* { \"query\":\"query88\",\"streamId\":0,\"querySequence\":66 } */  *\nfrom\n    (select count(*) h8_30_to_9\n     from store_sales, household_demographics , time_dim, store\n     where ss_sold_time_sk = time_dim.t_time_sk\n       and ss_hdemo_sk = household_demographics.hd_demo_sk\n       and ss_store_sk = s_store_sk\n       and time_dim.t_hour = 8\n       and time_dim.t_minute >= 30\n       and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n            (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n            (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n       and store.s_store_name = 'ese') s1,\n    (select count(*) h9_to_9_30\n     from store_sales, household_demographics , time_dim, store\n     where ss_sold_time_sk = time_dim.t_time_sk\n       and ss_hdemo_sk = household_demographics.hd_demo_sk\n       and ss_store_sk = s_store_sk\n       and time_dim.t_hour = 9\n       and time_dim.t_minute < 30\n       and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n            (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n            (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n       and store.s_store_name = 'ese') s2,\n    (select count(*) h9_30_to_10\n     from store_sales, household_demographics , time_dim, store\n     where ss_sold_time_sk = time_dim.t_time_sk\n       and ss_hdemo_sk = household_demographics.hd_demo_sk\n       and ss_store_sk = s_store_sk\n       and time_dim.t_hour = 9\n       and time_dim.t_minute >= 30\n       and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n            (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n            (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n       and store.s_store_name = 'ese') s3,\n    (select count(*) h10_to_10_30\n     from store_sales, household_demographics , time_dim, store\n     where ss_sold_time_sk = time_dim.t_time_sk\n       and ss_hdemo_sk = household_demographics.hd_demo_sk\n       and ss_store_sk = s_store_sk\n       and time_dim.t_hour = 10\n       and time_dim.t_minute < 30\n       and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n            (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n            (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n       and store.s_store_name = 'ese') s4,\n    (select count(*) h10_30_to_11\n     from store_sales, household_demographics , time_dim, store\n     where ss_sold_time_sk = time_dim.t_time_sk\n       and ss_hdemo_sk = household_demographics.hd_demo_sk\n       and ss_store_sk = s_store_sk\n       and time_dim.t_hour = 10\n       and time_dim.t_minute >= 30\n       and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n            (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n            (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n       and store.s_store_name = 'ese') s5,\n    (select count(*) h11_to_11_30\n     from store_sales, household_demographics , time_dim, store\n     where ss_sold_time_sk = time_dim.t_time_sk\n       and ss_hdemo_sk = household_demographics.hd_demo_sk\n       and ss_store_sk = s_store_sk\n       and time_dim.t_hour = 11\n       and time_dim.t_minute < 30\n       and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n            (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n            (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n       and store.s_store_name = 'ese') s6,\n    (select count(*) h11_30_to_12\n     from store_sales, household_demographics , time_dim, store\n     where ss_sold_time_sk = time_dim.t_time_sk\n       and ss_hdemo_sk = household_demographics.hd_demo_sk\n       and ss_store_sk = s_store_sk\n       and time_dim.t_hour = 11\n       and time_dim.t_minute >= 30\n       and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n            (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n            (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n       and store.s_store_name = 'ese') s7,\n    (select count(*) h12_to_12_30\n     from store_sales, household_demographics , time_dim, store\n     where ss_sold_time_sk = time_dim.t_time_sk\n       and ss_hdemo_sk = household_demographics.hd_demo_sk\n       and ss_store_sk = s_store_sk\n       and time_dim.t_hour = 12\n       and time_dim.t_minute < 30\n       and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n            (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n            (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n       and store.s_store_name = 'ese') s8\n;\n\n\nselect /* { \"query\":\"query82\",\"streamId\":0,\"querySequence\":67 } */  i_item_id\n     ,i_item_desc\n     ,i_current_price\nfrom item, inventory, date_dim, store_sales\nwhere i_current_price between 72 and 72+30\n  and inv_item_sk = i_item_sk\n  and d_date_sk=inv_date_sk\n  and d_date between cast('1998-01-23' as date) and dateadd(day,60,to_date('1998-01-23'))\n  and i_manufact_id in (412,343,781,156)\n  and inv_quantity_on_hand between 100 and 500\n  and ss_item_sk = i_item_sk\ngroup by i_item_id,i_item_desc,i_current_price\norder by i_item_id\n    limit 100;\n\n\nwith /* { \"query\":\"query23_p1\",\"streamId\":0,\"querySequence\":68 } */ frequent_ss_items as\n                                                                        (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt\n                                                                         from store_sales\n                                                                            ,date_dim\n                                                                            ,item\n                                                                         where ss_sold_date_sk = d_date_sk\n                                                                           and ss_item_sk = i_item_sk\n                                                                           and d_year in (2000,2000+1,2000+2,2000+3)\n                                                                         group by substr(i_item_desc,1,30),i_item_sk,d_date\n                                                                         having count(*) >4),\n                                                                    max_store_sales as\n                                                                        (select max(csales) tpcds_cmax\n                                                                         from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales\n                                                                               from store_sales\n                                                                                  ,customer\n                                                                                  ,date_dim\n                                                                               where ss_customer_sk = c_customer_sk\n                                                                                 and ss_sold_date_sk = d_date_sk\n                                                                                 and d_year in (2000,2000+1,2000+2,2000+3)\n                                                                               group by c_customer_sk)),\n                                                                    best_ss_customer as\n                                                                        (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales\n                                                                         from store_sales\n                                                                            ,customer\n                                                                         where ss_customer_sk = c_customer_sk\n                                                                         group by c_customer_sk\n                                                                         having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select\n                                                                                                                                    *\n                                                                                                                                from\n                                                                                                                                    max_store_sales))\nselect  sum(sales)\nfrom (select cs_quantity*cs_list_price sales\n      from catalog_sales\n         ,date_dim\n      where d_year = 2000\n        and d_moy = 2\n        and cs_sold_date_sk = d_date_sk\n        and cs_item_sk in (select item_sk from frequent_ss_items)\n        and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)\n      union all\n      select ws_quantity*ws_list_price sales\n      from web_sales\n         ,date_dim\n      where d_year = 2000\n        and d_moy = 2\n        and ws_sold_date_sk = d_date_sk\n        and ws_item_sk in (select item_sk from frequent_ss_items)\n        and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer))\n         limit 100;\n\nwith /* { \"query\":\"query23_p2\",\"streamId\":0,\"querySequence\":68 } */ frequent_ss_items as\n                                                                        (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt\n                                                                         from store_sales\n                                                                            ,date_dim\n                                                                            ,item\n                                                                         where ss_sold_date_sk = d_date_sk\n                                                                           and ss_item_sk = i_item_sk\n                                                                           and d_year in (2000,2000 + 1,2000 + 2,2000 + 3)\n                                                                         group by substr(i_item_desc,1,30),i_item_sk,d_date\n                                                                         having count(*) >4),\n                                                                    max_store_sales as\n                                                                        (select max(csales) tpcds_cmax\n                                                                         from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales\n                                                                               from store_sales\n                                                                                  ,customer\n                                                                                  ,date_dim\n                                                                               where ss_customer_sk = c_customer_sk\n                                                                                 and ss_sold_date_sk = d_date_sk\n                                                                                 and d_year in (2000,2000+1,2000+2,2000+3)\n                                                                               group by c_customer_sk)),\n                                                                    best_ss_customer as\n                                                                        (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales\n                                                                         from store_sales\n                                                                            ,customer\n                                                                         where ss_customer_sk = c_customer_sk\n                                                                         group by c_customer_sk\n                                                                         having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select\n                                                                                                                                    *\n                                                                                                                                from max_store_sales))\nselect  c_last_name,c_first_name,sales\nfrom (select c_last_name,c_first_name,sum(cs_quantity*cs_list_price) sales\n      from catalog_sales\n         ,customer\n         ,date_dim\n      where d_year = 2000\n        and d_moy = 2\n        and cs_sold_date_sk = d_date_sk\n        and cs_item_sk in (select item_sk from frequent_ss_items)\n        and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)\n        and cs_bill_customer_sk = c_customer_sk\n      group by c_last_name,c_first_name\n      union all\n      select c_last_name,c_first_name,sum(ws_quantity*ws_list_price) sales\n      from web_sales\n         ,customer\n         ,date_dim\n      where d_year = 2000\n        and d_moy = 2\n        and ws_sold_date_sk = d_date_sk\n        and ws_item_sk in (select item_sk from frequent_ss_items)\n        and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)\n        and ws_bill_customer_sk = c_customer_sk\n      group by c_last_name,c_first_name)\norder by c_last_name,c_first_name,sales\n    limit 100;\n\n\nwith /* { \"query\":\"query14_p1\",\"streamId\":0,\"querySequence\":69 } */  cross_items as\n                                                                         (select i_item_sk ss_item_sk\n                                                                          from item,\n                                                                               (select iss.i_brand_id brand_id\n                                                                                     ,iss.i_class_id class_id\n                                                                                     ,iss.i_category_id category_id\n                                                                                from store_sales\n                                                                                   ,item iss\n                                                                                   ,date_dim d1\n                                                                                where ss_item_sk = iss.i_item_sk\n                                                                                  and ss_sold_date_sk = d1.d_date_sk\n                                                                                  and d1.d_year between 1998 AND 1998 + 2\n                                                                                intersect\n                                                                                select ics.i_brand_id\n                                                                                     ,ics.i_class_id\n                                                                                     ,ics.i_category_id\n                                                                                from catalog_sales\n                                                                                   ,item ics\n                                                                                   ,date_dim d2\n                                                                                where cs_item_sk = ics.i_item_sk\n                                                                                  and cs_sold_date_sk = d2.d_date_sk\n                                                                                  and d2.d_year between 1998 AND 1998 + 2\n                                                                                intersect\n                                                                                select iws.i_brand_id\n                                                                                     ,iws.i_class_id\n                                                                                     ,iws.i_category_id\n                                                                                from web_sales\n                                                                                   ,item iws\n                                                                                   ,date_dim d3\n                                                                                where ws_item_sk = iws.i_item_sk\n                                                                                  and ws_sold_date_sk = d3.d_date_sk\n                                                                                  and d3.d_year between 1998 AND 1998 + 2)\n                                                                          where i_brand_id = brand_id\n                                                                            and i_class_id = class_id\n                                                                            and i_category_id = category_id\n                                                                         ),\n                                                                     avg_sales as\n                                                                         (select avg(quantity*list_price) average_sales\n                                                                          from (select ss_quantity quantity\n                                                                                     ,ss_list_price list_price\n                                                                                from store_sales\n                                                                                   ,date_dim\n                                                                                where ss_sold_date_sk = d_date_sk\n                                                                                  and d_year between 1998 and 1998 + 2\n                                                                                union all\n                                                                                select cs_quantity quantity\n                                                                                     ,cs_list_price list_price\n                                                                                from catalog_sales\n                                                                                   ,date_dim\n                                                                                where cs_sold_date_sk = d_date_sk\n                                                                                  and d_year between 1998 and 1998 + 2\n                                                                                union all\n                                                                                select ws_quantity quantity\n                                                                                     ,ws_list_price list_price\n                                                                                from web_sales\n                                                                                   ,date_dim\n                                                                                where ws_sold_date_sk = d_date_sk\n                                                                                  and d_year between 1998 and 1998 + 2) x)\nselect  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)\nfrom(\n        select 'store' channel, i_brand_id,i_class_id\n             ,i_category_id,sum(ss_quantity*ss_list_price) sales\n             , count(*) number_sales\n        from store_sales\n           ,item\n           ,date_dim\n        where ss_item_sk in (select ss_item_sk from cross_items)\n          and ss_item_sk = i_item_sk\n          and ss_sold_date_sk = d_date_sk\n          and d_year = 1998+2\n          and d_moy = 11\n        group by i_brand_id,i_class_id,i_category_id\n        having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)\n        union all\n        select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales\n        from catalog_sales\n           ,item\n           ,date_dim\n        where cs_item_sk in (select ss_item_sk from cross_items)\n          and cs_item_sk = i_item_sk\n          and cs_sold_date_sk = d_date_sk\n          and d_year = 1998+2\n          and d_moy = 11\n        group by i_brand_id,i_class_id,i_category_id\n        having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)\n        union all\n        select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales\n        from web_sales\n           ,item\n           ,date_dim\n        where ws_item_sk in (select ss_item_sk from cross_items)\n          and ws_item_sk = i_item_sk\n          and ws_sold_date_sk = d_date_sk\n          and d_year = 1998+2\n          and d_moy = 11\n        group by i_brand_id,i_class_id,i_category_id\n        having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)\n    ) y\ngroup by rollup (channel, i_brand_id,i_class_id,i_category_id)\norder by channel,i_brand_id,i_class_id,i_category_id\n    limit 100;\n\nwith /* { \"query\":\"query14_p2\",\"streamId\":0,\"querySequence\":69 } */  cross_items as\n                                                                         (select i_item_sk ss_item_sk\n                                                                          from item,\n                                                                               (select iss.i_brand_id brand_id\n                                                                                     ,iss.i_class_id class_id\n                                                                                     ,iss.i_category_id category_id\n                                                                                from store_sales\n                                                                                   ,item iss\n                                                                                   ,date_dim d1\n                                                                                where ss_item_sk = iss.i_item_sk\n                                                                                  and ss_sold_date_sk = d1.d_date_sk\n                                                                                  and d1.d_year between 1998 AND 1998 + 2\n                                                                                intersect\n                                                                                select ics.i_brand_id\n                                                                                     ,ics.i_class_id\n                                                                                     ,ics.i_category_id\n                                                                                from catalog_sales\n                                                                                   ,item ics\n                                                                                   ,date_dim d2\n                                                                                where cs_item_sk = ics.i_item_sk\n                                                                                  and cs_sold_date_sk = d2.d_date_sk\n                                                                                  and d2.d_year between 1998 AND 1998 + 2\n                                                                                intersect\n                                                                                select iws.i_brand_id\n                                                                                     ,iws.i_class_id\n                                                                                     ,iws.i_category_id\n                                                                                from web_sales\n                                                                                   ,item iws\n                                                                                   ,date_dim d3\n                                                                                where ws_item_sk = iws.i_item_sk\n                                                                                  and ws_sold_date_sk = d3.d_date_sk\n                                                                                  and d3.d_year between 1998 AND 1998 + 2) x\n                                                                          where i_brand_id = brand_id\n                                                                            and i_class_id = class_id\n                                                                            and i_category_id = category_id\n                                                                         ),\n                                                                     avg_sales as\n                                                                         (select avg(quantity*list_price) average_sales\n                                                                          from (select ss_quantity quantity\n                                                                                     ,ss_list_price list_price\n                                                                                from store_sales\n                                                                                   ,date_dim\n                                                                                where ss_sold_date_sk = d_date_sk\n                                                                                  and d_year between 1998 and 1998 + 2\n                                                                                union all\n                                                                                select cs_quantity quantity\n                                                                                     ,cs_list_price list_price\n                                                                                from catalog_sales\n                                                                                   ,date_dim\n                                                                                where cs_sold_date_sk = d_date_sk\n                                                                                  and d_year between 1998 and 1998 + 2\n                                                                                union all\n                                                                                select ws_quantity quantity\n                                                                                     ,ws_list_price list_price\n                                                                                from web_sales\n                                                                                   ,date_dim\n                                                                                where ws_sold_date_sk = d_date_sk\n                                                                                  and d_year between 1998 and 1998 + 2) x)\nselect  this_year.channel ty_channel\n     ,this_year.i_brand_id ty_brand\n     ,this_year.i_class_id ty_class\n     ,this_year.i_category_id ty_category\n     ,this_year.sales ty_sales\n     ,this_year.number_sales ty_number_sales\n     ,last_year.channel ly_channel\n     ,last_year.i_brand_id ly_brand\n     ,last_year.i_class_id ly_class\n     ,last_year.i_category_id ly_category\n     ,last_year.sales ly_sales\n     ,last_year.number_sales ly_number_sales\nfrom\n    (select 'store' channel, i_brand_id,i_class_id,i_category_id\n          ,sum(ss_quantity*ss_list_price) sales, count(*) number_sales\n     from store_sales\n        ,item\n        ,date_dim\n     where ss_item_sk in (select ss_item_sk from cross_items)\n       and ss_item_sk = i_item_sk\n       and ss_sold_date_sk = d_date_sk\n       and d_week_seq = (select d_week_seq\n                         from date_dim\n                         where d_year = 1998 + 1\n                           and d_moy = 12\n                           and d_dom = 28)\n     group by i_brand_id,i_class_id,i_category_id\n     having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) this_year,\n    (select 'store' channel, i_brand_id,i_class_id\n          ,i_category_id, sum(ss_quantity*ss_list_price) sales, count(*) number_sales\n     from store_sales\n        ,item\n        ,date_dim\n     where ss_item_sk in (select ss_item_sk from cross_items)\n       and ss_item_sk = i_item_sk\n       and ss_sold_date_sk = d_date_sk\n       and d_week_seq = (select d_week_seq\n                         from date_dim\n                         where d_year = 1998\n                           and d_moy = 12\n                           and d_dom = 28)\n     group by i_brand_id,i_class_id,i_category_id\n     having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) last_year\nwhere this_year.i_brand_id= last_year.i_brand_id\n  and this_year.i_class_id = last_year.i_class_id\n  and this_year.i_category_id = last_year.i_category_id\norder by this_year.channel, this_year.i_brand_id, this_year.i_class_id, this_year.i_category_id\n    limit 100;\n\n\nwith /* { \"query\":\"query57\",\"streamId\":0,\"querySequence\":70 } */ v1 as(\n    select i_category, i_brand,\n           cc_name,\n           d_year, d_moy,\n           sum(cs_sales_price) sum_sales,\n           avg(sum(cs_sales_price)) over\n        (partition by i_category, i_brand,\n                     cc_name, d_year)\n          avg_monthly_sales,\n            rank() over\n        (partition by i_category, i_brand,\n                     cc_name\n           order by d_year, d_moy) rn\n    from item, catalog_sales, date_dim, call_center\n    where cs_item_sk = i_item_sk and\n            cs_sold_date_sk = d_date_sk and\n            cc_call_center_sk= cs_call_center_sk and\n        (\n                    d_year = 2001 or\n                    ( d_year = 2001-1 and d_moy =12) or\n                    ( d_year = 2001+1 and d_moy =1)\n            )\n    group by i_category, i_brand,\n             cc_name , d_year, d_moy),\n                                                                 v2 as(\n                                                                     select v1.i_brand\n                                                                          ,v1.d_year, v1.d_moy\n                                                                          ,v1.avg_monthly_sales\n                                                                          ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum\n                                                                     from v1, v1 v1_lag, v1 v1_lead\n                                                                     where v1.i_category = v1_lag.i_category and\n                                                                             v1.i_category = v1_lead.i_category and\n                                                                             v1.i_brand = v1_lag.i_brand and\n                                                                             v1.i_brand = v1_lead.i_brand and\n                                                                             v1. cc_name = v1_lag. cc_name and\n                                                                             v1. cc_name = v1_lead. cc_name and\n                                                                             v1.rn = v1_lag.rn + 1 and\n                                                                             v1.rn = v1_lead.rn - 1)\nselect  *\nfrom v2\nwhere  d_year = 2001 and\n        avg_monthly_sales > 0 and\n        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1\norder by sum_sales - avg_monthly_sales, nsum\n    limit 100;\n\n\nselect /* { \"query\":\"query65\",\"streamId\":0,\"querySequence\":71 } */\n    s_store_name,\n    i_item_desc,\n    sc.revenue,\n    i_current_price,\n    i_wholesale_cost,\n    i_brand\nfrom store, item,\n     (select ss_store_sk, avg(revenue) as ave\n      from\n          (select  ss_store_sk, ss_item_sk,\n                   sum(ss_sales_price) as revenue\n           from store_sales, date_dim\n           where ss_sold_date_sk = d_date_sk and d_month_seq between 1192 and 1192+11\n           group by ss_store_sk, ss_item_sk) sa\n      group by ss_store_sk) sb,\n     (select  ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n      from store_sales, date_dim\n      where ss_sold_date_sk = d_date_sk and d_month_seq between 1192 and 1192+11\n      group by ss_store_sk, ss_item_sk) sc\nwhere sb.ss_store_sk = sc.ss_store_sk and\n        sc.revenue <= 0.1 * sb.ave and\n        s_store_sk = sc.ss_store_sk and\n        i_item_sk = sc.ss_item_sk\norder by s_store_name, i_item_desc\n    limit 100;\n\n\nselect /* { \"query\":\"query71\",\"streamId\":0,\"querySequence\":72 } */ i_brand_id brand_id, i_brand brand,t_hour,t_minute,\n                                                                   sum(ext_price) ext_price\nfrom item, (select ws_ext_sales_price as ext_price,\n                   ws_sold_date_sk as sold_date_sk,\n                   ws_item_sk as sold_item_sk,\n                   ws_sold_time_sk as time_sk\n            from web_sales,date_dim\n            where d_date_sk = ws_sold_date_sk\n              and d_moy=11\n              and d_year=2001\n            union all\n            select cs_ext_sales_price as ext_price,\n                   cs_sold_date_sk as sold_date_sk,\n                   cs_item_sk as sold_item_sk,\n                   cs_sold_time_sk as time_sk\n            from catalog_sales,date_dim\n            where d_date_sk = cs_sold_date_sk\n              and d_moy=11\n              and d_year=2001\n            union all\n            select ss_ext_sales_price as ext_price,\n                   ss_sold_date_sk as sold_date_sk,\n                   ss_item_sk as sold_item_sk,\n                   ss_sold_time_sk as time_sk\n            from store_sales,date_dim\n            where d_date_sk = ss_sold_date_sk\n              and d_moy=11\n              and d_year=2001\n) tmp,time_dim\nwhere\n        sold_item_sk = i_item_sk\n  and i_manager_id=1\n  and time_sk = t_time_sk\n  and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')\ngroup by i_brand, i_brand_id,t_hour,t_minute\norder by ext_price desc, i_brand_id\n;\n\n\nselect /* { \"query\":\"query34\",\"streamId\":0,\"querySequence\":73 } */ c_last_name\n     ,c_first_name\n     ,c_salutation\n     ,c_preferred_cust_flag\n     ,ss_ticket_number\n     ,cnt from\n              (select ss_ticket_number\n                    ,ss_customer_sk\n                    ,count(*) cnt\n               from store_sales,date_dim,store,household_demographics\n               where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n                 and store_sales.ss_store_sk = store.s_store_sk\n                 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n                 and (date_dim.d_dom between 1 and 3 or date_dim.d_dom between 25 and 28)\n                 and (household_demographics.hd_buy_potential = '1001-5000' or\n                      household_demographics.hd_buy_potential = '0-500')\n                 and household_demographics.hd_vehicle_count > 0\n                 and (case when household_demographics.hd_vehicle_count > 0\n                               then household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count\n                           else null\n                   end)  > 1.2\n                 and date_dim.d_year in (1998,1998+1,1998+2)\n                 and store.s_county in ('Quay County','Sumner County','Harper County','Pipestone County',\n                                        'Kittitas County','Surry County','Wadena County','Richland County')\n               group by ss_ticket_number,ss_customer_sk) dn,customer\nwhere ss_customer_sk = c_customer_sk\n  and cnt between 15 and 20\norder by c_last_name,c_first_name,c_salutation,c_preferred_cust_flag desc, ss_ticket_number;\n\n\nselect /* { \"query\":\"query48\",\"streamId\":0,\"querySequence\":74 } */ sum (ss_quantity)\nfrom store_sales, store, customer_demographics, customer_address, date_dim\nwhere s_store_sk = ss_store_sk\n  and  ss_sold_date_sk = d_date_sk and d_year = 2001\n  and\n    (\n            (\n                        cd_demo_sk = ss_cdemo_sk\n                    and\n                        cd_marital_status = 'D'\n                    and\n                        cd_education_status = 'Secondary'\n                    and\n                        ss_sales_price between 100.00 and 150.00\n                )\n            or\n            (\n                        cd_demo_sk = ss_cdemo_sk\n                    and\n                        cd_marital_status = 'W'\n                    and\n                        cd_education_status = '2 yr Degree'\n                    and\n                        ss_sales_price between 50.00 and 100.00\n                )\n            or\n            (\n                        cd_demo_sk = ss_cdemo_sk\n                    and\n                        cd_marital_status = 'U'\n                    and\n                        cd_education_status = 'Unknown'\n                    and\n                        ss_sales_price between 150.00 and 200.00\n                )\n        )\n  and\n    (\n            (\n                        ss_addr_sk = ca_address_sk\n                    and\n                        ca_country = 'United States'\n                    and\n                        ca_state in ('VA', 'MI', 'FL')\n                    and ss_net_profit between 0 and 2000\n                )\n            or\n            (ss_addr_sk = ca_address_sk\n                and\n             ca_country = 'United States'\n                and\n             ca_state in ('SC', 'GA', 'MN')\n                and ss_net_profit between 150 and 3000\n                )\n            or\n            (ss_addr_sk = ca_address_sk\n                and\n             ca_country = 'United States'\n                and\n             ca_state in ('OK', 'IA', 'TX')\n                and ss_net_profit between 50 and 25000\n                )\n        )\n;\n\n\nwith /* { \"query\":\"query30\",\"streamId\":0,\"querySequence\":75 } */ customer_total_return as\n                                                                     (select wr_returning_customer_sk as ctr_customer_sk\n                                                                              ,ca_state as ctr_state,\n                                                                             sum(wr_return_amt) as ctr_total_return\n                                                                      from web_returns\n                                                                         ,date_dim\n                                                                         ,customer_address\n                                                                      where wr_returned_date_sk = d_date_sk\n                                                                        and d_year =2001\n                                                                        and wr_returning_addr_sk = ca_address_sk\n                                                                      group by wr_returning_customer_sk\n                                                                             ,ca_state)\nselect  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag\n     ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address\n     ,c_last_review_date,ctr_total_return\nfrom customer_total_return ctr1\n   ,customer_address\n   ,customer\nwhere ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2\n                               from customer_total_return ctr2\n                               where ctr1.ctr_state = ctr2.ctr_state)\n  and ca_address_sk = c_current_addr_sk\n  and ca_state = 'MI'\n  and ctr1.ctr_customer_sk = c_customer_sk\norder by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag\n       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address\n       ,c_last_review_date,ctr_total_return\n    limit 100;\n\n\nwith /* { \"query\":\"query74\",\"streamId\":0,\"querySequence\":76 } */ year_total as (\n    select c_customer_id customer_id\n         ,c_first_name customer_first_name\n         ,c_last_name customer_last_name\n         ,d_year as year\n   ,min(ss_net_paid) year_total\n   ,'s' sale_type\nfrom customer\n        ,store_sales\n        ,date_dim\nwhere c_customer_sk = ss_customer_sk\n  and ss_sold_date_sk = d_date_sk\n  and d_year in (2001,2001+1)\ngroup by c_customer_id\n        ,c_first_name\n        ,c_last_name\n        ,d_year\nunion all\nselect c_customer_id customer_id\n     ,c_first_name customer_first_name\n     ,c_last_name customer_last_name\n     ,d_year as year\n       ,min(ws_net_paid) year_total\n       ,'w' sale_type\nfrom customer\n        ,web_sales\n        ,date_dim\nwhere c_customer_sk = ws_bill_customer_sk\n  and ws_sold_date_sk = d_date_sk\n  and d_year in (2001,2001+1)\ngroup by c_customer_id\n        ,c_first_name\n        ,c_last_name\n        ,d_year\n    )\nselect\n    t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name\nfrom year_total t_s_firstyear\n   ,year_total t_s_secyear\n   ,year_total t_w_firstyear\n   ,year_total t_w_secyear\nwhere t_s_secyear.customer_id = t_s_firstyear.customer_id\n  and t_s_firstyear.customer_id = t_w_secyear.customer_id\n  and t_s_firstyear.customer_id = t_w_firstyear.customer_id\n  and t_s_firstyear.sale_type = 's'\n  and t_w_firstyear.sale_type = 'w'\n  and t_s_secyear.sale_type = 's'\n  and t_w_secyear.sale_type = 'w'\n  and t_s_firstyear.year = 2001\n  and t_s_secyear.year = 2001+1\n  and t_w_firstyear.year = 2001\n  and t_w_secyear.year = 2001+1\n  and t_s_firstyear.year_total > 0\n  and t_w_firstyear.year_total > 0\n  and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end\n    > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end\norder by 3,2,1\n    limit 100;\n\n\nselect /* { \"query\":\"query87\",\"streamId\":0,\"querySequence\":77 } */ count(*)\nfrom ((select distinct c_last_name, c_first_name, d_date\n       from store_sales, date_dim, customer\n       where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n         and store_sales.ss_customer_sk = customer.c_customer_sk\n         and d_month_seq between 1208 and 1208+11)\n      except\n      (select distinct c_last_name, c_first_name, d_date\n       from catalog_sales, date_dim, customer\n       where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk\n         and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk\n         and d_month_seq between 1208 and 1208+11)\n      except\n      (select distinct c_last_name, c_first_name, d_date\n       from web_sales, date_dim, customer\n       where web_sales.ws_sold_date_sk = date_dim.d_date_sk\n         and web_sales.ws_bill_customer_sk = customer.c_customer_sk\n         and d_month_seq between 1208 and 1208+11)\n     ) cool_cust\n;\n\n\nwith /* { \"query\":\"query77\",\"streamId\":0,\"querySequence\":78 } */ ss as\n                                                                     (select s_store_sk,\n                                                                             sum(ss_ext_sales_price) as sales,\n                                                                             sum(ss_net_profit) as profit\n                                                                      from store_sales,\n                                                                           date_dim,\n                                                                           store\n                                                                      where ss_sold_date_sk = d_date_sk\n                                                                        and d_date between cast('1998-08-21' as date)\n                                                                          and (dateadd(day,30,to_date('1998-08-21')))\n                                                                        and ss_store_sk = s_store_sk\n                                                                      group by s_store_sk)\n        ,\n                                                                 sr as\n                                                                     (select s_store_sk,\n                                                                             sum(sr_return_amt) as returns,\n                                                                             sum(sr_net_loss) as profit_loss\n                                                                      from store_returns,\n                                                                           date_dim,\n                                                                           store\n                                                                      where sr_returned_date_sk = d_date_sk\n                                                                        and d_date between cast('1998-08-21' as date)\n                                                                          and (dateadd(day,30,to_date('1998-08-21')))\n                                                                        and sr_store_sk = s_store_sk\n                                                                      group by s_store_sk),\n                                                                 cs as\n                                                                     (select cs_call_center_sk,\n                                                                             sum(cs_ext_sales_price) as sales,\n                                                                             sum(cs_net_profit) as profit\n                                                                      from catalog_sales,\n                                                                           date_dim\n                                                                      where cs_sold_date_sk = d_date_sk\n                                                                        and d_date between cast('1998-08-21' as date)\n                                                                          and (dateadd(day,30,to_date('1998-08-21')))\n                                                                      group by cs_call_center_sk\n                                                                     ),\n                                                                 cr as\n                                                                     (select cr_call_center_sk,\n                                                                             sum(cr_return_amount) as returns,\n                                                                             sum(cr_net_loss) as profit_loss\n                                                                      from catalog_returns,\n                                                                           date_dim\n                                                                      where cr_returned_date_sk = d_date_sk\n                                                                        and d_date between cast('1998-08-21' as date)\n                                                                          and (dateadd(day,30,to_date('1998-08-21')))\n                                                                      group by cr_call_center_sk\n                                                                     ),\n                                                                 ws as\n                                                                     ( select wp_web_page_sk,\n                                                                              sum(ws_ext_sales_price) as sales,\n                                                                              sum(ws_net_profit) as profit\n                                                                       from web_sales,\n                                                                            date_dim,\n                                                                            web_page\n                                                                       where ws_sold_date_sk = d_date_sk\n                                                                         and d_date between cast('1998-08-21' as date)\n                                                                           and (dateadd(day,30,to_date('1998-08-21')))\n                                                                         and ws_web_page_sk = wp_web_page_sk\n                                                                       group by wp_web_page_sk),\n                                                                 wr as\n                                                                     (select wp_web_page_sk,\n                                                                             sum(wr_return_amt) as returns,\n                                                                             sum(wr_net_loss) as profit_loss\n                                                                      from web_returns,\n                                                                           date_dim,\n                                                                           web_page\n                                                                      where wr_returned_date_sk = d_date_sk\n                                                                        and d_date between cast('1998-08-21' as date)\n                                                                          and (dateadd(day,30,to_date('1998-08-21')))\n                                                                        and wr_web_page_sk = wp_web_page_sk\n                                                                      group by wp_web_page_sk)\nselect  channel\n     , id\n     , sum(sales) as sales\n     , sum(returns) as returns\n     , sum(profit) as profit\nfrom\n    (select 'store channel' as channel\n          , ss.s_store_sk as id\n          , sales\n          , coalesce(returns, 0) as returns\n          , (profit - coalesce(profit_loss,0)) as profit\n     from   ss left join sr\n                         on  ss.s_store_sk = sr.s_store_sk\n     union all\n     select 'catalog channel' as channel\n          , cs_call_center_sk as id\n          , sales\n          , returns\n          , (profit - profit_loss) as profit\n     from  cs\n        , cr\n     union all\n     select 'web channel' as channel\n          , ws.wp_web_page_sk as id\n          , sales\n          , coalesce(returns, 0) returns\n          , (profit - coalesce(profit_loss,0)) as profit\n     from   ws left join wr\n                         on  ws.wp_web_page_sk = wr.wp_web_page_sk\n    ) x\ngroup by rollup (channel, id)\norder by channel\n       ,id\n    limit 100;\n\n\nselect /* { \"query\":\"query73\",\"streamId\":0,\"querySequence\":79 } */ c_last_name\n     ,c_first_name\n     ,c_salutation\n     ,c_preferred_cust_flag\n     ,ss_ticket_number\n     ,cnt from\n              (select ss_ticket_number\n                    ,ss_customer_sk\n                    ,count(*) cnt\n               from store_sales,date_dim,store,household_demographics\n               where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n                 and store_sales.ss_store_sk = store.s_store_sk\n                 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n                 and date_dim.d_dom between 1 and 2\n                 and (household_demographics.hd_buy_potential = '>10000' or\n                      household_demographics.hd_buy_potential = '0-500')\n                 and household_demographics.hd_vehicle_count > 0\n                 and case when household_demographics.hd_vehicle_count > 0 then\n                                  household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count else null end > 1\n                 and date_dim.d_year in (1998,1998+1,1998+2)\n                 and store.s_county in ('Orange County','San Miguel County','Williamson County','Brazos County')\n               group by ss_ticket_number,ss_customer_sk) dj,customer\nwhere ss_customer_sk = c_customer_sk\n  and cnt between 1 and 5\norder by cnt desc, c_last_name asc;\n\n\nselect /* { \"query\":\"query84\",\"streamId\":0,\"querySequence\":80 } */  c_customer_id as customer_id\n     , coalesce(c_last_name,'') || ', ' || coalesce(c_first_name,'') as customername\nfrom customer\n   ,customer_address\n   ,customer_demographics\n   ,household_demographics\n   ,income_band\n   ,store_returns\nwhere ca_city\t        =  'Shady Grove'\n  and c_current_addr_sk = ca_address_sk\n  and ib_lower_bound   >=  29438\n  and ib_upper_bound   <=  29438 + 50000\n  and ib_income_band_sk = hd_income_band_sk\n  and cd_demo_sk = c_current_cdemo_sk\n  and hd_demo_sk = c_current_hdemo_sk\n  and sr_cdemo_sk = cd_demo_sk\norder by c_customer_id\n    limit 100;\n\n\nwith /* { \"query\":\"query54\",\"streamId\":0,\"querySequence\":81 } */ my_customers as (\n    select distinct c_customer_sk\n                  , c_current_addr_sk\n    from\n        ( select cs_sold_date_sk sold_date_sk,\n                 cs_bill_customer_sk customer_sk,\n                 cs_item_sk item_sk\n          from   catalog_sales\n          union all\n          select ws_sold_date_sk sold_date_sk,\n                 ws_bill_customer_sk customer_sk,\n                 ws_item_sk item_sk\n          from   web_sales\n        ) cs_or_ws_sales,\n        item,\n        date_dim,\n        customer\n    where   sold_date_sk = d_date_sk\n      and item_sk = i_item_sk\n      and i_category = 'Shoes'\n      and i_class = 'womens'\n      and c_customer_sk = cs_or_ws_sales.customer_sk\n      and d_moy = 5\n      and d_year = 2000\n)\n   , my_revenue as (\n    select c_customer_sk,\n           sum(ss_ext_sales_price) as revenue\n    from   my_customers,\n           store_sales,\n           customer_address,\n           store,\n           date_dim\n    where  c_current_addr_sk = ca_address_sk\n      and ca_county = s_county\n      and ca_state = s_state\n      and ss_sold_date_sk = d_date_sk\n      and c_customer_sk = ss_customer_sk\n      and d_month_seq between (select distinct d_month_seq+1\n                               from   date_dim where d_year = 2000 and d_moy = 5)\n        and  (select distinct d_month_seq+3\n              from   date_dim where d_year = 2000 and d_moy = 5)\n    group by c_customer_sk\n)\n   , segments as\n    (select cast((revenue/50) as int) as segment\n     from   my_revenue\n    )\nselect  segment, count(*) as num_customers, segment*50 as segment_base\nfrom segments\ngroup by segment\norder by segment, num_customers\n    limit 100;\n\n\nselect /* { \"query\":\"query55\",\"streamId\":0,\"querySequence\":82 } */  i_brand_id brand_id, i_brand brand,\n                                                                    sum(ss_ext_sales_price) ext_price\nfrom date_dim, store_sales, item\nwhere d_date_sk = ss_sold_date_sk\n  and ss_item_sk = i_item_sk\n  and i_manager_id=96\n  and d_moy=12\n  and d_year=2002\ngroup by i_brand, i_brand_id\norder by ext_price desc, i_brand_id\n    limit 100 ;\n\n\nwith /* { \"query\":\"query56\",\"streamId\":0,\"querySequence\":83 } */ ss as (\n    select i_item_id,sum(ss_ext_sales_price) total_sales\n    from\n        store_sales,\n        date_dim,\n        customer_address,\n        item\n    where i_item_id in (select\n                            i_item_id\n                        from item\n                        where i_color in ('rose','brown','drab'))\n      and     ss_item_sk              = i_item_sk\n      and     ss_sold_date_sk         = d_date_sk\n      and     d_year                  = 2000\n      and     d_moy                   = 4\n      and     ss_addr_sk              = ca_address_sk\n      and     ca_gmt_offset           = -5\n    group by i_item_id),\n                                                                 cs as (\n                                                                     select i_item_id,sum(cs_ext_sales_price) total_sales\n                                                                     from\n                                                                         catalog_sales,\n                                                                         date_dim,\n                                                                         customer_address,\n                                                                         item\n                                                                     where\n                                                                             i_item_id               in (select\n                                                                                                             i_item_id\n                                                                                                         from item\n                                                                                                         where i_color in ('rose','brown','drab'))\n                                                                       and     cs_item_sk              = i_item_sk\n                                                                       and     cs_sold_date_sk         = d_date_sk\n                                                                       and     d_year                  = 2000\n                                                                       and     d_moy                   = 4\n                                                                       and     cs_bill_addr_sk         = ca_address_sk\n                                                                       and     ca_gmt_offset           = -5\n                                                                     group by i_item_id),\n                                                                 ws as (\n                                                                     select i_item_id,sum(ws_ext_sales_price) total_sales\n                                                                     from\n                                                                         web_sales,\n                                                                         date_dim,\n                                                                         customer_address,\n                                                                         item\n                                                                     where\n                                                                             i_item_id               in (select\n                                                                                                             i_item_id\n                                                                                                         from item\n                                                                                                         where i_color in ('rose','brown','drab'))\n                                                                       and     ws_item_sk              = i_item_sk\n                                                                       and     ws_sold_date_sk         = d_date_sk\n                                                                       and     d_year                  = 2000\n                                                                       and     d_moy                   = 4\n                                                                       and     ws_bill_addr_sk         = ca_address_sk\n                                                                       and     ca_gmt_offset           = -5\n                                                                     group by i_item_id)\nselect  i_item_id ,sum(total_sales) total_sales\nfrom  (select * from ss\n       union all\n       select * from cs\n       union all\n       select * from ws) tmp1\ngroup by i_item_id\norder by total_sales,\n         i_item_id\n    limit 100;\n\n\nwith /* { \"query\":\"query02\",\"streamId\":0,\"querySequence\":84 } */ wscs as\n                                                                     (select sold_date_sk\n                                                                           ,sales_price\n                                                                      from  (select ws_sold_date_sk sold_date_sk\n                                                                                  ,ws_ext_sales_price sales_price\n                                                                             from web_sales\n                                                                             union all\n                                                                             select cs_sold_date_sk sold_date_sk\n                                                                                  ,cs_ext_sales_price sales_price\n                                                                             from catalog_sales) x ),\n                                                                 wswscs as\n                                                                     (select d_week_seq,\n                                                                             sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,\n                                                                             sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,\n                                                                             sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,\n                                                                             sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,\n                                                                             sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,\n                                                                             sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,\n                                                                             sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales\n                                                                      from wscs\n                                                                         ,date_dim\n                                                                      where d_date_sk = sold_date_sk\n                                                                      group by d_week_seq)\nselect d_week_seq1\n     ,round(sun_sales1/sun_sales2,2)\n     ,round(mon_sales1/mon_sales2,2)\n     ,round(tue_sales1/tue_sales2,2)\n     ,round(wed_sales1/wed_sales2,2)\n     ,round(thu_sales1/thu_sales2,2)\n     ,round(fri_sales1/fri_sales2,2)\n     ,round(sat_sales1/sat_sales2,2)\nfrom\n    (select wswscs.d_week_seq d_week_seq1\n          ,sun_sales sun_sales1\n          ,mon_sales mon_sales1\n          ,tue_sales tue_sales1\n          ,wed_sales wed_sales1\n          ,thu_sales thu_sales1\n          ,fri_sales fri_sales1\n          ,sat_sales sat_sales1\n     from wswscs,date_dim\n     where date_dim.d_week_seq = wswscs.d_week_seq and\n             d_year = 1999) y,\n    (select wswscs.d_week_seq d_week_seq2\n          ,sun_sales sun_sales2\n          ,mon_sales mon_sales2\n          ,tue_sales tue_sales2\n          ,wed_sales wed_sales2\n          ,thu_sales thu_sales2\n          ,fri_sales fri_sales2\n          ,sat_sales sat_sales2\n     from wswscs\n        ,date_dim\n     where date_dim.d_week_seq = wswscs.d_week_seq and\n             d_year = 1999+1) z\nwhere d_week_seq1=d_week_seq2-53\norder by d_week_seq1;\n\n\nselect /* { \"query\":\"query26\",\"streamId\":0,\"querySequence\":85 } */  i_item_id,\n                                                                    avg(cs_quantity) agg1,\n                                                                    avg(cs_list_price) agg2,\n                                                                    avg(cs_coupon_amt) agg3,\n                                                                    avg(cs_sales_price) agg4\nfrom catalog_sales, customer_demographics, date_dim, item, promotion\nwhere cs_sold_date_sk = d_date_sk and\n        cs_item_sk = i_item_sk and\n        cs_bill_cdemo_sk = cd_demo_sk and\n        cs_promo_sk = p_promo_sk and\n        cd_gender = 'M' and\n        cd_marital_status = 'S' and\n        cd_education_status = '4 yr Degree' and\n    (p_channel_email = 'N' or p_channel_event = 'N') and\n        d_year = 1998\ngroup by i_item_id\norder by i_item_id\n    limit 100;\n\n\nselect /* { \"query\":\"query40\",\"streamId\":0,\"querySequence\":86 } */\n    w_state\n     ,i_item_id\n     ,sum(case when (cast(d_date as date) < cast ('2002-05-08' as date))\n                   then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before\n     ,sum(case when (cast(d_date as date) >= cast ('2002-05-08' as date))\n                   then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after\nfrom\n    catalog_sales left outer join catalog_returns on\n        (cs_order_number = cr_order_number\n            and cs_item_sk = cr_item_sk)\n   ,warehouse\n   ,item\n   ,date_dim\nwhere\n    i_current_price between 0.99 and 1.49\n  and i_item_sk          = cs_item_sk\n  and cs_warehouse_sk    = w_warehouse_sk\n  and cs_sold_date_sk    = d_date_sk\n  and d_date between dateadd(day,-30,to_date('2002-05-08')) and\n    dateadd(day,30,to_date('2002-05-08'))\ngroup by\n    w_state,i_item_id\norder by w_state,i_item_id\n    limit 100;\n\n\nselect /* { \"query\":\"query72\",\"streamId\":0,\"querySequence\":87 } */  i_item_desc\n     ,w_warehouse_name\n     ,d1.d_week_seq\n     ,sum(case when p_promo_sk is null then 1 else 0 end) no_promo\n     ,sum(case when p_promo_sk is not null then 1 else 0 end) promo\n     ,count(*) total_cnt\nfrom catalog_sales\n         join inventory on (cs_item_sk = inv_item_sk)\n         join warehouse on (w_warehouse_sk=inv_warehouse_sk)\n         join item on (i_item_sk = cs_item_sk)\n         join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)\n         join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)\n         join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)\n         join date_dim d2 on (inv_date_sk = d2.d_date_sk)\n         join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)\n         left outer join promotion on (cs_promo_sk=p_promo_sk)\n         left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)\nwhere d1.d_week_seq = d2.d_week_seq\n  and inv_quantity_on_hand < cs_quantity\n  and d3.d_date > dateadd(day,5,d1.d_date)\n  and hd_buy_potential = '>10000'\n  and d1.d_year = 2002\n  and cd_marital_status = 'M'\ngroup by i_item_desc,w_warehouse_name,d1.d_week_seq\norder by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq\n    limit 100;\n\n\nselect /* { \"query\":\"query53\",\"streamId\":0,\"querySequence\":88 } */  * from\n    (select i_manufact_id,\n            sum(ss_sales_price) sum_sales,\n            avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales\n     from item, store_sales, date_dim, store\n     where ss_item_sk = i_item_sk and\n             ss_sold_date_sk = d_date_sk and\n             ss_store_sk = s_store_sk and\n             d_month_seq in (1213,1213+1,1213+2,1213+3,1213+4,1213+5,1213+6,1213+7,1213+8,1213+9,1213+10,1213+11) and\n         ((i_category in ('Books','Children','Electronics') and\n           i_class in ('personal','portable','reference','self-help') and\n           i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',\n                       'exportiunivamalg #9','scholaramalgamalg #9'))\n             or(i_category in ('Women','Music','Men') and\n                i_class in ('accessories','classical','fragrances','pants') and\n                i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',\n                            'importoamalg #1')))\n     group by i_manufact_id, d_qoy ) tmp1\nwhere case when avg_quarterly_sales > 0\n               then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales\n           else null end > 0.1\norder by avg_quarterly_sales,\n         sum_sales,\n         i_manufact_id\n    limit 100;\n\n\nselect /* { \"query\":\"query79\",\"streamId\":0,\"querySequence\":89 } */\n    c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit\nfrom\n    (select ss_ticket_number\n          ,ss_customer_sk\n          ,store.s_city\n          ,sum(ss_coupon_amt) amt\n          ,sum(ss_net_profit) profit\n     from store_sales,date_dim,store,household_demographics\n     where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n       and store_sales.ss_store_sk = store.s_store_sk\n       and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n       and (household_demographics.hd_dep_count = 1 or household_demographics.hd_vehicle_count > 3)\n       and date_dim.d_dow = 1\n       and date_dim.d_year in (2000,2000+1,2000+2)\n       and store.s_number_employees between 200 and 295\n     group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer\nwhere ss_customer_sk = c_customer_sk\norder by c_last_name,c_first_name,substr(s_city,1,30), profit\n    limit 100;\n\n\nselect /* { \"query\":\"query18\",\"streamId\":0,\"querySequence\":90 } */  i_item_id,\n                                                                    ca_country,\n                                                                    ca_state,\n                                                                    ca_county,\n                                                                    avg( cast(cs_quantity as decimal(12,2))) agg1,\n                                                                    avg( cast(cs_list_price as decimal(12,2))) agg2,\n                                                                    avg( cast(cs_coupon_amt as decimal(12,2))) agg3,\n                                                                    avg( cast(cs_sales_price as decimal(12,2))) agg4,\n                                                                    avg( cast(cs_net_profit as decimal(12,2))) agg5,\n                                                                    avg( cast(c_birth_year as decimal(12,2))) agg6,\n                                                                    avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7\nfrom catalog_sales, customer_demographics cd1,\n     customer_demographics cd2, customer, customer_address, date_dim, item\nwhere cs_sold_date_sk = d_date_sk and\n        cs_item_sk = i_item_sk and\n        cs_bill_cdemo_sk = cd1.cd_demo_sk and\n        cs_bill_customer_sk = c_customer_sk and\n        cd1.cd_gender = 'F' and\n        cd1.cd_education_status = 'Secondary' and\n        c_current_cdemo_sk = cd2.cd_demo_sk and\n        c_current_addr_sk = ca_address_sk and\n        c_birth_month in (1,9,11,4,12,6) and\n        d_year = 1998 and\n        ca_state in ('IL','WA','KY'\n        ,'ND','VT','NC','NJ')\ngroup by rollup (i_item_id, ca_country, ca_state, ca_county)\norder by ca_country,\n         ca_state,\n         ca_county,\n         i_item_id\n    limit 100;\n\n\nselect /* { \"query\":\"query13\",\"streamId\":0,\"querySequence\":91 } */ avg(ss_quantity)\n     ,avg(ss_ext_sales_price)\n     ,avg(ss_ext_wholesale_cost)\n     ,sum(ss_ext_wholesale_cost)\nfrom store_sales\n   ,store\n   ,customer_demographics\n   ,household_demographics\n   ,customer_address\n   ,date_dim\nwhere s_store_sk = ss_store_sk\n  and  ss_sold_date_sk = d_date_sk and d_year = 2001\n  and((ss_hdemo_sk=hd_demo_sk\n    and cd_demo_sk = ss_cdemo_sk\n    and cd_marital_status = 'D'\n    and cd_education_status = '2 yr Degree'\n    and ss_sales_price between 100.00 and 150.00\n    and hd_dep_count = 3\n          )or\n      (ss_hdemo_sk=hd_demo_sk\n          and cd_demo_sk = ss_cdemo_sk\n          and cd_marital_status = 'U'\n          and cd_education_status = 'Primary'\n          and ss_sales_price between 50.00 and 100.00\n          and hd_dep_count = 1\n          ) or\n      (ss_hdemo_sk=hd_demo_sk\n          and cd_demo_sk = ss_cdemo_sk\n          and cd_marital_status = 'W'\n          and cd_education_status = 'Secondary'\n          and ss_sales_price between 150.00 and 200.00\n          and hd_dep_count = 1\n          ))\n  and((ss_addr_sk = ca_address_sk\n    and ca_country = 'United States'\n    and ca_state in ('MI', 'MN', 'NC')\n    and ss_net_profit between 100 and 200\n          ) or\n      (ss_addr_sk = ca_address_sk\n          and ca_country = 'United States'\n          and ca_state in ('GA', 'OH', 'MT')\n          and ss_net_profit between 150 and 300\n          ) or\n      (ss_addr_sk = ca_address_sk\n          and ca_country = 'United States'\n          and ca_state in ('MS', 'AK', 'OK')\n          and ss_net_profit between 50 and 250\n          ))\n;\n\n\nwith /* { \"query\":\"query24_p1\",\"streamId\":0,\"querySequence\":92 } */ ssales as\n                                                                        (select c_last_name\n                                                                              ,c_first_name\n                                                                              ,s_store_name\n                                                                              ,ca_state\n                                                                              ,s_state\n                                                                              ,i_color\n                                                                              ,i_current_price\n                                                                              ,i_manager_id\n                                                                              ,i_units\n                                                                              ,i_size\n                                                                              ,sum(ss_net_paid_inc_tax) netpaid\n                                                                         from store_sales\n                                                                            ,store_returns\n                                                                            ,store\n                                                                            ,item\n                                                                            ,customer\n                                                                            ,customer_address\n                                                                         where ss_ticket_number = sr_ticket_number\n                                                                           and ss_item_sk = sr_item_sk\n                                                                           and ss_customer_sk = c_customer_sk\n                                                                           and ss_item_sk = i_item_sk\n                                                                           and ss_store_sk = s_store_sk\n                                                                           and c_current_addr_sk = ca_address_sk\n                                                                           and c_birth_country <> upper(ca_country)\n                                                                           and s_zip = ca_zip\n                                                                           and s_market_id=8\n                                                                         group by c_last_name\n                                                                                ,c_first_name\n                                                                                ,s_store_name\n                                                                                ,ca_state\n                                                                                ,s_state\n                                                                                ,i_color\n                                                                                ,i_current_price\n                                                                                ,i_manager_id\n                                                                                ,i_units\n                                                                                ,i_size)\nselect c_last_name\n     ,c_first_name\n     ,s_store_name\n     ,sum(netpaid) paid\nfrom ssales\nwhere i_color = 'cornsilk'\ngroup by c_last_name\n       ,c_first_name\n       ,s_store_name\nhaving sum(netpaid) > (select 0.05*avg(netpaid)\n                       from ssales)\norder by c_last_name\n       ,c_first_name\n       ,s_store_name\n;\n\nwith /* { \"query\":\"query24_p2\",\"streamId\":0,\"querySequence\":92 } */ ssales as\n                                                                        (select c_last_name\n                                                                              ,c_first_name\n                                                                              ,s_store_name\n                                                                              ,ca_state\n                                                                              ,s_state\n                                                                              ,i_color\n                                                                              ,i_current_price\n                                                                              ,i_manager_id\n                                                                              ,i_units\n                                                                              ,i_size\n                                                                              ,sum(ss_net_paid_inc_tax) netpaid\n                                                                         from store_sales\n                                                                            ,store_returns\n                                                                            ,store\n                                                                            ,item\n                                                                            ,customer\n                                                                            ,customer_address\n                                                                         where ss_ticket_number = sr_ticket_number\n                                                                           and ss_item_sk = sr_item_sk\n                                                                           and ss_customer_sk = c_customer_sk\n                                                                           and ss_item_sk = i_item_sk\n                                                                           and ss_store_sk = s_store_sk\n                                                                           and c_current_addr_sk = ca_address_sk\n                                                                           and c_birth_country <> upper(ca_country)\n                                                                           and s_zip = ca_zip\n                                                                           and s_market_id = 8\n                                                                         group by c_last_name\n                                                                                ,c_first_name\n                                                                                ,s_store_name\n                                                                                ,ca_state\n                                                                                ,s_state\n                                                                                ,i_color\n                                                                                ,i_current_price\n                                                                                ,i_manager_id\n                                                                                ,i_units\n                                                                                ,i_size)\nselect c_last_name\n     ,c_first_name\n     ,s_store_name\n     ,sum(netpaid) paid\nfrom ssales\nwhere i_color = 'lime'\ngroup by c_last_name\n       ,c_first_name\n       ,s_store_name\nhaving sum(netpaid) > (select 0.05*avg(netpaid)\n                       from ssales)\norder by c_last_name\n       ,c_first_name\n       ,s_store_name\n;\n\n\nwith /* { \"query\":\"query04\",\"streamId\":0,\"querySequence\":93 } */ year_total as (\n    select c_customer_id customer_id\n         ,c_first_name customer_first_name\n         ,c_last_name customer_last_name\n         ,c_preferred_cust_flag customer_preferred_cust_flag\n         ,c_birth_country customer_birth_country\n         ,c_login customer_login\n         ,c_email_address customer_email_address\n         ,d_year dyear\n         ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total\n         ,'s' sale_type\n    from customer\n       ,store_sales\n       ,date_dim\n    where c_customer_sk = ss_customer_sk\n      and ss_sold_date_sk = d_date_sk\n    group by c_customer_id\n           ,c_first_name\n           ,c_last_name\n           ,c_preferred_cust_flag\n           ,c_birth_country\n           ,c_login\n           ,c_email_address\n           ,d_year\n    union all\n    select c_customer_id customer_id\n         ,c_first_name customer_first_name\n         ,c_last_name customer_last_name\n         ,c_preferred_cust_flag customer_preferred_cust_flag\n         ,c_birth_country customer_birth_country\n         ,c_login customer_login\n         ,c_email_address customer_email_address\n         ,d_year dyear\n         ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total\n         ,'c' sale_type\n    from customer\n       ,catalog_sales\n       ,date_dim\n    where c_customer_sk = cs_bill_customer_sk\n      and cs_sold_date_sk = d_date_sk\n    group by c_customer_id\n           ,c_first_name\n           ,c_last_name\n           ,c_preferred_cust_flag\n           ,c_birth_country\n           ,c_login\n           ,c_email_address\n           ,d_year\n    union all\n    select c_customer_id customer_id\n         ,c_first_name customer_first_name\n         ,c_last_name customer_last_name\n         ,c_preferred_cust_flag customer_preferred_cust_flag\n         ,c_birth_country customer_birth_country\n         ,c_login customer_login\n         ,c_email_address customer_email_address\n         ,d_year dyear\n         ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total\n         ,'w' sale_type\n    from customer\n       ,web_sales\n       ,date_dim\n    where c_customer_sk = ws_bill_customer_sk\n      and ws_sold_date_sk = d_date_sk\n    group by c_customer_id\n           ,c_first_name\n           ,c_last_name\n           ,c_preferred_cust_flag\n           ,c_birth_country\n           ,c_login\n           ,c_email_address\n           ,d_year\n)\nselect\n    t_s_secyear.customer_id\n     ,t_s_secyear.customer_first_name\n     ,t_s_secyear.customer_last_name\n     ,t_s_secyear.customer_login\nfrom year_total t_s_firstyear\n   ,year_total t_s_secyear\n   ,year_total t_c_firstyear\n   ,year_total t_c_secyear\n   ,year_total t_w_firstyear\n   ,year_total t_w_secyear\nwhere t_s_secyear.customer_id = t_s_firstyear.customer_id\n  and t_s_firstyear.customer_id = t_c_secyear.customer_id\n  and t_s_firstyear.customer_id = t_c_firstyear.customer_id\n  and t_s_firstyear.customer_id = t_w_firstyear.customer_id\n  and t_s_firstyear.customer_id = t_w_secyear.customer_id\n  and t_s_firstyear.sale_type = 's'\n  and t_c_firstyear.sale_type = 'c'\n  and t_w_firstyear.sale_type = 'w'\n  and t_s_secyear.sale_type = 's'\n  and t_c_secyear.sale_type = 'c'\n  and t_w_secyear.sale_type = 'w'\n  and t_s_firstyear.dyear =  1999\n  and t_s_secyear.dyear = 1999+1\n  and t_c_firstyear.dyear =  1999\n  and t_c_secyear.dyear =  1999+1\n  and t_w_firstyear.dyear = 1999\n  and t_w_secyear.dyear = 1999+1\n  and t_s_firstyear.year_total > 0\n  and t_c_firstyear.year_total > 0\n  and t_w_firstyear.year_total > 0\n  and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end\n    > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end\n  and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end\n    > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end\norder by t_s_secyear.customer_id\n       ,t_s_secyear.customer_first_name\n       ,t_s_secyear.customer_last_name\n       ,t_s_secyear.customer_login\n    limit 100;\n\n\nselect /* { \"query\":\"query99\",\"streamId\":0,\"querySequence\":94 } */\n    substr(w_warehouse_name,1,20)\n     ,sm_type\n     ,cc_name\n     ,sum(case when (cs_ship_date_sk - cs_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\"\n     ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 30) and\n                    (cs_ship_date_sk - cs_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\"\n     ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 60) and\n                    (cs_ship_date_sk - cs_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\"\n     ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 90) and\n                    (cs_ship_date_sk - cs_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\"\n     ,sum(case when (cs_ship_date_sk - cs_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\"\nfrom\n    catalog_sales\n   ,warehouse\n   ,ship_mode\n   ,call_center\n   ,date_dim\nwhere\n    d_month_seq between 1200 and 1200 + 11\n  and cs_ship_date_sk   = d_date_sk\n  and cs_warehouse_sk   = w_warehouse_sk\n  and cs_ship_mode_sk   = sm_ship_mode_sk\n  and cs_call_center_sk = cc_call_center_sk\ngroup by\n    substr(w_warehouse_name,1,20)\n       ,sm_type\n       ,cc_name\norder by substr(w_warehouse_name,1,20)\n       ,sm_type\n       ,cc_name\n    limit 100;\n\n\nselect /* { \"query\":\"query68\",\"streamId\":0,\"querySequence\":95 } */  c_last_name\n     ,c_first_name\n     ,ca_city\n     ,bought_city\n     ,ss_ticket_number\n     ,extended_price\n     ,extended_tax\n     ,list_price\nfrom (select ss_ticket_number\n           ,ss_customer_sk\n           ,ca_city bought_city\n           ,sum(ss_ext_sales_price) extended_price\n           ,sum(ss_ext_list_price) list_price\n           ,sum(ss_ext_tax) extended_tax\n      from store_sales\n         ,date_dim\n         ,store\n         ,household_demographics\n         ,customer_address\n      where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n        and store_sales.ss_store_sk = store.s_store_sk\n        and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n        and store_sales.ss_addr_sk = customer_address.ca_address_sk\n        and date_dim.d_dom between 1 and 2\n        and (household_demographics.hd_dep_count = 3 or\n             household_demographics.hd_vehicle_count= 3)\n        and date_dim.d_year in (2000,2000+1,2000+2)\n        and store.s_city in ('Walnut Grove','Enterprise')\n      group by ss_ticket_number\n             ,ss_customer_sk\n             ,ss_addr_sk,ca_city) dn\n   ,customer\n   ,customer_address current_addr\nwhere ss_customer_sk = c_customer_sk\n  and customer.c_current_addr_sk = current_addr.ca_address_sk\n  and current_addr.ca_city <> bought_city\norder by c_last_name\n       ,ss_ticket_number\n    limit 100;\n\n\nwith /* { \"query\":\"query83\",\"streamId\":0,\"querySequence\":96 } */ sr_items as\n                                                                     (select i_item_id item_id,\n                                                                             sum(sr_return_quantity) sr_item_qty\n                                                                      from store_returns,\n                                                                           item,\n                                                                           date_dim\n                                                                      where sr_item_sk = i_item_sk\n                                                                        and   d_date    in\n                                                                              (select d_date\n                                                                               from date_dim\n                                                                               where d_week_seq in\n                                                                                     (select d_week_seq\n                                                                                      from date_dim\n                                                                                      where d_date in ('1998-02-20','1998-09-28','1998-11-14')))\n                                                                        and   sr_returned_date_sk   = d_date_sk\n                                                                      group by i_item_id),\n                                                                 cr_items as\n                                                                     (select i_item_id item_id,\n                                                                             sum(cr_return_quantity) cr_item_qty\n                                                                      from catalog_returns,\n                                                                           item,\n                                                                           date_dim\n                                                                      where cr_item_sk = i_item_sk\n                                                                        and   d_date    in\n                                                                              (select d_date\n                                                                               from date_dim\n                                                                               where d_week_seq in\n                                                                                     (select d_week_seq\n                                                                                      from date_dim\n                                                                                      where d_date in ('1998-02-20','1998-09-28','1998-11-14')))\n                                                                        and   cr_returned_date_sk   = d_date_sk\n                                                                      group by i_item_id),\n                                                                 wr_items as\n                                                                     (select i_item_id item_id,\n                                                                             sum(wr_return_quantity) wr_item_qty\n                                                                      from web_returns,\n                                                                           item,\n                                                                           date_dim\n                                                                      where wr_item_sk = i_item_sk\n                                                                        and   d_date    in\n                                                                              (select d_date\n                                                                               from date_dim\n                                                                               where d_week_seq in\n                                                                                     (select d_week_seq\n                                                                                      from date_dim\n                                                                                      where d_date in ('1998-02-20','1998-09-28','1998-11-14')))\n                                                                        and   wr_returned_date_sk   = d_date_sk\n                                                                      group by i_item_id)\nselect  sr_items.item_id\n     ,sr_item_qty\n     ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev\n     ,cr_item_qty\n     ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev\n     ,wr_item_qty\n     ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev\n     ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average\nfrom sr_items\n   ,cr_items\n   ,wr_items\nwhere sr_items.item_id=cr_items.item_id\n  and sr_items.item_id=wr_items.item_id\norder by sr_items.item_id\n       ,sr_item_qty\n    limit 100;\n\n\nselect /* { \"query\":\"query61\",\"streamId\":0,\"querySequence\":97 } */  promotions,total,cast(promotions as decimal(17,4))/cast(total as decimal(17,4))*100\nfrom\n    (select sum(ss_ext_sales_price) promotions\n     from  store_sales\n        ,store\n        ,promotion\n        ,date_dim\n        ,customer\n        ,customer_address\n        ,item\n     where ss_sold_date_sk = d_date_sk\n       and   ss_store_sk = s_store_sk\n       and   ss_promo_sk = p_promo_sk\n       and   ss_customer_sk= c_customer_sk\n       and   ca_address_sk = c_current_addr_sk\n       and   ss_item_sk = i_item_sk\n       and   ca_gmt_offset = -6\n       and   i_category = 'Sports'\n       and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')\n       and   s_gmt_offset = -6\n       and   d_year = 1999\n       and   d_moy  = 11) promotional_sales,\n    (select sum(ss_ext_sales_price) total\n     from  store_sales\n        ,store\n        ,date_dim\n        ,customer\n        ,customer_address\n        ,item\n     where ss_sold_date_sk = d_date_sk\n       and   ss_store_sk = s_store_sk\n       and   ss_customer_sk= c_customer_sk\n       and   ca_address_sk = c_current_addr_sk\n       and   ss_item_sk = i_item_sk\n       and   ca_gmt_offset = -6\n       and   i_category = 'Sports'\n       and   s_gmt_offset = -6\n       and   d_year = 1999\n       and   d_moy  = 11) all_sales\norder by promotions, total\n    limit 100;\n\n\nwith /* { \"query\":\"query05\",\"streamId\":0,\"querySequence\":98 } */ ssr as\n                                                                     (select s_store_id,\n                                                                             sum(sales_price) as sales,\n                                                                             sum(profit) as profit,\n                                                                             sum(return_amt) as returns,\n                                                                             sum(net_loss) as profit_loss\n                                                                      from\n                                                                          ( select  ss_store_sk as store_sk,\n                                                                                    ss_sold_date_sk  as date_sk,\n                                                                                    ss_ext_sales_price as sales_price,\n                                                                                    ss_net_profit as profit,\n                                                                                    cast(0 as decimal(7,2)) as return_amt,\n                                                                                    cast(0 as decimal(7,2)) as net_loss\n                                                                            from store_sales\n                                                                            union all\n                                                                            select sr_store_sk as store_sk,\n                                                                                   sr_returned_date_sk as date_sk,\n                                                                                   cast(0 as decimal(7,2)) as sales_price,\n                                                                                   cast(0 as decimal(7,2)) as profit,\n                                                                                   sr_return_amt as return_amt,\n                                                                                   sr_net_loss as net_loss\n                                                                            from store_returns\n                                                                          ) salesreturns,\n                                                                          date_dim,\n                                                                          store\n                                                                      where date_sk = d_date_sk\n                                                                        and d_date between cast('2002-08-09' as date)\n                                                                          and dateadd(day, 14, cast('2002-08-09' as date))\n                                                                        and store_sk = s_store_sk\n                                                                      group by s_store_id)\n        ,\n                                                                 csr as\n                                                                     (select cp_catalog_page_id,\n                                                                             sum(sales_price) as sales,\n                                                                             sum(profit) as profit,\n                                                                             sum(return_amt) as returns,\n                                                                             sum(net_loss) as profit_loss\n                                                                      from\n                                                                          ( select  cs_catalog_page_sk as page_sk,\n                                                                                    cs_sold_date_sk  as date_sk,\n                                                                                    cs_ext_sales_price as sales_price,\n                                                                                    cs_net_profit as profit,\n                                                                                    cast(0 as decimal(7,2)) as return_amt,\n                                                                                    cast(0 as decimal(7,2)) as net_loss\n                                                                            from catalog_sales\n                                                                            union all\n                                                                            select cr_catalog_page_sk as page_sk,\n                                                                                   cr_returned_date_sk as date_sk,\n                                                                                   cast(0 as decimal(7,2)) as sales_price,\n                                                                                   cast(0 as decimal(7,2)) as profit,\n                                                                                   cr_return_amount as return_amt,\n                                                                                   cr_net_loss as net_loss\n                                                                            from catalog_returns\n                                                                          ) salesreturns,\n                                                                          date_dim,\n                                                                          catalog_page\n                                                                      where date_sk = d_date_sk\n                                                                        and d_date between cast('2002-08-09' as date)\n                                                                          and dateadd(day, 14, cast('2002-08-09' as date))\n                                                                        and page_sk = cp_catalog_page_sk\n                                                                      group by cp_catalog_page_id)\n        ,\n                                                                 wsr as\n                                                                     (select web_site_id,\n                                                                             sum(sales_price) as sales,\n                                                                             sum(profit) as profit,\n                                                                             sum(return_amt) as returns,\n                                                                             sum(net_loss) as profit_loss\n                                                                      from\n                                                                          ( select  ws_web_site_sk as wsr_web_site_sk,\n                                                                                    ws_sold_date_sk  as date_sk,\n                                                                                    ws_ext_sales_price as sales_price,\n                                                                                    ws_net_profit as profit,\n                                                                                    cast(0 as decimal(7,2)) as return_amt,\n                                                                                    cast(0 as decimal(7,2)) as net_loss\n                                                                            from web_sales\n                                                                            union all\n                                                                            select ws_web_site_sk as wsr_web_site_sk,\n                                                                                   wr_returned_date_sk as date_sk,\n                                                                                   cast(0 as decimal(7,2)) as sales_price,\n                                                                                   cast(0 as decimal(7,2)) as profit,\n                                                                                   wr_return_amt as return_amt,\n                                                                                   wr_net_loss as net_loss\n                                                                            from web_returns left outer join web_sales on\n                                                                                ( wr_item_sk = ws_item_sk\n                                                                                    and wr_order_number = ws_order_number)\n                                                                          ) salesreturns,\n                                                                          date_dim,\n                                                                          web_site\n                                                                      where date_sk = d_date_sk\n                                                                        and d_date between cast('2002-08-09' as date)\n                                                                          and dateadd(day, 14, cast('2002-08-09' as date))\n                                                                        and wsr_web_site_sk = web_site_sk\n                                                                      group by web_site_id)\nselect  channel\n     , id\n     , sum(sales) as sales\n     , sum(returns) as returns\n     , sum(profit) as profit\nfrom\n    (select 'store channel' as channel\n          , 'store' || s_store_id as id\n          , sales\n          , returns\n          , (profit - profit_loss) as profit\n     from   ssr\n     union all\n     select 'catalog channel' as channel\n          , 'catalog_page' || cp_catalog_page_id as id\n          , sales\n          , returns\n          , (profit - profit_loss) as profit\n     from  csr\n     union all\n     select 'web channel' as channel\n          , 'web_site' || web_site_id as id\n          , sales\n          , returns\n          , (profit - profit_loss) as profit\n     from   wsr\n    ) x\ngroup by rollup (channel, id)\norder by channel\n       ,id\n    limit 100;\n\n\nselect /* { \"query\":\"query76\",\"streamId\":0,\"querySequence\":99 } */  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (\n                                                                                                                                                                              SELECT 'store' as channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price\n                                                                                                                                                                              FROM store_sales, item, date_dim\n                                                                                                                                                                              WHERE ss_hdemo_sk IS NULL\n                                                                                                                                                                                AND ss_sold_date_sk=d_date_sk\n                                                                                                                                                                                AND ss_item_sk=i_item_sk\n                                                                                                                                                                              UNION ALL\n                                                                                                                                                                              SELECT 'web' as channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price\n                                                                                                                                                                              FROM web_sales, item, date_dim\n                                                                                                                                                                              WHERE ws_ship_mode_sk IS NULL\n                                                                                                                                                                                AND ws_sold_date_sk=d_date_sk\n                                                                                                                                                                                AND ws_item_sk=i_item_sk\n                                                                                                                                                                              UNION ALL\n                                                                                                                                                                              SELECT 'catalog' as channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price\n                                                                                                                                                                              FROM catalog_sales, item, date_dim\n                                                                                                                                                                              WHERE cs_ship_customer_sk IS NULL\n                                                                                                                                                                                AND cs_sold_date_sk=d_date_sk\n                                                                                                                                                                                AND cs_item_sk=i_item_sk) foo\nGROUP BY channel, col_name, d_year, d_qoy, i_category\nORDER BY channel, col_name, d_year, d_qoy, i_category\n    limit 100;\n\nSET end_time = CURRENT_TIMESTAMP();\n\nSELECT SUM(total_elapsed_time)/1000 AS total_seconds,\n       EXP(AVG(LN(total_elapsed_time)))/1000 AS geomean_seconds\nFROM (\n         SELECT total_elapsed_time\n         FROM TABLE(INFORMATION_SCHEMA.QUERY_HISTORY_BY_SESSION(\n                         SESSION_ID => CAST(CURRENT_SESSION() AS BIGINT),\n                         END_TIME_RANGE_START => $start_time::TIMESTAMP_LTZ,\n                         END_TIME_RANGE_END => $end_time::TIMESTAMP_LTZ,\n                         RESULT_LIMIT => 1000)\n             )\n         WHERE query_text ilike 'select%' or query_text ilike 'with%'\n         ORDER BY end_time DESC\n     ) x\n;\n\n", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "transforms": [], "queryLanguage": "sql", "pid": "1btyFdjn8lA", "name": "TPC-DS 100TB Complete Query Test", "orgId": "202346043869", "ownerId": "505987850600", "folderId": "HF2dREvK", "visibility": "private", "modified": "2024-03-02T03:11:16.011303Z", "version": 2, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/w1btyFdjn8lA#query", "slug": "w1btyFdjn8lA", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}, "1nZ3VDPBUoI": {"snowflakeRequestId": "8baa1bb8-22ea-4108-9256-8205ee66e867", "snowflakeQueryId": "01b2b5c1-0000-9486-0000-0006b4622071", "runner": "505987850600", "query": "/*--\nTasty Bytes is a fictitious, global food truck network, that is on a mission to serve unique food options with high\nquality items in a safe, convenient and cost effective way. In order to drive forward on their mission, Tasty Bytes\nis beginning to leverage the Snowflake Data Cloud.\n\nWithin this Worksheet, we will walk through the end to end process required to load a CSV file containing Menu specific data\nthat is currently hosted in Blob Storage.\n--*/\n\n-------------------------------------------------------------------------------------------\n    -- Step 1: To start, let's set the Role and Warehouse context\n        -- USE ROLE: https://docs.snowflake.com/en/sql-reference/sql/use-role\n        -- USE WAREHOUSE: https://docs.snowflake.com/en/sql-reference/sql/use-warehouse\n-------------------------------------------------------------------------------------------\n\n/*-- \n    - To run a single query, place your cursor in the query editor and select the Run button (\u2318-Return).\n    - To run the entire worksheet, select 'Run All' from the dropdown next to the Run button (\u2318-Shift-Return).\n--*/\n\n---> set the Role\nUSE ROLE accountadmin;\n\n---> set the Warehouse\nUSE WAREHOUSE compute_wh;\n\n-------------------------------------------------------------------------------------------\n    -- Step 2: With context in place, let's now create a Database, Schema, and Table\n        -- CREATE DATABASE: https://docs.snowflake.com/en/sql-reference/sql/create-database\n        -- CREATE SCHEMA: https://docs.snowflake.com/en/sql-reference/sql/create-schema\n        -- CREATE TABLE: https://docs.snowflake.com/en/sql-reference/sql/create-table\n-------------------------------------------------------------------------------------------\n\n---> create the Tasty Bytes Database\nCREATE OR REPLACE DATABASE tasty_bytes_sample_data;\n\n---> create the Raw POS (Point-of-Sale) Schema\nCREATE OR REPLACE SCHEMA tasty_bytes_sample_data.raw_pos;\n\n---> create the Raw Menu Table\nCREATE OR REPLACE TABLE tasty_bytes_sample_data.raw_pos.menu\n(\n    menu_id NUMBER(19,0),\n    menu_type_id NUMBER(38,0),\n    menu_type VARCHAR(16777216),\n    truck_brand_name VARCHAR(16777216),\n    menu_item_id NUMBER(38,0),\n    menu_item_name VARCHAR(16777216),\n    item_category VARCHAR(16777216),\n    item_subcategory VARCHAR(16777216),\n    cost_of_goods_usd NUMBER(38,4),\n    sale_price_usd NUMBER(38,4),\n    menu_item_health_metrics_obj VARIANT\n);\n\n---> confirm the empty Menu table exists\nSELECT * FROM tasty_bytes_sample_data.raw_pos.menu;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 3: To connect to the Blob Storage, let's create a Stage\n        -- Creating an S3 Stage: https://docs.snowflake.com/en/user-guide/data-load-s3-create-stage\n-------------------------------------------------------------------------------------------\n\n---> create the Stage referencing the Blob location and CSV File Format\nCREATE OR REPLACE STAGE tasty_bytes_sample_data.public.blob_stage\nurl = 's3://sfquickstarts/tastybytes/'\nfile_format = (type = csv);\n\n---> query the Stage to find the Menu CSV file\nLIST @tasty_bytes_sample_data.public.blob_stage/raw_pos/menu/;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 4: Now let's Load the Menu CSV file from the Stage\n        -- COPY INTO <table>: https://docs.snowflake.com/en/sql-reference/sql/copy-into-table\n-------------------------------------------------------------------------------------------\n\n---> copy the Menu file into the Menu table\nCOPY INTO tasty_bytes_sample_data.raw_pos.menu\nFROM @tasty_bytes_sample_data.public.blob_stage/raw_pos/menu/;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 5: Query the Menu table\n        -- SELECT: https://docs.snowflake.com/en/sql-reference/sql/select\n        -- TOP <n>: https://docs.snowflake.com/en/sql-reference/constructs/top_n\n        -- FLATTEN: https://docs.snowflake.com/en/sql-reference/functions/flatten\n-------------------------------------------------------------------------------------------\n\n---> how many rows are in the table?\nSELECT COUNT(*) AS row_count FROM tasty_bytes_sample_data.raw_pos.menu;\n\n---> what do the top 10 rows look like?\nSELECT TOP 10 * FROM tasty_bytes_sample_data.raw_pos.menu;\n\n---> what menu items does the Freezing Point brand sell?\nSELECT \n   menu_item_name\nFROM tasty_bytes_sample_data.raw_pos.menu\nWHERE truck_brand_name = 'Freezing Point';\n\n---> what is the profit on Mango Sticky Rice?\nSELECT \n   menu_item_name,\n   (sale_price_usd - cost_of_goods_usd) AS profit_usd\nFROM tasty_bytes_sample_data.raw_pos.menu\nWHERE 1=1\nAND truck_brand_name = 'Freezing Point'\nAND menu_item_name = 'Mango Sticky Rice';\n\n---> to finish, let's extract the Mango Sticky Rice ingredients from the semi-structured column\nSELECT \n    m.menu_item_name,\n    obj.value:\"ingredients\"::ARRAY AS ingredients\nFROM tasty_bytes_sample_data.raw_pos.menu m,\n    LATERAL FLATTEN (input => m.menu_item_health_metrics_obj:menu_item_health_metrics) obj\nWHERE 1=1\nAND truck_brand_name = 'Freezing Point'\nAND menu_item_name = 'Mango Sticky Rice';", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "TASTY_BYTES_SAMPLE_DATA", "schema": "RAW_POS", "secondaryRoles": "NONE"}, "queryRange": {"start": 4874, "end": 5181, "allowRewrites": false}, "startDate": "2024-03-02T03:13:25.00325978Z", "endDate": "2024-03-02T03:13:25.07082241Z", "drafts": {"505987850600": {"query": "/*--\nTasty Bytes is a fictitious, global food truck network, that is on a mission to serve unique food options with high\nquality items in a safe, convenient and cost effective way. In order to drive forward on their mission, Tasty Bytes\nis beginning to leverage the Snowflake Data Cloud.\n\nWithin this Worksheet, we will walk through the end to end process required to load a CSV file containing Menu specific data\nthat is currently hosted in Blob Storage.\n--*/\n\n-------------------------------------------------------------------------------------------\n    -- Step 1: To start, let's set the Role and Warehouse context\n        -- USE ROLE: https://docs.snowflake.com/en/sql-reference/sql/use-role\n        -- USE WAREHOUSE: https://docs.snowflake.com/en/sql-reference/sql/use-warehouse\n-------------------------------------------------------------------------------------------\n\n/*-- \n    - To run a single query, place your cursor in the query editor and select the Run button (\u2318-Return).\n    - To run the entire worksheet, select 'Run All' from the dropdown next to the Run button (\u2318-Shift-Return).\n--*/\n\n---> set the Role\nUSE ROLE accountadmin;\n\n---> set the Warehouse\nUSE WAREHOUSE compute_wh;\n\n-------------------------------------------------------------------------------------------\n    -- Step 2: With context in place, let's now create a Database, Schema, and Table\n        -- CREATE DATABASE: https://docs.snowflake.com/en/sql-reference/sql/create-database\n        -- CREATE SCHEMA: https://docs.snowflake.com/en/sql-reference/sql/create-schema\n        -- CREATE TABLE: https://docs.snowflake.com/en/sql-reference/sql/create-table\n-------------------------------------------------------------------------------------------\n\n---> create the Tasty Bytes Database\nCREATE OR REPLACE DATABASE tasty_bytes_sample_data;\n\n---> create the Raw POS (Point-of-Sale) Schema\nCREATE OR REPLACE SCHEMA tasty_bytes_sample_data.raw_pos;\n\n---> create the Raw Menu Table\nCREATE OR REPLACE TABLE tasty_bytes_sample_data.raw_pos.menu\n(\n    menu_id NUMBER(19,0),\n    menu_type_id NUMBER(38,0),\n    menu_type VARCHAR(16777216),\n    truck_brand_name VARCHAR(16777216),\n    menu_item_id NUMBER(38,0),\n    menu_item_name VARCHAR(16777216),\n    item_category VARCHAR(16777216),\n    item_subcategory VARCHAR(16777216),\n    cost_of_goods_usd NUMBER(38,4),\n    sale_price_usd NUMBER(38,4),\n    menu_item_health_metrics_obj VARIANT\n);\n\n---> confirm the empty Menu table exists\nSELECT * FROM tasty_bytes_sample_data.raw_pos.menu;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 3: To connect to the Blob Storage, let's create a Stage\n        -- Creating an S3 Stage: https://docs.snowflake.com/en/user-guide/data-load-s3-create-stage\n-------------------------------------------------------------------------------------------\n\n---> create the Stage referencing the Blob location and CSV File Format\nCREATE OR REPLACE STAGE tasty_bytes_sample_data.public.blob_stage\nurl = 's3://sfquickstarts/tastybytes/'\nfile_format = (type = csv);\n\n---> query the Stage to find the Menu CSV file\nLIST @tasty_bytes_sample_data.public.blob_stage/raw_pos/menu/;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 4: Now let's Load the Menu CSV file from the Stage\n        -- COPY INTO <table>: https://docs.snowflake.com/en/sql-reference/sql/copy-into-table\n-------------------------------------------------------------------------------------------\n\n---> copy the Menu file into the Menu table\nCOPY INTO tasty_bytes_sample_data.raw_pos.menu\nFROM @tasty_bytes_sample_data.public.blob_stage/raw_pos/menu/;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 5: Query the Menu table\n        -- SELECT: https://docs.snowflake.com/en/sql-reference/sql/select\n        -- TOP <n>: https://docs.snowflake.com/en/sql-reference/constructs/top_n\n        -- FLATTEN: https://docs.snowflake.com/en/sql-reference/functions/flatten\n-------------------------------------------------------------------------------------------\n\n---> how many rows are in the table?\nSELECT COUNT(*) AS row_count FROM tasty_bytes_sample_data.raw_pos.menu;\n\n---> what do the top 10 rows look like?\nSELECT TOP 10 * FROM tasty_bytes_sample_data.raw_pos.menu;\n\n---> what menu items does the Freezing Point brand sell?\nSELECT \n   menu_item_name\nFROM tasty_bytes_sample_data.raw_pos.menu\nWHERE truck_brand_name = 'Freezing Point';\n\n---> what is the profit on Mango Sticky Rice?\nSELECT \n   menu_item_name,\n   (sale_price_usd - cost_of_goods_usd) AS profit_usd\nFROM tasty_bytes_sample_data.raw_pos.menu\nWHERE 1=1\nAND truck_brand_name = 'Freezing Point'\nAND menu_item_name = 'Mango Sticky Rice';\n\n---> to finish, let's extract the Mango Sticky Rice ingredients from the semi-structured column\nSELECT \n    m.menu_item_name,\n    obj.value:\"ingredients\"::ARRAY AS ingredients\nFROM tasty_bytes_sample_data.raw_pos.menu m,\n    LATERAL FLATTEN (input => m.menu_item_health_metrics_obj:menu_item_health_metrics) obj\nWHERE 1=1\nAND truck_brand_name = 'Freezing Point'\nAND menu_item_name = 'Mango Sticky Rice';", "paramRefs": [], "queryRange": null, "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "TASTY_BYTES_SAMPLE_DATA", "schema": "RAW_POS", "secondaryRoles": "NONE"}, "queryLanguage": "sql", "appSessionId": 547649692230135949}}, "draftUpdates": {"505987850600": 1709353378635}, "transforms": [], "queryLanguage": "sql", "appSessionId": 547649692230135949, "gsQueryMetadata": {"startTime": 1709349204991, "endTime": 1709349205057, "sqlText": "SELECT \n    m.menu_item_name,\n    obj.value:\"ingredients\"::ARRAY AS ingredients\nFROM tasty_bytes_sample_data.raw_pos.menu m,\n    LATERAL FLATTEN (input => m.menu_item_health_metrics_obj:menu_item_health_metrics) obj\nWHERE 1=1\nAND truck_brand_name = 'Freezing Point'\nAND menu_item_name = 'Mango Sticky Rice';", "state": "SUCCEEDED", "statesDuration": "[35,0,2,0,0,0,1,17,0,0,0,0,3,0,0,0,0,0,0,6,0,2,0,0]", "stats": {"compilationTime": 35, "gsExecTime": 2, "ioLocalFdnReadBytes": 15872, "localDop": 1, "numBytesWrittenFirstResultChunk": 103, "numRowsInResult": 1, "producedRows": 1, "scanAssignedBytes": 15872, "scanAssignedFiles": 1, "scanBytes": 15872, "scanFiles": 1, "scanOriginalFiles": 1, "scheduleTime": 1, "warehouseSize": 1, "xpExecTime": 17}, "status": "SUCCESS", "totalDuration": 66, "warehouseExternalSize": "X-Small", "warehouseName": "COMPUTE_WH"}, "pid": "1nZ3VDPBUoI", "name": "Load sample data with SQL from S3 bucket", "orgId": "202346043869", "ownerId": "505987850600", "folderId": "Zf2k4GLJ", "visibility": "private", "layout": {"explorer": {"topHeight": 0, "mode": "CUSTOM"}, "pinned": {"topHeight": 0, "mode": "CUSTOM"}, "results": {"topHeight": 558, "mode": "CUSTOM"}, "schema": {"topHeight": 558, "mode": "CUSTOM"}, "visualization": {"topHeight": 558, "mode": "CUSTOM"}}, "modified": "2024-03-02T04:22:58.64073Z", "version": 16, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": "NONE"}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/w1nZ3VDPBUoI#query", "slug": "w1nZ3VDPBUoI", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}, "29A8xSHCrC0": {"snowflakeRequestId": null, "snowflakeQueryId": "", "query": "/* Tutorial 1: Sample queries on TPC-H data\n\nPrerequisites\nThis tutorial requires the Snowflake provided\nsnowflake_sample_data database.  If you don't\nhave this database already in your account \nplease add it by following these instructions:\nhttps://docs.snowflake.net/manuals/user-guide/sample-data-using.html\n \nPricing Summary Report Query (Q1) \nThis query demonstrates basic SQL \nfunctionality using the included TPC-H sample\ndata.  The results are the amount of business\nthat was billed, shipped, and returned. \n\nBusiness Question: The Pricing Summary Report\nQuery provides a summary pricing report for \nall line items shipped as of a given date. The\ndate is within 60 - 120 days of the greatest \nship date contained in the database. The query\nlists totals for extended price, discounted \nextended price, discounted extended price plus\ntax, average quantity, average extended price,\nand average discount. These aggregates are \ngrouped by RETURNFLAG and LINESTATUS, and \nlisted in ascending order of RETURNFLAG and \nLINESTATUS. A count of the number of line items\nin each group is included. \n*/\n\nuse schema snowflake_sample_data.tpch_sf1; \n-- or tpch_sf100, tpch_sf1000\n\nSELECT\nl_returnflag,\nl_linestatus,\nsum(l_quantity) as sum_qty,\nsum(l_extendedprice) as sum_base_price,\nsum(l_extendedprice * (1-l_discount)) \n  as sum_disc_price,\nsum(l_extendedprice * (1-l_discount) * \n  (1+l_tax)) as sum_charge,\navg(l_quantity) as avg_qty,\navg(l_extendedprice) as avg_price,\navg(l_discount) as avg_disc,\ncount(*) as count_order\nFROM\nlineitem\nWHERE\nl_shipdate <= dateadd(day, -90, to_date('1998-12-01'))\nGROUP BY\nl_returnflag,\nl_linestatus\nORDER BY\nl_returnflag,\nl_linestatus;\n\n", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "transforms": [], "queryLanguage": "sql", "pid": "29A8xSHCrC0", "name": "Sample queries on TPC-H data", "orgId": "202346043869", "ownerId": "505987850600", "folderId": "HF2dREvK", "visibility": "private", "modified": "2024-03-02T03:11:16.277872Z", "version": 2, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/w29A8xSHCrC0#query", "slug": "w29A8xSHCrC0", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}, "2ifBlp1Rt2w": {"snowflakeRequestId": null, "snowflakeQueryId": "", "query": "###################################################################################################\n# Tasty Bytes is a fictitious, global food truck network, that is on a mission to serve unique food\n# options with high quality items in a safe, convenient and cost effective way. In order to drive\n# forward on their mission, Tasty Bytes is beginning to leverage the Snowflake Data Cloud.\n\n# In this Python Worksheet, we will walk through the end to end process required to load a CSV file\n# containing Menu specific data that is currently hosted in Blob Storage.\n\n# Please click Run and see details below on what each step it doing. The final output will return\n# a Dataframe\n###################################################################################################\n\n###################################################################################################\n# Step 1 - To start, we must first import our Snowpark Package and a few Functions and Types\n###################################################################################################\n## Note: You can add more packages by selecting them using the Packages control and then importing them.\n\nimport snowflake.snowpark as snowpark\nfrom snowflake.snowpark.functions import col\nfrom snowflake.snowpark.types import StructField, StructType, IntegerType, StringType, VariantType\n\n###################################################################################################\n# Step 2 - Let's now define our Session and Create our Database, Schema and Blob Stage\n###################################################################################################\n\ndef main(session: snowpark.Session): \n    # Use SQL to create our Tasty Bytes Database\n    session.sql('CREATE OR REPLACE DATABASE tasty_bytes_sample_data;').collect()\n\n    # Use SQL to create our Raw POS (Point-of-Sale) Schema\n    session.sql('CREATE OR REPLACE SCHEMA tasty_bytes_sample_data.raw_pos;').collect()\n\n    # Use SQL to create our Blob Stage\n    session.sql('CREATE OR REPLACE STAGE tasty_bytes_sample_data.public.blob_stage url = \"s3://sfquickstarts/tastybytes/\" file_format = (type = csv);').collect()\n\n###################################################################################################\n# Step 3 - Now, we will define the Schema for our CSV file\n###################################################################################################\n    \n    # Define our Menu Schema\n    menu_schema = StructType([StructField(\"menu_id\",IntegerType()),\\\n                         StructField(\"menu_type_id\",IntegerType()),\\\n                         StructField(\"menu_type\",StringType()),\\\n                         StructField(\"truck_brand_name\",StringType()),\\\n                         StructField(\"menu_item_id\",IntegerType()),\\\n                         StructField(\"menu_item_name\",StringType()),\\\n                         StructField(\"item_category\",StringType()),\\\n                         StructField(\"item_subcategory\",StringType()),\\\n                         StructField(\"cost_of_goods_usd\",IntegerType()),\\\n                         StructField(\"sale_price_usd\",IntegerType()),\\\n                         StructField(\"menu_item_health_metrics_obj\",VariantType())])\n\n###################################################################################################\n# Step 4 - Using the Schema, let's Create a Dataframe from the Menu file and Save it as a Table\n###################################################################################################\n    \n    # Create a Dataframe from our Menu file from our Blob Stage\n    df_blob_stage_read = session.read.schema(menu_schema).csv('@tasty_bytes_sample_data.public.blob_stage/raw_pos/menu/')\n\n    # Save our Dataframe as a Menu table in our Tasty Bytes Database and Raw POS Schema\n    df_blob_stage_read.write.mode(\"overwrite\").save_as_table(\"tasty_bytes_sample_data.raw_pos.menu\")\n\n###################################################################################################\n# Step 5 - With the table saved, let's create a new, filtered Dataframe and Return the results\n###################################################################################################\n    \n    # Create a new Dataframe reading from our Menu table and filtering for the Freezing Point brand\n    df_menu_freezing_point = session.table(\"tasty_bytes_sample_data.raw_pos.menu\").filter(col(\"truck_brand_name\") == 'Freezing Point')\n\n    # return our Dataframe\n    return df_menu_freezing_point", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "transforms": [], "queryLanguage": "python", "queryLanguageConfig": {"python": {"handlerName": "main", "returnType": "Table()", "lineWrapping": true}}, "pid": "2ifBlp1Rt2w", "name": "Load sample data with Python from S3 bucket", "orgId": "202346043869", "ownerId": "505987850600", "folderId": "Zf2k4GLJ", "visibility": "private", "modified": "2024-03-02T03:11:16.43995Z", "version": 2, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/w2ifBlp1Rt2w#query", "slug": "w2ifBlp1Rt2w", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}, "4SDSNSrjBbo": {"snowflakeRequestId": "ec1bc1a8-a126-41da-9399-c7c8fc2f5088", "snowflakeQueryId": "01b32d80-0000-9a24-0006-b4620003b046", "runner": "505987850600", "query": "CREATE DATABASE TEST_DB;\n\ncreate warehouse new_wh;\n\n-- ALTER TABLE DW_DWH.DWH_C_PARAM DROP COLUMN TEST_DATE ;\nDECLARE MY_DT DEFAULT TO_DATE('2024-02-21');\nBEGIN \nALTER TABLE DW_DWH.DWH_C_PARAM ADD COLUMN TEST_DATE DATE DEFAULT :MY_DT;\nEND;\n\nALTER TABLE DW_DWH.DWH_C_PARAM ALTER COLUMN TEST_DATE SET DEFAULT TO_DATE('2023-02-21');\n\nCREATE SCHEMA DW_DWH;\nCREATE TABLE DW_DWH.DWH_C_PARAM(CURR_DAY DATE);\n-- alter table dw_dwh.dwh_c_param add column new_col varchar;\nselect * from dw_dwh.v_dwh_c_param;\n\n-- desc view dw_dwh.v_dwh_c_param;\n\ncreate or replace view dw_dwh.v_dwh_c_param\nas \nselect p.* from dw_dwh.dwh_c_param p;\n\nselect * from dw_dwh.dwh_c_param;\n\n\nls @test_db.public.pngstage;\n-- create or replace view dw_dwh.v_dwh_c_param\n-- as \n-- select * from dw_dwh.dwh_c_param;\n\nselect * from dw_dwh.v_dwh_c_param;\n\nselect get_ddl('view','dw_dwh.v_dwh_c_param');\n\n-- INSERT INTO DW_DWH.DWH_C_PARAM \n-- VALUES( '2023-01-02'),('2023-01-03');\n\n-- drop table DW_DWH.DWH_C_PARAM;\n\nCREATE OR REPLACE TEMP TABLE DW_DWH.DWH_C_PARAM(CURR_DAY VARCHAR);\nSELECT * FROM DW_DWH.DWH_C_PARAM;\n\n-- CREATE OR REPLACE TABLE \nDROP TABLE DW_DWH.DWH_C_PARAM;\n\n-- CREATE TRANSIENT TABLE NEW_TABLE CLONE DW_DWH.DWH_C_PARAM;\nselect max(1,2);\n\n\n-- CREATE TEMP TABLE ANOTHER_TABLE CLONE NEW_TABLE;\n\nSELECT * FROM ANOTHER_TABLE;\n\nselect count(c.*) from dw_dwh.dwh_c_param c;\n\nCREATE OR REPLACE TABLE ANOTHER_TABLE(VAL1,VAL2,VAL3) AS\nselect \n    uniform(1, 100000, random()) AS VAL1,\n    uuid_string() AS VAL2,\n    randstr(5,random()) AS VAL3,\nfrom table(generator(rowcount => 200));\n\n\nGRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE SYSADMIN;\n\n\n-- CREATE OR REPLACE STAGE TEST_DB.DW_DWH.MYSTG;\nDESC STAGE MYSTG;\n\nDESC USER USER1;\n\n-- GRANT ROLE SYSADMIN TO USER USER1;\n\nCREATE OR REPLACE USER user1 PASSWORD = ' ' DEFAULT_ROLE = PUBLIC DEFAULT_SECONDARY_ROLES = ('ALL'); MUST_CHANGE_PASSWORD = TRUE;\n\n\n-- USE ROLE SYSADMIN;\n\n-- INSERT INTO NEW_DB.PUBLIC.NEW_TB  VALUES(5),(6),(1);\n\nSELECT * FROM NEW_TB A JOIN NEW_TB B ON A.\"1\"=B.\"1\";\n\n\n\ncreate table source_table (id INT, name VARCHAR(50), age INT);\ncreate table target_table (id INT, name VARCHAR(50), age INT);\n\n\n-- Insert into source_table\nINSERT INTO source_table (id, name, age)\nVALUES\n    (1, 'Alice', 25),\n    (2, 'Bob', 30),\n    (3, 'Charlie', 35);\n\n-- Insert into target_table\nINSERT INTO target_table (id, name, age)\nVALUES\n    (1, 'Alice', 25),\n    (2, 'Bob', 32),\n    (4, 'David', 40);\n\nselect concat_ws('.',current_account(), current_region());\n\n\nSELECT\n            -- SUM(CASE WHEN $operation = 'DELETE' THEN 1 ELSE 0 END) AS num_deleted,\n            -- SUM(CASE WHEN $operation = 'UPDATE' THEN 1 ELSE 0 END) AS num_updated,\n            -- SUM(CASE WHEN $operation = 'INSERT' THEN 1 ELSE 0 END) AS num_inserted\n            *\n        FROM TABLE(result_scan('01b2ce69-0000-95e2-0000-0006b462d0b5'));SNOWFLAKE\n\n\nMERGE INTO target_table AS target\nUSING source_table AS source\nON target.id = source.id\nWHEN MATCHED AND source.age > 30 THEN DELETE\nWHEN MATCHED THEN UPDATE SET\n    target.name = source.name,\n    target.age = source.age\nWHEN NOT MATCHED THEN\n    INSERT (id, name, age)\n    VALUES (source.id, source.name, source.age);\n\n\n\nselect * from snowflake.account_usage.access_history where query_id = '01b2ce69-0000-95e2-0000-0006b462d0b5' order by query_start_time desc;\n\n\nselect * from table(result_scan('01b2dced-0000-96ac-0006-b46200016032'));\n\n-- drop user user1;\nCREATE USER user1 PASSWORD='abc123' DEFAULT_ROLE = public DEFAULT_SECONDARY_ROLES = ('ALL') MUST_CHANGE_PASSWORD = False;\n\n-- alter user user1 set email = 'abc@gmail.com';\n\n\nCREATE OR REPLACE FUNCTION py_spacy(str string)\nRETURNS ARRAY\nLANGUAGE PYTHON\nRUNTIME_VERSION = 3.8\nHANDLER = 'func'\nPACKAGES = ('spacy')\nIMPORTS = ('@spacy_stage/spacy_en_core_web_sm.zip')\nAS\n$$\nimport fcntl\nimport os\nimport spacy\nimport sys\nimport threading\nimport zipfile\n\n # File lock class for synchronizing write access to /tmp.\n class FileLock:\n   def __enter__(self):\n       self._lock = threading.Lock()\n       self._lock.acquire()\n       self._fd = open('/tmp/lockfile.LOCK', 'w+')\n       fcntl.lockf(self._fd, fcntl.LOCK_EX)\n\n    def __exit__(self, type, value, traceback):\n       self._fd.close()\n       self._lock.release()\n\n # Get the location of the import directory. Snowflake sets the import\n # directory location so code can retrieve the location via sys._xoptions.\n IMPORT_DIRECTORY_NAME = \"snowflake_import_directory\"\n import_dir = sys._xoptions[IMPORT_DIRECTORY_NAME]\n\n # Get the path to the ZIP file and set the location to extract to.\n zip_file_path = import_dir + \"spacy_en_core_web_sm.zip\"\n extracted = '/tmp/en_core_web_sm'\n\n # Extract the contents of the ZIP. This is done under the file lock\n # to ensure that only one worker process unzips the contents.\n with FileLock():\n    if not os.path.isdir(extracted + '/en_core_web_sm/en_core_web_sm-2.3.1'):\n       with zipfile.ZipFile(zip_file_path, 'r') as myzip:\n          myzip.extractall(extracted)\n\n # Load the model from the extracted file.\n nlp = spacy.load(extracted + \"/en_core_web_sm/en_core_web_sm-2.3.1\")\n\n def func(text):\n    doc = nlp(text)\n    result = []\n\n    for ent in doc.ents:\n       result.append((ent.text, ent.start_char, ent.end_char, ent.label_))\n    return result\n    $$;\n\n--@pngstage/web_png/png_01b304ed-0000-98ae-0006-b4620002e0ce.png\n\n('web_png', 'png_01b304ed-0000-98ae-0006-b4620002e0ce.png', '@pngstage/web_png/png_01b304ed-0000-98ae-0006-b4620002e0ce.png')\n\ncall create_png_web_image('01b304ed-0000-98ae-0006-b4620002e0ce', 'Top Customers orders by priority', 'Date', 'total_price');\ncreate or replace procedure create_png_web_image(\n    query_id string\n    , title string\n    , x_label string\n    , y_label string)\nreturns string\nlanguage python\nruntime_version = '3.11'\npackages = ('snowflake-snowpark-python', 'matplotlib')\nhandler = 'run'\nexecute as caller\nas\n$$\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport io\n\ndef save_file(session, buffer, path, dest_filename):\n    session._conn.upload_stream(buffer, path, dest_filename, compress_data=False, overwrite=True)\n    return path + '/' + dest_filename\n\ndef run(session, query_id, title, x_label, y_label):  \n    df = session.sql(\"select * from table(result_scan(?))\", params=[query_id]).to_pandas()\n\n    plt.figure(figsize=(5, 3))\n    plt.barh(df.iloc[:, 0], df.iloc[:, 1], color='skyblue')\n    plt.xlabel(x_label)\n    plt.ylabel(y_label)\n    plt.title(title)\n    plt.gca().invert_yaxis()  # Invert y-axis for better readability   \n    plt.tight_layout()\n \n    buffer = io.BytesIO()\n    plt.savefig(buffer, format='png')\n    buffer.seek(0)  # Rewind the buffer\n    stage = '@pngstage'\n    path = 'web_png'\n    filename = 'png_%s.png' % (query_id)\n    relative_path = save_file(session, buffer, stage + '/' + path, filename )\n    return (path,filename,relative_path)\n    return session.sql(\"select get_presigned_url(%s, '%s/%s', 604800) as url\" % (stage, path, filename)).collect()[0]['URL']\n$$\n;\n\n@pngstage/web_png/png_01b3006f-0000-9870-0006-b462000290fa.png\n--@pngstage/Logs/snowflake_2024_03_15_21_55_37.log\ncreate or replace stage pngstage \ndirectory = (enable = true)   \nencryption=(type = 'snowflake_sse');\n\n\nSELECT O_ORDERDATE,O_ORDERPRIORITY,SUM(O_TOTALPRICE) AS TOTAL_PRICE FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.ORDERS \nGROUP BY ALL;\nLIMIT 100;\n\nls @TEST_DB.PUBLIC.PNGSTAGE;\n\nexecute immediate $$\ndeclare\n    signed_png_url string;\n    formatted string;    \nbegin\n    signed_png_url := (call create_png_web_image('01b3006f-0000-9870-0006-b462000290fa', 'Top weekly GitHub projects by stars', 'Stars', 'Project')); \n    formatted := '<b>The top GitHub projects by # of stars this week are:</b><br/><img src=\"' || signed_png_url || '\"\"/>';\n    -- call system$send_email(\n    --     'my_email_int', 'bibekpaudyal23@gmail.com', 'Top GitHub weekly projects (png)', :formatted, 'text/html'\n    -- );\n    return 'sent: ' || :formatted;\n    end;\n$$\n;\n\n\n\n-- select get_presigned_url(@pngstage, 'web_png/png_01b3006f-0000-9870-0006-b462000290fa.png', 604800) as url;\n\n-- ('web_png', 'png_01b304ed-0000-98ae-0006-b4620002e0ce.png', '@pngstage/web_png/png_01b304ed-0000-98ae-0006-b4620002e0ce.png')\nls @pngstage;\n\ncall create_log_file();\n\ncreate or replace procedure create_log_file()\nreturns string\nlanguage python\nruntime_version = '3.11'\npackages = ('snowflake-snowpark-python', 'matplotlib')\nhandler = 'run'\nexecute as caller\nas\n$$\nimport logging \nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport io\nimport os\nfrom datetime import datetime\nfrom tempfile import TemporaryDirectory\n\ndef save_file(session, buffer, path, dest_filename):\n    session._conn.upload_stream(buffer, path, dest_filename, compress_data=False, overwrite=True)\n    return path + '/' + dest_filename\n\ndef run(session):\n    curr_time = datetime.now().strftime(\"%Y_%m_%d_%H_%M_%S\")\n    log_dir = '/tmp'\n    stage = '@pngstage'\n    stage_log_dir ='Logs' \n    filename = f\"snowflake_{curr_time}.log\"\n    full_path = f\"{log_dir}/{filename}\"\n    logger = logging.getLogger('snowflake_migrator')\n    logger.setLevel(logging.DEBUG)\n\n    with TemporaryDirectory() as tmp_folder:\n        my_log_path = os.path.join(tmp_folder,full_path )    \n        file_handler = logging.FileHandler(my_log_path)\n        file_handler.setLevel(logging.DEBUG)\n\n        # Create a formatter and set the format for the file handler\n        formatter = logging.Formatter('%(levelname)s %(asctime)s : %(message)s')\n        file_handler.setFormatter(formatter)\n\n        # Add the file handler to the logger\n        logger.addHandler(file_handler)\n        #logging.basicConfig(level=logging.DEBUG, format='%(levelname)s %(asctime)s : %(message)s', filename=my_log_path)\n    \n        # Create a console handler and set its level to INFO\n        #console_handler = logging.StreamHandler()\n        #console_handler.setLevel(logging.DEBUG)\n        \n        # Create a formatter and set the format for the console handler\n        #formatter = logging.Formatter('%(levelname)s %(asctime)s: %(message)s')\n        #console_handler.setFormatter(formatter)\n        logger.debug('This is test log')\n        logger.debug('WRITING TO FILE')\n        logger.info('Hey this is our final log')\n        f = open(my_log_path)\n        #return f.read()\n        buffer = open(my_log_path, \"rb\")\n        buffer.seek(0)  # Rewind the buffer\n        rel_path = save_file(session,buffer, stage + '/' + stage_log_dir, filename)\n        #return rel_path\n    return session.sql(\"select get_presigned_url(%s, '%s/%s', 604800) as url\" % (stage, stage_log_dir, filename)).collect()[0]['URL']\n$$\n;\n\n\ncreate or replace table test_db.public.new_table(id varchar);\ncreate  view test_db.public.new_table\nas \nselect * from test_db.public.new_table;\n\n\nlist @~/worksheet_data;", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "NEW_WH", "database": "TEST_DB", "schema": "PUBLIC", "secondaryRoles": "NONE"}, "queryRange": {"start": 10711, "end": 10734, "allowRewrites": false}, "startDate": "2024-03-23T10:08:20.030327859Z", "endDate": "2024-03-23T10:08:20.099366124Z", "drafts": {"505987850600": {"query": "CREATE DATABASE TEST_DB;\n\ncreate warehouse new_wh;\n\n-- ALTER TABLE DW_DWH.DWH_C_PARAM DROP COLUMN TEST_DATE ;\nDECLARE MY_DT DEFAULT TO_DATE('2024-02-21');\nBEGIN \nALTER TABLE DW_DWH.DWH_C_PARAM ADD COLUMN TEST_DATE DATE DEFAULT :MY_DT;\nEND;\n\nALTER TABLE DW_DWH.DWH_C_PARAM ALTER COLUMN TEST_DATE SET DEFAULT TO_DATE('2023-02-21');\n\nCREATE SCHEMA DW_DWH;\nCREATE TABLE DW_DWH.DWH_C_PARAM(CURR_DAY DATE);\n-- alter table dw_dwh.dwh_c_param add column new_col varchar;\nselect * from dw_dwh.v_dwh_c_param;\n\n-- desc view dw_dwh.v_dwh_c_param;\n\ncreate or replace view dw_dwh.v_dwh_c_param\nas \nselect p.* from dw_dwh.dwh_c_param p;\n\nselect * from dw_dwh.dwh_c_param;\n\n\nls @test_db.public.pngstage;\n-- create or replace view dw_dwh.v_dwh_c_param\n-- as \n-- select * from dw_dwh.dwh_c_param;\n\nselect * from dw_dwh.v_dwh_c_param;\n\nselect get_ddl('view','dw_dwh.v_dwh_c_param');\n\n-- INSERT INTO DW_DWH.DWH_C_PARAM \n-- VALUES( '2023-01-02'),('2023-01-03');\n\n-- drop table DW_DWH.DWH_C_PARAM;\n\nCREATE OR REPLACE TEMP TABLE DW_DWH.DWH_C_PARAM(CURR_DAY VARCHAR);\nSELECT * FROM DW_DWH.DWH_C_PARAM;\n\n-- CREATE OR REPLACE TABLE \nDROP TABLE DW_DWH.DWH_C_PARAM;\n\n-- CREATE TRANSIENT TABLE NEW_TABLE CLONE DW_DWH.DWH_C_PARAM;\nselect max(1,2);\n\n\n-- CREATE TEMP TABLE ANOTHER_TABLE CLONE NEW_TABLE;\n\nSELECT * FROM ANOTHER_TABLE;\n\nselect count(c.*) from dw_dwh.dwh_c_param c;\n\nCREATE OR REPLACE TABLE ANOTHER_TABLE(VAL1,VAL2,VAL3) AS\nselect \n    uniform(1, 100000, random()) AS VAL1,\n    uuid_string() AS VAL2,\n    randstr(5,random()) AS VAL3,\nfrom table(generator(rowcount => 200));\n\n\nGRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE SYSADMIN;\n\n\n-- CREATE OR REPLACE STAGE TEST_DB.DW_DWH.MYSTG;\nDESC STAGE MYSTG;\n\nDESC USER USER1;\n\n-- GRANT ROLE SYSADMIN TO USER USER1;\n\nCREATE OR REPLACE USER user1 PASSWORD = ' ' DEFAULT_ROLE = PUBLIC DEFAULT_SECONDARY_ROLES = ('ALL'); MUST_CHANGE_PASSWORD = TRUE;\n\n\n-- USE ROLE SYSADMIN;\n\n-- INSERT INTO NEW_DB.PUBLIC.NEW_TB  VALUES(5),(6),(1);\n\nSELECT * FROM NEW_TB A JOIN NEW_TB B ON A.\"1\"=B.\"1\";\n\n\n\ncreate table source_table (id INT, name VARCHAR(50), age INT);\ncreate table target_table (id INT, name VARCHAR(50), age INT);\n\n\n-- Insert into source_table\nINSERT INTO source_table (id, name, age)\nVALUES\n    (1, 'Alice', 25),\n    (2, 'Bob', 30),\n    (3, 'Charlie', 35);\n\n-- Insert into target_table\nINSERT INTO target_table (id, name, age)\nVALUES\n    (1, 'Alice', 25),\n    (2, 'Bob', 32),\n    (4, 'David', 40);\n\nselect concat_ws('.',current_account(), current_region());\n\n\nSELECT\n            -- SUM(CASE WHEN $operation = 'DELETE' THEN 1 ELSE 0 END) AS num_deleted,\n            -- SUM(CASE WHEN $operation = 'UPDATE' THEN 1 ELSE 0 END) AS num_updated,\n            -- SUM(CASE WHEN $operation = 'INSERT' THEN 1 ELSE 0 END) AS num_inserted\n            *\n        FROM TABLE(result_scan('01b2ce69-0000-95e2-0000-0006b462d0b5'));SNOWFLAKE\n\n\nMERGE INTO target_table AS target\nUSING source_table AS source\nON target.id = source.id\nWHEN MATCHED AND source.age > 30 THEN DELETE\nWHEN MATCHED THEN UPDATE SET\n    target.name = source.name,\n    target.age = source.age\nWHEN NOT MATCHED THEN\n    INSERT (id, name, age)\n    VALUES (source.id, source.name, source.age);\n\n\n\nselect * from snowflake.account_usage.access_history where query_id = '01b2ce69-0000-95e2-0000-0006b462d0b5' order by query_start_time desc;\n\n\nselect * from table(result_scan('01b2dced-0000-96ac-0006-b46200016032'));\n\n-- drop user user1;\nCREATE USER user1 PASSWORD='abc123' DEFAULT_ROLE = public DEFAULT_SECONDARY_ROLES = ('ALL') MUST_CHANGE_PASSWORD = False;\n\n-- alter user user1 set email = 'abc@gmail.com';\n\n\nCREATE OR REPLACE FUNCTION py_spacy(str string)\nRETURNS ARRAY\nLANGUAGE PYTHON\nRUNTIME_VERSION = 3.8\nHANDLER = 'func'\nPACKAGES = ('spacy')\nIMPORTS = ('@spacy_stage/spacy_en_core_web_sm.zip')\nAS\n$$\nimport fcntl\nimport os\nimport spacy\nimport sys\nimport threading\nimport zipfile\n\n # File lock class for synchronizing write access to /tmp.\n class FileLock:\n   def __enter__(self):\n       self._lock = threading.Lock()\n       self._lock.acquire()\n       self._fd = open('/tmp/lockfile.LOCK', 'w+')\n       fcntl.lockf(self._fd, fcntl.LOCK_EX)\n\n    def __exit__(self, type, value, traceback):\n       self._fd.close()\n       self._lock.release()\n\n # Get the location of the import directory. Snowflake sets the import\n # directory location so code can retrieve the location via sys._xoptions.\n IMPORT_DIRECTORY_NAME = \"snowflake_import_directory\"\n import_dir = sys._xoptions[IMPORT_DIRECTORY_NAME]\n\n # Get the path to the ZIP file and set the location to extract to.\n zip_file_path = import_dir + \"spacy_en_core_web_sm.zip\"\n extracted = '/tmp/en_core_web_sm'\n\n # Extract the contents of the ZIP. This is done under the file lock\n # to ensure that only one worker process unzips the contents.\n with FileLock():\n    if not os.path.isdir(extracted + '/en_core_web_sm/en_core_web_sm-2.3.1'):\n       with zipfile.ZipFile(zip_file_path, 'r') as myzip:\n          myzip.extractall(extracted)\n\n # Load the model from the extracted file.\n nlp = spacy.load(extracted + \"/en_core_web_sm/en_core_web_sm-2.3.1\")\n\n def func(text):\n    doc = nlp(text)\n    result = []\n\n    for ent in doc.ents:\n       result.append((ent.text, ent.start_char, ent.end_char, ent.label_))\n    return result\n    $$;\n\n--@pngstage/web_png/png_01b304ed-0000-98ae-0006-b4620002e0ce.png\n\n('web_png', 'png_01b304ed-0000-98ae-0006-b4620002e0ce.png', '@pngstage/web_png/png_01b304ed-0000-98ae-0006-b4620002e0ce.png')\n\ncall create_png_web_image('01b304ed-0000-98ae-0006-b4620002e0ce', 'Top Customers orders by priority', 'Date', 'total_price');\ncreate or replace procedure create_png_web_image(\n    query_id string\n    , title string\n    , x_label string\n    , y_label string)\nreturns string\nlanguage python\nruntime_version = '3.11'\npackages = ('snowflake-snowpark-python', 'matplotlib')\nhandler = 'run'\nexecute as caller\nas\n$$\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport io\n\ndef save_file(session, buffer, path, dest_filename):\n    session._conn.upload_stream(buffer, path, dest_filename, compress_data=False, overwrite=True)\n    return path + '/' + dest_filename\n\ndef run(session, query_id, title, x_label, y_label):  \n    df = session.sql(\"select * from table(result_scan(?))\", params=[query_id]).to_pandas()\n\n    plt.figure(figsize=(5, 3))\n    plt.barh(df.iloc[:, 0], df.iloc[:, 1], color='skyblue')\n    plt.xlabel(x_label)\n    plt.ylabel(y_label)\n    plt.title(title)\n    plt.gca().invert_yaxis()  # Invert y-axis for better readability   \n    plt.tight_layout()\n \n    buffer = io.BytesIO()\n    plt.savefig(buffer, format='png')\n    buffer.seek(0)  # Rewind the buffer\n    stage = '@pngstage'\n    path = 'web_png'\n    filename = 'png_%s.png' % (query_id)\n    relative_path = save_file(session, buffer, stage + '/' + path, filename )\n    return (path,filename,relative_path)\n    return session.sql(\"select get_presigned_url(%s, '%s/%s', 604800) as url\" % (stage, path, filename)).collect()[0]['URL']\n$$\n;\n\n@pngstage/web_png/png_01b3006f-0000-9870-0006-b462000290fa.png\n--@pngstage/Logs/snowflake_2024_03_15_21_55_37.log\ncreate or replace stage pngstage \ndirectory = (enable = true)   \nencryption=(type = 'snowflake_sse');\n\n\nSELECT O_ORDERDATE,O_ORDERPRIORITY,SUM(O_TOTALPRICE) AS TOTAL_PRICE FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.ORDERS \nGROUP BY ALL;\nLIMIT 100;\n\nls @TEST_DB.PUBLIC.PNGSTAGE;\n\nexecute immediate $$\ndeclare\n    signed_png_url string;\n    formatted string;    \nbegin\n    signed_png_url := (call create_png_web_image('01b3006f-0000-9870-0006-b462000290fa', 'Top weekly GitHub projects by stars', 'Stars', 'Project')); \n    formatted := '<b>The top GitHub projects by # of stars this week are:</b><br/><img src=\"' || signed_png_url || '\"\"/>';\n    -- call system$send_email(\n    --     'my_email_int', 'bibekpaudyal23@gmail.com', 'Top GitHub weekly projects (png)', :formatted, 'text/html'\n    -- );\n    return 'sent: ' || :formatted;\n    end;\n$$\n;\n\n\n\n-- select get_presigned_url(@pngstage, 'web_png/png_01b3006f-0000-9870-0006-b462000290fa.png', 604800) as url;\n\n-- ('web_png', 'png_01b304ed-0000-98ae-0006-b4620002e0ce.png', '@pngstage/web_png/png_01b304ed-0000-98ae-0006-b4620002e0ce.png')\nls @pngstage;\n\ncall create_log_file();\n\ncreate or replace procedure create_log_file()\nreturns string\nlanguage python\nruntime_version = '3.11'\npackages = ('snowflake-snowpark-python', 'matplotlib')\nhandler = 'run'\nexecute as caller\nas\n$$\nimport logging \nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport io\nimport os\nfrom datetime import datetime\nfrom tempfile import TemporaryDirectory\n\ndef save_file(session, buffer, path, dest_filename):\n    session._conn.upload_stream(buffer, path, dest_filename, compress_data=False, overwrite=True)\n    return path + '/' + dest_filename\n\ndef run(session):\n    curr_time = datetime.now().strftime(\"%Y_%m_%d_%H_%M_%S\")\n    log_dir = '/tmp'\n    stage = '@pngstage'\n    stage_log_dir ='Logs' \n    filename = f\"snowflake_{curr_time}.log\"\n    full_path = f\"{log_dir}/{filename}\"\n    logger = logging.getLogger('snowflake_migrator')\n    logger.setLevel(logging.DEBUG)\n\n    with TemporaryDirectory() as tmp_folder:\n        my_log_path = os.path.join(tmp_folder,full_path )    \n        file_handler = logging.FileHandler(my_log_path)\n        file_handler.setLevel(logging.DEBUG)\n\n        # Create a formatter and set the format for the file handler\n        formatter = logging.Formatter('%(levelname)s %(asctime)s : %(message)s')\n        file_handler.setFormatter(formatter)\n\n        # Add the file handler to the logger\n        logger.addHandler(file_handler)\n        #logging.basicConfig(level=logging.DEBUG, format='%(levelname)s %(asctime)s : %(message)s', filename=my_log_path)\n    \n        # Create a console handler and set its level to INFO\n        #console_handler = logging.StreamHandler()\n        #console_handler.setLevel(logging.DEBUG)\n        \n        # Create a formatter and set the format for the console handler\n        #formatter = logging.Formatter('%(levelname)s %(asctime)s: %(message)s')\n        #console_handler.setFormatter(formatter)\n        logger.debug('This is test log')\n        logger.debug('WRITING TO FILE')\n        logger.info('Hey this is our final log')\n        f = open(my_log_path)\n        #return f.read()\n        buffer = open(my_log_path, \"rb\")\n        buffer.seek(0)  # Rewind the buffer\n        rel_path = save_file(session,buffer, stage + '/' + stage_log_dir, filename)\n        #return rel_path\n    return session.sql(\"select get_presigned_url(%s, '%s/%s', 604800) as url\" % (stage, stage_log_dir, filename)).collect()[0]['URL']\n$$\n;\n\n\ncreate or replace table test_db.public.new_table(id varchar);\ncreate  view test_db.public.new_table\nas \nselect * from test_db.public.new_table;\n\n\nlist @~/worksheet_data;", "paramRefs": [], "queryRange": null, "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "NEW_WH", "database": "TEST_DB", "schema": "PUBLIC", "secondaryRoles": "NONE"}, "queryLanguage": "sql", "appSessionId": 533735403745}}, "draftUpdates": {"505987850600": 1711204108777}, "transforms": [], "queryLanguage": "sql", "appSessionId": 533735403745, "gsQueryMetadata": {"startTime": 1711188500023, "endTime": 1711188500089, "sqlText": "list @~/worksheet_data;", "state": "SUCCEEDED", "statesDuration": "[15,0,40,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,1,0,0,0,0,0,0]", "stats": {"compilationTime": 15, "gsExecTime": 40}, "status": "SUCCESS", "totalDuration": 66, "warehouseName": "NEW_WH"}, "pid": "4SDSNSrjBbo", "name": "test", "orgId": "202346043869", "ownerId": "505987850600", "folderId": "Zf2k4GLJ", "visibility": "private", "layout": {"explorer": {"topHeight": 0, "mode": "CUSTOM"}, "pinned": {"topHeight": 0, "mode": "CUSTOM"}, "results": {"topHeight": 302, "mode": "CUSTOM"}, "schema": {"topHeight": 302, "mode": "CUSTOM"}, "visualization": {"topHeight": 302, "mode": "CUSTOM"}}, "modified": "2024-03-23T14:28:28.785067Z", "version": 212, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "", "database": "", "schema": "", "secondaryRoles": "NONE"}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/w4SDSNSrjBbo#query", "slug": "w4SDSNSrjBbo", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}, "OQAyRdfc1y": {"snowflakeRequestId": "ffc8ba30-3f11-4bff-9d70-09492894ac30", "snowflakeQueryId": "01b3018c-0000-9897-0006-b4620002c162", "runner": "505987850600", "query": "# Import python packages\nimport streamlit as st\nfrom snowflake.snowpark.context import get_active_session\n\nst.write(f'Hey there')\n# Write directly to the app\nst.title(\"Example Streamlit App :balloon:\")\nst.write(\n    \"\"\"Replace this example with your own code!\n    **And if you're new to Streamlit,** check\n    out our easy-to-follow guides at\n    [docs.streamlit.io](https://docs.streamlit.io).\n    \"\"\"\n)\n\n# Get the current credentials\nsession = get_active_session()\n\nfile_path = '/usr/lib/python_udf/401bcc4bcedcdc526e36ec99e16210ef307ce5d7b2e4be299c572bb666ef5540/lib/python3.8/site-packages/snowflake/snowpark/_internal/server_connection.py'\nwith open(file_path) as f:\n    st.code(f.read())\n\nsession._conn.upload_stream()\n\n# Use an interactive slider to get user input\nhifives_val = st.slider(\n    \"Number of high-fives in Q3\",\n    min_value=0,\n    max_value=90,\n    value=60,\n    help=\"Use this to enter the number of high-fives you gave in Q3\",\n)\n\n#  Create an example dataframe\n#  Note: this is just some dummy data, but you can easily connect to your Snowflake data\n#  It is also possible to query data using raw SQL using session.sql() e.g. session.sql(\"select * from table\")\ncreated_dataframe = session.create_dataframe(\n    [[50, 25, \"Q1\"], [20, 35, \"Q2\"], [hifives_val, 30, \"Q3\"]],\n    schema=[\"HIGH_FIVES\", \"FIST_BUMPS\", \"QUARTER\"],\n)\n\n# Execute the query and convert it into a Pandas dataframe\nqueried_data = created_dataframe.to_pandas()\n\n# Create a simple bar chart\n# See docs.streamlit.io for more types of charts\nst.subheader(\"Number of high-fives\")\nst.bar_chart(data=queried_data, x=\"QUARTER\", y=\"HIGH_FIVES\")\n\nst.subheader(\"Underlying data\")\nst.dataframe(queried_data, use_container_width=True)\n", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "TEST_DB", "schema": "PUBLIC", "secondaryRoles": "NONE"}, "queryRange": {"start": 0, "end": 1714, "allowRewrites": false}, "startDate": "2024-03-15T14:36:46.656506252Z", "drafts": {"505987850600": {"paramRefs": [], "queryRange": null, "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "TEST_DB", "schema": "PUBLIC", "secondaryRoles": "NONE"}, "queryLanguage": "python", "queryLanguageConfig": {"python": {"packages": {"snowflake-snowpark-python": "*", "streamlit": "1.26.0"}, "returnType": "Table()", "runtimeVersion": "3.11"}}, "appSessionId": 377761901867}}, "draftUpdates": {"505987850600": 1710513510029}, "error": {"stage": "preview", "message": "100357 (P0000): Python Interpreter Error:\nTraceback (most recent call last):\n  File \"_udf_code.py\", line 17, in <module>\n  File \"/usr/lib/python_udf/732ac96c9425297a8af5e303f6cc027e4827b31a1954c2bfff24d8cfdcdb03d2/lib/python3.11/site-packages/snowflake/snowpark/context.py\", line 20, in get_active_session\n    return snowflake.snowpark.session._get_active_session()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python_udf/732ac96c9425297a8af5e303f6cc027e4827b31a1954c2bfff24d8cfdcdb03d2/lib/python3.11/site-packages/snowflake/snowpark/session.py\", line 189, in _get_active_session\n    raise SnowparkClientExceptionMessages.SERVER_NO_DEFAULT_SESSION()\nsnowflake.snowpark.exceptions.SnowparkSessionException: (1403): No default Session is found. Please create a session before you call function 'udf' or use decorator '@udf'.\n in function PYTHON_WORKSHEET with handler main", "code": "100357", "line": null, "lineOffset": null, "bool": false}, "transforms": [], "queryLanguage": "python", "queryLanguageConfig": {"python": {"packages": {"snowflake-snowpark-python": "*", "streamlit": "1.26.0"}, "returnType": "Table()", "runtimeVersion": "3.11", "logStageName": ".snowflake_console_output"}}, "appSessionId": 377761901867, "gsQueryMetadata": {"startTime": 1710513406643, "endTime": 1710513454794, "errorCode": "100357", "errorMessage": "Python Interpreter Error:\nTraceback (most recent call last):\n  File \"_udf_code.py\", line 17, in <module>\n  File \"/usr/lib/python_udf/732ac96c9425297a8af5e303f6cc027e4827b31a1954c2bfff24d8cfdcdb03d2/lib/python3.11/site-packages/snowflake/snowpark/context.py\", line 20, in get_active_session\n    return snowflake.snowpark.session._get_active_session()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python_udf/732ac96c9425297a8af5e303f6cc027e4827b31a1954c2bfff24d8cfdcdb03d2/lib/python3.11/site-packages/snowflake/snowpark/session.py\", line 189, in _get_active_session\n    raise SnowparkClientExceptionMessages.SERVER_NO_DEFAULT_SESSION()\nsnowflake.snowpark.exceptions.SnowparkSessionException: (1403): No default Session is found. Please create a session before you call function 'udf' or use decorator '@udf'.\n in function PYTHON_WORKSHEET with handler main", "sqlText": "with PYTHON_WORKSHEET as procedure () returns Table() language python runtime_version=3.11 packages=('snowflake-snowpark-python==*','streamlit==1.26.0') handler='main' as '# Import python packages\nimport streamlit as st\nfrom snowflake.snowpark.context import get_active_session\n\nst.write(f''Hey there'')\n# Write directly to the app\nst.title(\"Example Streamlit App :balloon:\")\nst.write(\n    \"\"\"Replace this example with your own code!\n    **And if you''re new to Streamlit,** check\n    out our easy-to-follow guides at\n    [docs.streamlit.io](https://docs.streamlit.io).\n    \"\"\"\n)\n\n# Get the current credentials\nsession = get_active_session()\n\nfile_path = ''/usr/lib/python_udf/401bcc4bcedcdc526e36ec99e16210ef307ce5d7b2e4be299c572bb666ef5540/lib/python3.8/site-packages/snowflake/snowpark/_internal/server_connection.py''\nwith open(file_path) as f:\n    st.code(f.read())\n\nsession._conn.upload_stream()\n\n# Use an interactive slider to get user input\nhifives_val = st.slider(\n    \"Number of high-fives in Q3\",\n    min_value=0,\n    max_value=90,\n    value=60,\n    help=\"Use this to enter the number of high-fives you gave in Q3\",\n)\n\n#  Create an example dataframe\n#  Note: this is just some dummy data, but you can easily connect to your Snowflake data\n#  It is also possible to query data using raw SQL using session.sql() e.g. session.sql(\"select * from table\")\ncreated_dataframe = session.create_dataframe(\n    [[50, 25, \"Q1\"], [20, 35, \"Q2\"], [hifives_val, 30, \"Q3\"]],\n    schema=[\"HIGH_FIVES\", \"FIST_BUMPS\", \"QUARTER\"],\n)\n\n# Execute the query and convert it into a Pandas dataframe\nqueried_data = created_dataframe.to_pandas()\n\n# Create a simple bar chart\n# See docs.streamlit.io for more types of charts\nst.subheader(\"Number of high-fives\")\nst.bar_chart(data=queried_data, x=\"QUARTER\", y=\"HIGH_FIVES\")\n\nst.subheader(\"Underlying data\")\nst.dataframe(queried_data, use_container_width=True)\n' call PYTHON_WORKSHEET();", "state": "FAILED_NORMAL", "statesDuration": "[850,0,2,0,0,0,1,45708,0,0,0,0,6,0,0,0,0,0,3,4,0,1577,0,0,0]", "stats": {"compilationTime": 850, "gsExecTime": 2, "ioLocalTempWriteBytes": 86148, "ioRemoteExternalWriteBytes": 37756365, "localDop": 1, "scheduleTime": 1, "warehouseSize": 1, "xpExecTime": 45708}, "status": "FAILED_WITH_ERROR", "totalDuration": 48151, "warehouseExternalSize": "X-Small", "warehouseName": "COMPUTE_WH"}, "pid": "OQAyRdfc1y", "name": "2024-03-15 7:36pm", "orgId": "202346043869", "ownerId": "505987850600", "folderId": null, "visibility": "private", "layout": {"explorer": {"topHeight": 0, "mode": "CUSTOM"}, "pinned": {"topHeight": 0, "mode": "CUSTOM"}, "results": {"topHeight": 308, "mode": "CUSTOM"}, "schema": {"topHeight": 308, "mode": "CUSTOM"}, "visualization": {"topHeight": 308, "mode": "CUSTOM"}}, "modified": "2024-03-15T14:38:30.035003Z", "version": 3, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "", "database": "", "schema": "", "secondaryRoles": "NONE"}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/wOQAyRdfc1y#query", "slug": "wOQAyRdfc1y", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}, "YRpdV0ju00": {"snowflakeRequestId": null, "snowflakeQueryId": "", "query": "/* Tutorial 2:  Sample queries on TPC-DS\n\nPrerequisites\nThis tutorial requires the Snowflake provided\nsnowflake_sample_data database.  If you don't\nhave this database already in your account \nplease add it by following these instructions:\nhttps://docs.snowflake.net/manuals/user-guide/sample-data-using.html\n\nDetails on the queries and dataset can be found \nin the TPC-DS Benchmark specification at \nhttp://www.tpc.org/tpc_documents_current_versions/pdf/tpc-ds_v2.5.0.pdf\n\nThe business questions answered by these queries are\ndescribed in Appendix B: Business Questions\n\nTPC also provides tools to generate all 99 \nqueries with varied parameter values.  The full \nbenchmark kit can be downloaded at\nhttp://www.tpc.org/tpc_documents_current_versions/current_specifications.asp\n\nThis is a sample set of the 99 queries \nused in the TPC-DS benchmark.  \n*/\n\nuse schema snowflake_sample_data.tpcds_sf10tcl;\n\n-- TPC-DS_query1\nwith customer_total_return as\n(select sr_customer_sk as ctr_customer_sk\n,sr_store_sk as ctr_store_sk\n,sum(SR_RETURN_AMT_INC_TAX) as ctr_total_return\nfrom store_returns\n,date_dim\nwhere sr_returned_date_sk = d_date_sk\nand d_year =1999\ngroup by sr_customer_sk\n,sr_store_sk)\n select  c_customer_id\nfrom customer_total_return ctr1\n,store\n,customer\nwhere ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2\nfrom customer_total_return ctr2\nwhere ctr1.ctr_store_sk = ctr2.ctr_store_sk)\nand s_store_sk = ctr1.ctr_store_sk\nand s_state = 'NM'\nand ctr1.ctr_customer_sk = c_customer_sk\norder by c_customer_id\nlimit 100;\n\n-- TPC-DS_query2\nwith wscs as\n (select sold_date_sk\n        ,sales_price\n  from  (select ws_sold_date_sk sold_date_sk\n              ,ws_ext_sales_price sales_price\n        from web_sales \n        union all\n        select cs_sold_date_sk sold_date_sk\n              ,cs_ext_sales_price sales_price\n        from catalog_sales) x ),\n wswscs as \n (select d_week_seq,\n        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,\n        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,\n        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,\n        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,\n        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,\n        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,\n        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales\n from wscs\n     ,date_dim\n where d_date_sk = sold_date_sk\n group by d_week_seq)\n select d_week_seq1\n       ,round(sun_sales1/sun_sales2,2)\n       ,round(mon_sales1/mon_sales2,2)\n       ,round(tue_sales1/tue_sales2,2)\n       ,round(wed_sales1/wed_sales2,2)\n       ,round(thu_sales1/thu_sales2,2)\n       ,round(fri_sales1/fri_sales2,2)\n       ,round(sat_sales1/sat_sales2,2)\n from\n (select wswscs.d_week_seq d_week_seq1\n        ,sun_sales sun_sales1\n        ,mon_sales mon_sales1\n        ,tue_sales tue_sales1\n        ,wed_sales wed_sales1\n        ,thu_sales thu_sales1\n        ,fri_sales fri_sales1\n        ,sat_sales sat_sales1\n  from wswscs,date_dim \n  where date_dim.d_week_seq = wswscs.d_week_seq and\n        d_year = 1999) y,\n (select wswscs.d_week_seq d_week_seq2\n        ,sun_sales sun_sales2\n        ,mon_sales mon_sales2\n        ,tue_sales tue_sales2\n        ,wed_sales wed_sales2\n        ,thu_sales thu_sales2\n        ,fri_sales fri_sales2\n        ,sat_sales sat_sales2\n  from wswscs\n      ,date_dim \n  where date_dim.d_week_seq = wswscs.d_week_seq and\n        d_year = 1999+1) z\n where d_week_seq1=d_week_seq2-53\n order by d_week_seq1;\n\n-- TPC-DS_query3\nselect  dt.d_year \n       ,item.i_brand_id brand_id \n       ,item.i_brand brand\n       ,sum(ss_ext_discount_amt) sum_agg\n from  date_dim dt \n      ,store_sales\n      ,item\n where dt.d_date_sk = store_sales.ss_sold_date_sk\n   and store_sales.ss_item_sk = item.i_item_sk\n   and item.i_manufact_id = 540\n   and dt.d_moy=12\n group by dt.d_year\n      ,item.i_brand\n      ,item.i_brand_id\n order by dt.d_year\n         ,sum_agg desc\n         ,brand_id\n limit 100;\n\n-- TPC-DS_query4\nwith year_total as (\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total\n       ,'s' sale_type\n from customer\n     ,store_sales\n     ,date_dim\n where c_customer_sk = ss_customer_sk\n   and ss_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag\n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year\n union all\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total\n       ,'c' sale_type\n from customer\n     ,catalog_sales\n     ,date_dim\n where c_customer_sk = cs_bill_customer_sk\n   and cs_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag\n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year\nunion all\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total\n       ,'w' sale_type\n from customer\n     ,web_sales\n     ,date_dim\n where c_customer_sk = ws_bill_customer_sk\n   and ws_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag\n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year\n         )\n  select  \n                  t_s_secyear.customer_id\n                 ,t_s_secyear.customer_first_name\n                 ,t_s_secyear.customer_last_name\n                 ,t_s_secyear.customer_login\n from year_total t_s_firstyear\n     ,year_total t_s_secyear\n     ,year_total t_c_firstyear\n     ,year_total t_c_secyear\n     ,year_total t_w_firstyear\n     ,year_total t_w_secyear\n where t_s_secyear.customer_id = t_s_firstyear.customer_id\n   and t_s_firstyear.customer_id = t_c_secyear.customer_id\n   and t_s_firstyear.customer_id = t_c_firstyear.customer_id\n   and t_s_firstyear.customer_id = t_w_firstyear.customer_id\n   and t_s_firstyear.customer_id = t_w_secyear.customer_id\n   and t_s_firstyear.sale_type = 's'\n   and t_c_firstyear.sale_type = 'c'\n   and t_w_firstyear.sale_type = 'w'\n   and t_s_secyear.sale_type = 's'\n   and t_c_secyear.sale_type = 'c'\n   and t_w_secyear.sale_type = 'w'\n   and t_s_firstyear.dyear =  1999\n   and t_s_secyear.dyear = 1999+1\n   and t_c_firstyear.dyear =  1999\n   and t_c_secyear.dyear =  1999+1\n   and t_w_firstyear.dyear = 1999\n   and t_w_secyear.dyear = 1999+1\n   and t_s_firstyear.year_total > 0\n   and t_c_firstyear.year_total > 0\n   and t_w_firstyear.year_total > 0\n   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end\n           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end\n   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end\n           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end\n order by t_s_secyear.customer_id\n         ,t_s_secyear.customer_first_name\n         ,t_s_secyear.customer_last_name\n         ,t_s_secyear.customer_login\nlimit 100;\n\n-- TPC-DS_query5\nwith ssr as\n (select s_store_id,\n        sum(sales_price) as sales,\n        sum(profit) as profit,\n        sum(return_amt) as returns,\n        sum(net_loss) as profit_loss\n from\n  ( select  ss_store_sk as store_sk,\n            ss_sold_date_sk  as date_sk,\n            ss_ext_sales_price as sales_price,\n            ss_net_profit as profit,\n            cast(0 as decimal(7,2)) as return_amt,\n            cast(0 as decimal(7,2)) as net_loss\n    from store_sales\n    union all\n    select sr_store_sk as store_sk,\n           sr_returned_date_sk as date_sk,\n           cast(0 as decimal(7,2)) as sales_price,\n           cast(0 as decimal(7,2)) as profit,\n           sr_return_amt as return_amt,\n           sr_net_loss as net_loss\n    from store_returns\n   ) salesreturns,\n     date_dim,\n     store\n where date_sk = d_date_sk\n       and d_date between cast('2002-08-09' as date) \n                  and dateadd(day, 14, cast('2002-08-09' as date))\n       and store_sk = s_store_sk\n group by s_store_id)\n ,\n csr as\n (select cp_catalog_page_id,\n        sum(sales_price) as sales,\n        sum(profit) as profit,\n        sum(return_amt) as returns,\n        sum(net_loss) as profit_loss\n from\n  ( select  cs_catalog_page_sk as page_sk,\n            cs_sold_date_sk  as date_sk,\n            cs_ext_sales_price as sales_price,\n            cs_net_profit as profit,\n            cast(0 as decimal(7,2)) as return_amt,\n            cast(0 as decimal(7,2)) as net_loss\n    from catalog_sales\n    union all\n    select cr_catalog_page_sk as page_sk,\n           cr_returned_date_sk as date_sk,\n           cast(0 as decimal(7,2)) as sales_price,\n           cast(0 as decimal(7,2)) as profit,\n           cr_return_amount as return_amt,\n           cr_net_loss as net_loss\n    from catalog_returns\n   ) salesreturns,\n     date_dim,\n     catalog_page\n where date_sk = d_date_sk\n       and d_date between cast('2002-08-09' as date)\n                  and dateadd(day, 14, cast('2002-08-09' as date))\n       and page_sk = cp_catalog_page_sk\n group by cp_catalog_page_id)\n ,\n wsr as\n (select web_site_id,\n        sum(sales_price) as sales,\n        sum(profit) as profit,\n        sum(return_amt) as returns,\n        sum(net_loss) as profit_loss\n from\n  ( select  ws_web_site_sk as wsr_web_site_sk,\n            ws_sold_date_sk  as date_sk,\n            ws_ext_sales_price as sales_price,\n            ws_net_profit as profit,\n            cast(0 as decimal(7,2)) as return_amt,\n            cast(0 as decimal(7,2)) as net_loss\n    from web_sales\n    union all\n    select ws_web_site_sk as wsr_web_site_sk,\n           wr_returned_date_sk as date_sk,\n           cast(0 as decimal(7,2)) as sales_price,\n           cast(0 as decimal(7,2)) as profit,\n           wr_return_amt as return_amt,\n           wr_net_loss as net_loss\n    from web_returns left outer join web_sales on\n         ( wr_item_sk = ws_item_sk\n           and wr_order_number = ws_order_number)\n   ) salesreturns,\n     date_dim,\n     web_site\n where date_sk = d_date_sk\n       and d_date between cast('2002-08-09' as date)\n                  and dateadd(day, 14, cast('2002-08-09' as date))\n       and wsr_web_site_sk = web_site_sk\n group by web_site_id)\n  select  channel\n        , id\n        , sum(sales) as sales\n        , sum(returns) as returns\n        , sum(profit) as profit\n from \n (select 'store channel' as channel\n        , 'store' || s_store_id as id\n        , sales\n        , returns\n        , (profit - profit_loss) as profit\n from   ssr\n union all\n select 'catalog channel' as channel\n        , 'catalog_page' || cp_catalog_page_id as id\n        , sales\n        , returns\n        , (profit - profit_loss) as profit\n from  csr\n union all\n select 'web channel' as channel\n        , 'web_site' || web_site_id as id\n        , sales\n        , returns\n        , (profit - profit_loss) as profit\n from   wsr\n ) x\n group by rollup (channel, id)\n order by channel\n         ,id\n limit 100;\n\n-- TPC-DS_query6\nselect  a.ca_state state, count(*) cnt\n from customer_address a\n     ,customer c\n     ,store_sales s\n     ,date_dim d\n     ,item i\n where       a.ca_address_sk = c.c_current_addr_sk\n \tand c.c_customer_sk = s.ss_customer_sk\n \tand s.ss_sold_date_sk = d.d_date_sk\n \tand s.ss_item_sk = i.i_item_sk\n \tand d.d_month_seq = \n \t     (select distinct (d_month_seq)\n \t      from date_dim\n               where d_year = 2002\n \t        and d_moy = 7 )\n \tand i.i_current_price > 1.2 * \n             (select avg(j.i_current_price) \n \t     from item j \n \t     where j.i_category = i.i_category)\n group by a.ca_state\n having count(*) >= 10\n order by cnt, a.ca_state \n limit 100;\n\n-- TPC-DS_query7\nselect  i_item_id, \n        avg(ss_quantity) agg1,\n        avg(ss_list_price) agg2,\n        avg(ss_coupon_amt) agg3,\n        avg(ss_sales_price) agg4 \n from store_sales, customer_demographics, date_dim, item, promotion\n where ss_sold_date_sk = d_date_sk and\n       ss_item_sk = i_item_sk and\n       ss_cdemo_sk = cd_demo_sk and\n       ss_promo_sk = p_promo_sk and\n       cd_gender = 'M' and \n       cd_marital_status = 'M' and\n       cd_education_status = '4 yr Degree' and\n       (p_channel_email = 'N' or p_channel_event = 'N') and\n       d_year = 2001 \n group by i_item_id\n order by i_item_id\n limit 100;\n\n-- TPC-DS_query8\nselect  s_store_name\n      ,sum(ss_net_profit)\n from store_sales\n     ,date_dim\n     ,store,\n     (select ca_zip\n     from (\n      SELECT substr(ca_zip,1,5) ca_zip\n      FROM customer_address\n      WHERE substr(ca_zip,1,5) IN (\n                          '10338','56623','51423','26456','19500','65832',\n                          '17178','68879','49935','49849','93956',\n                          '71765','45100','50587','68389','41899',\n                          '98316','56217','94686','59350','32857',\n                          '14925','31266','37817','27519','20787',\n                          '26967','49045','39397','32010','23144',\n                          '53580','15491','74151','18442','51916',\n                          '17730','22824','28290','21657','45460',\n                          '39386','21133','35017','19894','21759',\n                          '79293','86733','76777','41688','13810',\n                          '49053','17992','13395','19869','40785',\n                          '63897','65049','27388','94701','41482',\n                          '97923','23951','88284','61718','94317',\n                          '72294','63544','31306','41242','28830',\n                          '75535','86189','88177','16147','12902',\n                          '48271','54036','20936','27802','96741',\n                          '70286','75710','16034','90285','22058',\n                          '52590','40584','62441','64039','68999',\n                          '64327','33844','52497','88495','25989',\n                          '67814','13767','83194','99395','35524',\n                          '89640','48834','51875','71073','25383',\n                          '19129','57805','47962','61905','19557',\n                          '74159','98032','13917','50936','47993',\n                          '41606','17592','11470','28216','19732',\n                          '97958','60997','85688','96863','16605',\n                          '10898','31340','71340','72902','98949',\n                          '74440','53057','30323','76166','27195',\n                          '11204','32771','38189','83221','22295',\n                          '15325','20844','65549','69207','71903',\n                          '63929','56922','25733','75482','14986',\n                          '79223','73692','98769','70275','33793',\n                          '13057','30142','95737','30072','32097',\n                          '25845','50282','19289','92221','59533',\n                          '37375','29706','48186','22385','55809',\n                          '17416','10592','55385','71829','91975',\n                          '73557','38036','10448','95252','51386',\n                          '14190','15247','39907','79438','78053',\n                          '66623','27720','84139','74147','58637',\n                          '11434','36573','10081','53536','41724',\n                          '97898','36752','50384','87352','35696',\n                          '69486','50026','27837','42592','58865',\n                          '80523','53682','65423','77611','98529',\n                          '13909','13727','52190','36152','48355',\n                          '62496','16527','18143','98830','75198',\n                          '73043','64043','63042','67797','50656',\n                          '27700','60687','57905','94404','15733',\n                          '80809','74562','84493','67977','11213',\n                          '19125','84496','16435','97510','46040',\n                          '33968','20256','42332','16480','54277',\n                          '82819','93799','69101','57689','42821',\n                          '68073','49342','46915','25825','92332',\n                          '20219','96577','49463','19221','35814',\n                          '64783','97303','52061','24357','58167',\n                          '56286','64474','99847','53626','39703',\n                          '24880','24365','50652','29611','90638',\n                          '59246','27171','30483','11708','38630',\n                          '81914','48269','11720','88662','68844',\n                          '54838','93795','38102','33481','97546',\n                          '49306','97216','49032','14270','72418',\n                          '32540','53208','15588','29990','10407',\n                          '92334','48543','51495','77996','53686',\n                          '14827','30978','30482','86296','48869',\n                          '59600','29495','24775','34645','19763',\n                          '98602','20456','10468','13887','65714',\n                          '74740','37096','96240','44111','54109',\n                          '62693','87874','64295','62027','86027',\n                          '54341','68582','67809','44159','97913',\n                          '79150','38974','64754','73946','20840',\n                          '16138','58939','20428','19890','70842',\n                          '78648','55576','37267','40470','12957',\n                          '57553','53593','34067','22555','79719',\n                          '25809','28496','11083','87624','83622',\n                          '84898','28678','14297','79461','22910',\n                          '87129','49941','64817','93905','39721',\n                          '81837','18753','86432','67821','66080',\n                          '28246','13466','16363','56950','35446',\n                          '58326','11760','33962','28399','45848',\n                          '52560','66894','15169','20988','85925',\n                          '38582','34825','94227','56758','24801',\n                          '14128','14012','35824','49784')\n     intersect\n      select ca_zip\n      from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt\n            FROM customer_address, customer\n            WHERE ca_address_sk = c_current_addr_sk and\n                  c_preferred_cust_flag='Y'\n            group by ca_zip\n            having count(*) > 10)A1)A2) V1\n where ss_store_sk = s_store_sk\n  and ss_sold_date_sk = d_date_sk\n  and d_qoy = 1 and d_year = 2002\n  and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))\n group by s_store_name\n order by s_store_name\n limit 100;\n\n-- TPC-DS_query9\nselect case when (select count(*) \n                  from store_sales \n                  where ss_quantity between 1 and 20) > 177560856\n            then (select avg(ss_ext_discount_amt) \n                  from store_sales \n                  where ss_quantity between 1 and 20) \n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 1 and 20) end bucket1 ,\n       case when (select count(*)\n                  from store_sales\n                  where ss_quantity between 21 and 40) > 165030289\n            then (select avg(ss_ext_discount_amt)\n                  from store_sales\n                  where ss_quantity between 21 and 40) \n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 21 and 40) end bucket2,\n       case when (select count(*)\n                  from store_sales\n                  where ss_quantity between 41 and 60) > 357290662\n            then (select avg(ss_ext_discount_amt)\n                  from store_sales\n                  where ss_quantity between 41 and 60)\n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 41 and 60) end bucket3,\n       case when (select count(*)\n                  from store_sales\n                  where ss_quantity between 61 and 80) > 205197751\n            then (select avg(ss_ext_discount_amt)\n                  from store_sales\n                  where ss_quantity between 61 and 80)\n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 61 and 80) end bucket4,\n       case when (select count(*)\n                  from store_sales\n                  where ss_quantity between 81 and 100) > 80111186\n            then (select avg(ss_ext_discount_amt)\n                  from store_sales\n                  where ss_quantity between 81 and 100)\n            else (select avg(ss_net_paid_inc_tax)\n                  from store_sales\n                  where ss_quantity between 81 and 100) end bucket5\nfrom reason\nwhere r_reason_sk = 1\n;\n\n-- TPC-DS_query10\nselect  \n  cd_gender,\n  cd_marital_status,\n  cd_education_status,\n  count(*) cnt1,\n  cd_purchase_estimate,\n  count(*) cnt2,\n  cd_credit_rating,\n  count(*) cnt3,\n  cd_dep_count,\n  count(*) cnt4,\n  cd_dep_employed_count,\n  count(*) cnt5,\n  cd_dep_college_count,\n  count(*) cnt6\n from\n  customer c,customer_address ca,customer_demographics\n where\n  c.c_current_addr_sk = ca.ca_address_sk and\n  ca_county in ('Polk County','Denton County','Union County','Swisher County','Cherokee County') and\n  cd_demo_sk = c.c_current_cdemo_sk and \n  exists (select *\n          from store_sales,date_dim\n          where c.c_customer_sk = ss_customer_sk and\n                ss_sold_date_sk = d_date_sk and\n                d_year = 2002 and\n                d_moy between 3 and 3+3) and\n   (exists (select *\n            from web_sales,date_dim\n            where c.c_customer_sk = ws_bill_customer_sk and\n                  ws_sold_date_sk = d_date_sk and\n                  d_year = 2002 and\n                  d_moy between 3 ANd 3+3) or \n    exists (select * \n            from catalog_sales,date_dim\n            where c.c_customer_sk = cs_ship_customer_sk and\n                  cs_sold_date_sk = d_date_sk and\n                  d_year = 2002 and\n                  d_moy between 3 and 3+3))\n group by cd_gender,\n          cd_marital_status,\n          cd_education_status,\n          cd_purchase_estimate,\n          cd_credit_rating,\n          cd_dep_count,\n          cd_dep_employed_count,\n          cd_dep_college_count\n order by cd_gender,\n          cd_marital_status,\n          cd_education_status,\n          cd_purchase_estimate,\n          cd_credit_rating,\n          cd_dep_count,\n          cd_dep_employed_count,\n          cd_dep_college_count\nlimit 100;\n\n-- TPC-DS_query11\nwith year_total as (\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum(ss_ext_list_price-ss_ext_discount_amt) year_total\n       ,'s' sale_type\n from customer\n     ,store_sales\n     ,date_dim\n where c_customer_sk = ss_customer_sk\n   and ss_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag \n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year \n union all\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,c_preferred_cust_flag customer_preferred_cust_flag\n       ,c_birth_country customer_birth_country\n       ,c_login customer_login\n       ,c_email_address customer_email_address\n       ,d_year dyear\n       ,sum(ws_ext_list_price-ws_ext_discount_amt) year_total\n       ,'w' sale_type\n from customer\n     ,web_sales\n     ,date_dim\n where c_customer_sk = ws_bill_customer_sk\n   and ws_sold_date_sk = d_date_sk\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,c_preferred_cust_flag \n         ,c_birth_country\n         ,c_login\n         ,c_email_address\n         ,d_year\n         )\n  select  \n                  t_s_secyear.customer_id\n                 ,t_s_secyear.customer_first_name\n                 ,t_s_secyear.customer_last_name\n                 ,t_s_secyear.customer_login\n from year_total t_s_firstyear\n     ,year_total t_s_secyear\n     ,year_total t_w_firstyear\n     ,year_total t_w_secyear\n where t_s_secyear.customer_id = t_s_firstyear.customer_id\n         and t_s_firstyear.customer_id = t_w_secyear.customer_id\n         and t_s_firstyear.customer_id = t_w_firstyear.customer_id\n         and t_s_firstyear.sale_type = 's'\n         and t_w_firstyear.sale_type = 'w'\n         and t_s_secyear.sale_type = 's'\n         and t_w_secyear.sale_type = 'w'\n         and t_s_firstyear.dyear = 1999\n         and t_s_secyear.dyear = 1999+1\n         and t_w_firstyear.dyear = 1999\n         and t_w_secyear.dyear = 1999+1\n         and t_s_firstyear.year_total > 0\n         and t_w_firstyear.year_total > 0\n         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else 0.0 end\n             > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else 0.0 end\n order by t_s_secyear.customer_id\n         ,t_s_secyear.customer_first_name\n         ,t_s_secyear.customer_last_name\n         ,t_s_secyear.customer_login\nlimit 100;\n\n-- TPC-DS_query12\nselect  i_item_id\n      ,i_item_desc \n      ,i_category \n      ,i_class \n      ,i_current_price\n      ,sum(ws_ext_sales_price) as itemrevenue \n      ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over\n          (partition by i_class) as revenueratio\nfrom\t\n\tweb_sales\n    \t,item \n    \t,date_dim\nwhere \n\tws_item_sk = i_item_sk \n  \tand i_category in ('Shoes', 'Children', 'Electronics')\n  \tand ws_sold_date_sk = d_date_sk\n\tand d_date between cast('2002-04-12' as date) \n\t\t\t\tand dateadd(day,30,to_date('2002-04-12'))\ngroup by \n\ti_item_id\n        ,i_item_desc \n        ,i_category\n        ,i_class\n        ,i_current_price\norder by \n\ti_category\n        ,i_class\n        ,i_item_id\n        ,i_item_desc\n        ,revenueratio\nlimit 100;\n\n-- TPC-DS_query13\nselect avg(ss_quantity)\n       ,avg(ss_ext_sales_price)\n       ,avg(ss_ext_wholesale_cost)\n       ,sum(ss_ext_wholesale_cost)\n from store_sales\n     ,store\n     ,customer_demographics\n     ,household_demographics\n     ,customer_address\n     ,date_dim\n where s_store_sk = ss_store_sk\n and  ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n  and cd_demo_sk = ss_cdemo_sk\n  and cd_marital_status = 'D'\n  and cd_education_status = '2 yr Degree'\n  and ss_sales_price between 100.00 and 150.00\n  and hd_dep_count = 3   \n     )or\n     (ss_hdemo_sk=hd_demo_sk\n  and cd_demo_sk = ss_cdemo_sk\n  and cd_marital_status = 'U'\n  and cd_education_status = 'Primary'\n  and ss_sales_price between 50.00 and 100.00   \n  and hd_dep_count = 1\n     ) or \n     (ss_hdemo_sk=hd_demo_sk\n  and cd_demo_sk = ss_cdemo_sk\n  and cd_marital_status = 'W'\n  and cd_education_status = 'Secondary'\n  and ss_sales_price between 150.00 and 200.00 \n  and hd_dep_count = 1  \n     ))\n and((ss_addr_sk = ca_address_sk\n  and ca_country = 'United States'\n  and ca_state in ('MI', 'MN', 'NC')\n  and ss_net_profit between 100 and 200  \n     ) or\n     (ss_addr_sk = ca_address_sk\n  and ca_country = 'United States'\n  and ca_state in ('GA', 'OH', 'MT')\n  and ss_net_profit between 150 and 300  \n     ) or\n     (ss_addr_sk = ca_address_sk\n  and ca_country = 'United States'\n  and ca_state in ('MS', 'AK', 'OK')\n  and ss_net_profit between 50 and 250  \n     ))\n;\n\n-- TPC-DS_query14\nwith  cross_items as\n (select i_item_sk ss_item_sk\n from item,\n (select iss.i_brand_id brand_id\n     ,iss.i_class_id class_id\n     ,iss.i_category_id category_id\n from store_sales\n     ,item iss\n     ,date_dim d1\n where ss_item_sk = iss.i_item_sk\n   and ss_sold_date_sk = d1.d_date_sk\n   and d1.d_year between 1998 AND 1998 + 2\n intersect \n select ics.i_brand_id\n     ,ics.i_class_id\n     ,ics.i_category_id\n from catalog_sales\n     ,item ics\n     ,date_dim d2\n where cs_item_sk = ics.i_item_sk\n   and cs_sold_date_sk = d2.d_date_sk\n   and d2.d_year between 1998 AND 1998 + 2\n intersect\n select iws.i_brand_id\n     ,iws.i_class_id\n     ,iws.i_category_id\n from web_sales\n     ,item iws\n     ,date_dim d3\n where ws_item_sk = iws.i_item_sk\n   and ws_sold_date_sk = d3.d_date_sk\n   and d3.d_year between 1998 AND 1998 + 2)\n where i_brand_id = brand_id\n      and i_class_id = class_id\n      and i_category_id = category_id\n),\n avg_sales as\n (select avg(quantity*list_price) average_sales\n  from (select ss_quantity quantity\n             ,ss_list_price list_price\n       from store_sales\n           ,date_dim\n       where ss_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2\n       union all \n       select cs_quantity quantity \n             ,cs_list_price list_price\n       from catalog_sales\n           ,date_dim\n       where cs_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2 \n       union all\n       select ws_quantity quantity\n             ,ws_list_price list_price\n       from web_sales\n           ,date_dim\n       where ws_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2) x)\n  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)\n from(\n       select 'store' channel, i_brand_id,i_class_id\n             ,i_category_id,sum(ss_quantity*ss_list_price) sales\n             , count(*) number_sales\n       from store_sales\n           ,item\n           ,date_dim\n       where ss_item_sk in (select ss_item_sk from cross_items)\n         and ss_item_sk = i_item_sk\n         and ss_sold_date_sk = d_date_sk\n         and d_year = 1998+2 \n         and d_moy = 11\n       group by i_brand_id,i_class_id,i_category_id\n       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)\n       union all\n       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales\n       from catalog_sales\n           ,item\n           ,date_dim\n       where cs_item_sk in (select ss_item_sk from cross_items)\n         and cs_item_sk = i_item_sk\n         and cs_sold_date_sk = d_date_sk\n         and d_year = 1998+2 \n         and d_moy = 11\n       group by i_brand_id,i_class_id,i_category_id\n       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)\n       union all\n       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales\n       from web_sales\n           ,item\n           ,date_dim\n       where ws_item_sk in (select ss_item_sk from cross_items)\n         and ws_item_sk = i_item_sk\n         and ws_sold_date_sk = d_date_sk\n         and d_year = 1998+2\n         and d_moy = 11\n       group by i_brand_id,i_class_id,i_category_id\n       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)\n ) y\n group by rollup (channel, i_brand_id,i_class_id,i_category_id)\n order by channel,i_brand_id,i_class_id,i_category_id\n limit 100;\n\n-- TPC-DS_query14P2\n with  cross_items as\n (select i_item_sk ss_item_sk\n from item,\n (select iss.i_brand_id brand_id\n     ,iss.i_class_id class_id\n     ,iss.i_category_id category_id\n from store_sales\n     ,item iss\n     ,date_dim d1\n where ss_item_sk = iss.i_item_sk\n   and ss_sold_date_sk = d1.d_date_sk\n   and d1.d_year between 1998 AND 1998 + 2\n intersect\n select ics.i_brand_id\n     ,ics.i_class_id\n     ,ics.i_category_id\n from catalog_sales\n     ,item ics\n     ,date_dim d2\n where cs_item_sk = ics.i_item_sk\n   and cs_sold_date_sk = d2.d_date_sk\n   and d2.d_year between 1998 AND 1998 + 2\n intersect\n select iws.i_brand_id\n     ,iws.i_class_id\n     ,iws.i_category_id\n from web_sales\n     ,item iws\n     ,date_dim d3\n where ws_item_sk = iws.i_item_sk\n   and ws_sold_date_sk = d3.d_date_sk\n   and d3.d_year between 1998 AND 1998 + 2) x\n where i_brand_id = brand_id\n      and i_class_id = class_id\n      and i_category_id = category_id\n),\n avg_sales as\n(select avg(quantity*list_price) average_sales\n  from (select ss_quantity quantity\n             ,ss_list_price list_price\n       from store_sales\n           ,date_dim\n       where ss_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2\n       union all\n       select cs_quantity quantity\n             ,cs_list_price list_price\n       from catalog_sales\n           ,date_dim\n       where cs_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2\n       union all\n       select ws_quantity quantity\n             ,ws_list_price list_price\n       from web_sales\n           ,date_dim\n       where ws_sold_date_sk = d_date_sk\n         and d_year between 1998 and 1998 + 2) x)\n  select  this_year.channel ty_channel\n                           ,this_year.i_brand_id ty_brand\n                           ,this_year.i_class_id ty_class\n                           ,this_year.i_category_id ty_category\n                           ,this_year.sales ty_sales\n                           ,this_year.number_sales ty_number_sales\n                           ,last_year.channel ly_channel\n                           ,last_year.i_brand_id ly_brand\n                           ,last_year.i_class_id ly_class\n                           ,last_year.i_category_id ly_category\n                           ,last_year.sales ly_sales\n                           ,last_year.number_sales ly_number_sales \n from\n (select 'store' channel, i_brand_id,i_class_id,i_category_id\n        ,sum(ss_quantity*ss_list_price) sales, count(*) number_sales\n from store_sales \n     ,item\n     ,date_dim\n where ss_item_sk in (select ss_item_sk from cross_items)\n   and ss_item_sk = i_item_sk\n   and ss_sold_date_sk = d_date_sk\n   and d_week_seq = (select d_week_seq\n                     from date_dim\n                     where d_year = 1998 + 1\n                       and d_moy = 12\n                       and d_dom = 28)\n group by i_brand_id,i_class_id,i_category_id\n having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) this_year,\n (select 'store' channel, i_brand_id,i_class_id\n        ,i_category_id, sum(ss_quantity*ss_list_price) sales, count(*) number_sales\n from store_sales\n     ,item\n     ,date_dim\n where ss_item_sk in (select ss_item_sk from cross_items)\n   and ss_item_sk = i_item_sk\n   and ss_sold_date_sk = d_date_sk\n   and d_week_seq = (select d_week_seq\n                     from date_dim\n                     where d_year = 1998\n                       and d_moy = 12\n                       and d_dom = 28)\n group by i_brand_id,i_class_id,i_category_id\n having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) last_year\n where this_year.i_brand_id= last_year.i_brand_id\n   and this_year.i_class_id = last_year.i_class_id\n   and this_year.i_category_id = last_year.i_category_id\n order by this_year.channel, this_year.i_brand_id, this_year.i_class_id, this_year.i_category_id\n limit 100;\n\n-- TPC-DS_query15\nselect  ca_zip\n       ,sum(cs_sales_price)\n from catalog_sales\n     ,customer\n     ,customer_address\n     ,date_dim\n where cs_bill_customer_sk = c_customer_sk\n \tand c_current_addr_sk = ca_address_sk \n \tand ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',\n                                   '85392', '85460', '80348', '81792')\n \t      or ca_state in ('CA','WA','GA')\n \t      or cs_sales_price > 500)\n \tand cs_sold_date_sk = d_date_sk\n \tand d_qoy = 2 and d_year = 2000\n group by ca_zip\n order by ca_zip\n limit 100;\n\n-- TPC-DS_query16\nselect  \n   count(distinct cs_order_number) as \"order count\"\n  ,sum(cs_ext_ship_cost) as \"total shipping cost\"\n  ,sum(cs_net_profit) as \"total net profit\"\nfrom\n   catalog_sales cs1\n  ,date_dim\n  ,customer_address\n  ,call_center\nwhere\n    d_date between '2000-3-01' and \n           dateadd(day,60,to_date('2000-3-01'))\nand cs1.cs_ship_date_sk = d_date_sk\nand cs1.cs_ship_addr_sk = ca_address_sk\nand ca_state = 'AL'\nand cs1.cs_call_center_sk = cc_call_center_sk\nand cc_county in ('Luce County','Ziebach County','San Miguel County','Dauphin County',\n                  'Marshall County'\n)\nand exists (select *\n            from catalog_sales cs2\n            where cs1.cs_order_number = cs2.cs_order_number\n              and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk)\nand not exists(select *\n               from catalog_returns cr1\n               where cs1.cs_order_number = cr1.cr_order_number)\norder by count(distinct cs_order_number)\nlimit 100;\n\n-- TPC-DS_query17\nselect  i_item_id\n       ,i_item_desc\n       ,s_state\n       ,count(ss_quantity) as store_sales_quantitycount\n       ,avg(ss_quantity) as store_sales_quantityave\n       ,stddev_samp(ss_quantity) as store_sales_quantitystdev\n       ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov\n       ,count(sr_return_quantity) as store_returns_quantitycount\n       ,avg(sr_return_quantity) as store_returns_quantityave\n       ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev\n       ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov\n       ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave\n       ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev\n       ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov\n from store_sales\n     ,store_returns\n     ,catalog_sales\n     ,date_dim d1\n     ,date_dim d2\n     ,date_dim d3\n     ,store\n     ,item\n where d1.d_quarter_name = '1999Q1'\n   and d1.d_date_sk = ss_sold_date_sk\n   and i_item_sk = ss_item_sk\n   and s_store_sk = ss_store_sk\n   and ss_customer_sk = sr_customer_sk\n   and ss_item_sk = sr_item_sk\n   and ss_ticket_number = sr_ticket_number\n   and sr_returned_date_sk = d2.d_date_sk\n   and d2.d_quarter_name in ('1999Q1','1999Q2','1999Q3')\n   and sr_customer_sk = cs_bill_customer_sk\n   and sr_item_sk = cs_item_sk\n   and cs_sold_date_sk = d3.d_date_sk\n   and d3.d_quarter_name in ('1999Q1','1999Q2','1999Q3')\n group by i_item_id\n         ,i_item_desc\n         ,s_state\n order by i_item_id\n         ,i_item_desc\n         ,s_state\nlimit 100;\n\n-- TPC-DS_query18\nselect  i_item_id,\n        ca_country,\n        ca_state, \n        ca_county,\n        avg( cast(cs_quantity as decimal(12,2))) agg1,\n        avg( cast(cs_list_price as decimal(12,2))) agg2,\n        avg( cast(cs_coupon_amt as decimal(12,2))) agg3,\n        avg( cast(cs_sales_price as decimal(12,2))) agg4,\n        avg( cast(cs_net_profit as decimal(12,2))) agg5,\n        avg( cast(c_birth_year as decimal(12,2))) agg6,\n        avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7\n from catalog_sales, customer_demographics cd1, \n      customer_demographics cd2, customer, customer_address, date_dim, item\n where cs_sold_date_sk = d_date_sk and\n       cs_item_sk = i_item_sk and\n       cs_bill_cdemo_sk = cd1.cd_demo_sk and\n       cs_bill_customer_sk = c_customer_sk and\n       cd1.cd_gender = 'F' and \n       cd1.cd_education_status = 'Secondary' and\n       c_current_cdemo_sk = cd2.cd_demo_sk and\n       c_current_addr_sk = ca_address_sk and\n       c_birth_month in (1,9,11,4,12,6) and\n       d_year = 1998 and\n       ca_state in ('IL','WA','KY'\n                   ,'ND','VT','NC','NJ')\n group by rollup (i_item_id, ca_country, ca_state, ca_county)\n order by ca_country,\n        ca_state, \n        ca_county,\n\ti_item_id\n limit 100;\n\n-- TPC-DS_query19\nselect  i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact,\n \tsum(ss_ext_sales_price) ext_price\n from date_dim, store_sales, item,customer,customer_address,store\n where d_date_sk = ss_sold_date_sk\n   and ss_item_sk = i_item_sk\n   and i_manager_id=8\n   and d_moy=11\n   and d_year=1999\n   and ss_customer_sk = c_customer_sk \n   and c_current_addr_sk = ca_address_sk\n   and substr(ca_zip,1,5) <> substr(s_zip,1,5) \n   and ss_store_sk = s_store_sk \n group by i_brand\n      ,i_brand_id\n      ,i_manufact_id\n      ,i_manufact\n order by ext_price desc\n         ,i_brand\n         ,i_brand_id\n         ,i_manufact_id\n         ,i_manufact\nlimit 100 ;\n\n-- TPC-DS_query20\nselect  i_item_id\n       ,i_item_desc \n       ,i_category \n       ,i_class \n       ,i_current_price\n       ,sum(cs_ext_sales_price) as itemrevenue \n       ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over\n           (partition by i_class) as revenueratio\n from catalog_sales\n     ,item \n     ,date_dim\n where cs_item_sk = i_item_sk \n   and i_category in ('Men', 'Electronics', 'Music')\n   and cs_sold_date_sk = d_date_sk\n and d_date between cast('2001-03-09' as date) \n \t and dateadd(day,30,to_date('2001-03-09'))\n group by i_item_id\n         ,i_item_desc \n         ,i_category\n         ,i_class\n         ,i_current_price\n order by i_category\n         ,i_class\n         ,i_item_id\n         ,i_item_desc\n         ,revenueratio\nlimit 100;\n\n-- TPC-DS_query21\nselect  *\n from(select w_warehouse_name\n            ,i_item_id\n            ,sum(case when (cast(d_date as date) < cast ('2000-05-19' as date))\n\t                then inv_quantity_on_hand \n                      else 0 end) as inv_before\n            ,sum(case when (cast(d_date as date) >= cast ('2000-05-19' as date))\n                      then inv_quantity_on_hand \n                      else 0 end) as inv_after\n   from inventory\n       ,warehouse\n       ,item\n       ,date_dim\n   where i_current_price between 0.99 and 1.49\n     and i_item_sk          = inv_item_sk\n     and inv_warehouse_sk   = w_warehouse_sk\n     and inv_date_sk    = d_date_sk\n     and d_date between dateadd(day,-30,to_date('2000-05-19'))\n     and dateadd(day,30,to_date('2000-05-19'))\n   group by w_warehouse_name, i_item_id) x\n where (case when inv_before > 0 \n             then inv_after / inv_before \n             else null\n             end) between 2.0/3.0 and 3.0/2.0\n order by w_warehouse_name\n         ,i_item_id\n limit 100;\n\n-- TPC-DS_query22\nselect  i_product_name\n             ,i_brand\n             ,i_class\n             ,i_category\n             ,avg(inv_quantity_on_hand) qoh\n       from inventory\n           ,date_dim\n           ,item\n       where inv_date_sk=d_date_sk\n              and inv_item_sk=i_item_sk\n              and d_month_seq between 1190 and 1190 + 11\n       group by rollup(i_product_name\n                       ,i_brand\n                       ,i_class\n                       ,i_category)\norder by qoh, i_product_name, i_brand, i_class, i_category\nlimit 100;\n\n-- TPC-DS_query23\nwith frequent_ss_items as \n (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt\n  from store_sales\n      ,date_dim \n      ,item\n  where ss_sold_date_sk = d_date_sk\n    and ss_item_sk = i_item_sk \n    and d_year in (2000,2000+1,2000+2,2000+3)\n  group by substr(i_item_desc,1,30),i_item_sk,d_date\n  having count(*) >4),\n max_store_sales as\n (select max(csales) tpcds_cmax \n  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales\n        from store_sales\n            ,customer\n            ,date_dim \n        where ss_customer_sk = c_customer_sk\n         and ss_sold_date_sk = d_date_sk\n         and d_year in (2000,2000+1,2000+2,2000+3) \n        group by c_customer_sk)),\n best_ss_customer as\n (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales\n  from store_sales\n      ,customer\n  where ss_customer_sk = c_customer_sk\n  group by c_customer_sk\n  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select\n  *\nfrom\n max_store_sales))\n  select  sum(sales)\n from (select cs_quantity*cs_list_price sales\n       from catalog_sales\n           ,date_dim \n       where d_year = 2000 \n         and d_moy = 2 \n         and cs_sold_date_sk = d_date_sk \n         and cs_item_sk in (select item_sk from frequent_ss_items)\n         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)\n      union all\n      select ws_quantity*ws_list_price sales\n       from web_sales \n           ,date_dim \n       where d_year = 2000 \n         and d_moy = 2 \n         and ws_sold_date_sk = d_date_sk \n         and ws_item_sk in (select item_sk from frequent_ss_items)\n         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)) \n limit 100;\n\n-- TPC-DS_query23P2\n with frequent_ss_items as\n (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt\n  from store_sales\n      ,date_dim\n      ,item\n  where ss_sold_date_sk = d_date_sk\n    and ss_item_sk = i_item_sk\n    and d_year in (2000,2000 + 1,2000 + 2,2000 + 3)\n  group by substr(i_item_desc,1,30),i_item_sk,d_date\n  having count(*) >4),\n max_store_sales as\n (select max(csales) tpcds_cmax\n  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales\n        from store_sales\n            ,customer\n            ,date_dim \n        where ss_customer_sk = c_customer_sk\n         and ss_sold_date_sk = d_date_sk\n         and d_year in (2000,2000+1,2000+2,2000+3)\n        group by c_customer_sk)),\n best_ss_customer as\n (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales\n  from store_sales\n      ,customer\n  where ss_customer_sk = c_customer_sk\n  group by c_customer_sk\n  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select\n  *\n from max_store_sales))\n  select  c_last_name,c_first_name,sales\n from (select c_last_name,c_first_name,sum(cs_quantity*cs_list_price) sales\n        from catalog_sales\n            ,customer\n            ,date_dim \n        where d_year = 2000 \n         and d_moy = 2 \n         and cs_sold_date_sk = d_date_sk \n         and cs_item_sk in (select item_sk from frequent_ss_items)\n         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)\n         and cs_bill_customer_sk = c_customer_sk \n       group by c_last_name,c_first_name\n      union all\n      select c_last_name,c_first_name,sum(ws_quantity*ws_list_price) sales\n       from web_sales\n           ,customer\n           ,date_dim \n       where d_year = 2000 \n         and d_moy = 2 \n         and ws_sold_date_sk = d_date_sk \n         and ws_item_sk in (select item_sk from frequent_ss_items)\n         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)\n         and ws_bill_customer_sk = c_customer_sk\n       group by c_last_name,c_first_name) \n     order by c_last_name,c_first_name,sales\n  limit 100;\n\n-- TPC-DS_query24\nwith ssales as\n(select c_last_name\n      ,c_first_name\n      ,s_store_name\n      ,ca_state\n      ,s_state\n      ,i_color\n      ,i_current_price\n      ,i_manager_id\n      ,i_units\n      ,i_size\n      ,sum(ss_net_paid_inc_tax) netpaid\nfrom store_sales\n    ,store_returns\n    ,store\n    ,item\n    ,customer\n    ,customer_address\nwhere ss_ticket_number = sr_ticket_number\n  and ss_item_sk = sr_item_sk\n  and ss_customer_sk = c_customer_sk\n  and ss_item_sk = i_item_sk\n  and ss_store_sk = s_store_sk\n  and c_current_addr_sk = ca_address_sk\n  and c_birth_country <> upper(ca_country)\n  and s_zip = ca_zip\nand s_market_id=8\ngroup by c_last_name\n        ,c_first_name\n        ,s_store_name\n        ,ca_state\n        ,s_state\n        ,i_color\n        ,i_current_price\n        ,i_manager_id\n        ,i_units\n        ,i_size)\nselect c_last_name\n      ,c_first_name\n      ,s_store_name\n      ,sum(netpaid) paid\nfrom ssales\nwhere i_color = 'cornsilk'\ngroup by c_last_name\n        ,c_first_name\n        ,s_store_name\nhaving sum(netpaid) > (select 0.05*avg(netpaid)\n                                 from ssales)\norder by c_last_name\n        ,c_first_name\n        ,s_store_name\n;\n\n-- TPC-DS_query24P2\nwith ssales as\n(select c_last_name\n      ,c_first_name\n      ,s_store_name\n      ,ca_state\n      ,s_state\n      ,i_color\n      ,i_current_price\n      ,i_manager_id\n      ,i_units\n      ,i_size\n      ,sum(ss_net_paid_inc_tax) netpaid\nfrom store_sales\n    ,store_returns\n    ,store\n    ,item\n    ,customer\n    ,customer_address\nwhere ss_ticket_number = sr_ticket_number\n  and ss_item_sk = sr_item_sk\n  and ss_customer_sk = c_customer_sk\n  and ss_item_sk = i_item_sk\n  and ss_store_sk = s_store_sk\n  and c_current_addr_sk = ca_address_sk\n  and c_birth_country <> upper(ca_country)\n  and s_zip = ca_zip\n  and s_market_id = 8\ngroup by c_last_name\n        ,c_first_name\n        ,s_store_name\n        ,ca_state\n        ,s_state\n        ,i_color\n        ,i_current_price\n        ,i_manager_id\n        ,i_units\n        ,i_size)\nselect c_last_name\n      ,c_first_name\n      ,s_store_name\n      ,sum(netpaid) paid\nfrom ssales\nwhere i_color = 'lime'\ngroup by c_last_name\n        ,c_first_name\n        ,s_store_name\nhaving sum(netpaid) > (select 0.05*avg(netpaid)\n                           from ssales)\norder by c_last_name\n        ,c_first_name\n        ,s_store_name\n;\n\n-- TPC-DS_query25\nselect  \n i_item_id\n ,i_item_desc\n ,s_store_id\n ,s_store_name\n ,min(ss_net_profit) as store_sales_profit\n ,min(sr_net_loss) as store_returns_loss\n ,min(cs_net_profit) as catalog_sales_profit\n from\n store_sales\n ,store_returns\n ,catalog_sales\n ,date_dim d1\n ,date_dim d2\n ,date_dim d3\n ,store\n ,item\n where\n d1.d_moy = 4\n and d1.d_year = 2002\n and d1.d_date_sk = ss_sold_date_sk\n and i_item_sk = ss_item_sk\n and s_store_sk = ss_store_sk\n and ss_customer_sk = sr_customer_sk\n and ss_item_sk = sr_item_sk\n and ss_ticket_number = sr_ticket_number\n and sr_returned_date_sk = d2.d_date_sk\n and d2.d_moy               between 4 and  10\n and d2.d_year              = 2002\n and sr_customer_sk = cs_bill_customer_sk\n and sr_item_sk = cs_item_sk\n and cs_sold_date_sk = d3.d_date_sk\n and d3.d_moy               between 4 and  10 \n and d3.d_year              = 2002\n group by\n i_item_id\n ,i_item_desc\n ,s_store_id\n ,s_store_name\n order by\n i_item_id\n ,i_item_desc\n ,s_store_id\n ,s_store_name\n limit 100;\n\n-- TPC-DS_query26\nselect  i_item_id, \n        avg(cs_quantity) agg1,\n        avg(cs_list_price) agg2,\n        avg(cs_coupon_amt) agg3,\n        avg(cs_sales_price) agg4 \n from catalog_sales, customer_demographics, date_dim, item, promotion\n where cs_sold_date_sk = d_date_sk and\n       cs_item_sk = i_item_sk and\n       cs_bill_cdemo_sk = cd_demo_sk and\n       cs_promo_sk = p_promo_sk and\n       cd_gender = 'M' and \n       cd_marital_status = 'S' and\n       cd_education_status = '4 yr Degree' and\n       (p_channel_email = 'N' or p_channel_event = 'N') and\n       d_year = 1998 \n group by i_item_id\n order by i_item_id\n limit 100;\n\n-- TPC-DS_query27\nselect  i_item_id,\n        s_state, grouping(s_state) g_state,\n        avg(ss_quantity) agg1,\n        avg(ss_list_price) agg2,\n        avg(ss_coupon_amt) agg3,\n        avg(ss_sales_price) agg4\n from store_sales, customer_demographics, date_dim, store, item\n where ss_sold_date_sk = d_date_sk and\n       ss_item_sk = i_item_sk and\n       ss_store_sk = s_store_sk and\n       ss_cdemo_sk = cd_demo_sk and\n       cd_gender = 'F' and\n       cd_marital_status = 'U' and\n       cd_education_status = '2 yr Degree' and\n       d_year = 2000 and\n       s_state in ('SD','OH', 'NM', 'MI', 'TX', 'NM')\n group by rollup (i_item_id, s_state)\n order by i_item_id\n         ,s_state\n limit 100;\n\n-- TPC-DS_query28\nselect  *\nfrom (select avg(ss_list_price) B1_LP\n            ,count(ss_list_price) B1_CNT\n            ,count(distinct ss_list_price) B1_CNTD\n      from store_sales\n      where ss_quantity between 0 and 5\n        and (ss_list_price between 173 and 173+10 \n             or ss_coupon_amt between 12318 and 12318+1000\n             or ss_wholesale_cost between 4 and 4+20)) B1,\n     (select avg(ss_list_price) B2_LP\n            ,count(ss_list_price) B2_CNT\n            ,count(distinct ss_list_price) B2_CNTD\n      from store_sales\n      where ss_quantity between 6 and 10\n        and (ss_list_price between 148 and 148+10\n          or ss_coupon_amt between 15913 and 15913+1000\n          or ss_wholesale_cost between 54 and 54+20)) B2,\n     (select avg(ss_list_price) B3_LP\n            ,count(ss_list_price) B3_CNT\n            ,count(distinct ss_list_price) B3_CNTD\n      from store_sales\n      where ss_quantity between 11 and 15\n        and (ss_list_price between 114 and 114+10\n          or ss_coupon_amt between 10419 and 10419+1000\n          or ss_wholesale_cost between 20 and 20+20)) B3,\n     (select avg(ss_list_price) B4_LP\n            ,count(ss_list_price) B4_CNT\n            ,count(distinct ss_list_price) B4_CNTD\n      from store_sales\n      where ss_quantity between 16 and 20\n        and (ss_list_price between 120 and 120+10\n          or ss_coupon_amt between 13066 and 13066+1000\n          or ss_wholesale_cost between 41 and 41+20)) B4,\n     (select avg(ss_list_price) B5_LP\n            ,count(ss_list_price) B5_CNT\n            ,count(distinct ss_list_price) B5_CNTD\n      from store_sales\n      where ss_quantity between 21 and 25\n        and (ss_list_price between 42 and 42+10\n          or ss_coupon_amt between 5802 and 5802+1000\n          or ss_wholesale_cost between 8 and 8+20)) B5,\n     (select avg(ss_list_price) B6_LP\n            ,count(ss_list_price) B6_CNT\n            ,count(distinct ss_list_price) B6_CNTD\n      from store_sales\n      where ss_quantity between 26 and 30\n        and (ss_list_price between 22 and 22+10\n          or ss_coupon_amt between 281 and 281+1000\n          or ss_wholesale_cost between 48 and 48+20)) B6\nlimit 100;\n\n-- TPC-DS_query29\nselect   \n     i_item_id\n    ,i_item_desc\n    ,s_store_id\n    ,s_store_name\n    ,sum(ss_quantity)        as store_sales_quantity\n    ,sum(sr_return_quantity) as store_returns_quantity\n    ,sum(cs_quantity)        as catalog_sales_quantity\n from\n    store_sales\n   ,store_returns\n   ,catalog_sales\n   ,date_dim             d1\n   ,date_dim             d2\n   ,date_dim             d3\n   ,store\n   ,item\n where\n     d1.d_moy               = 4 \n and d1.d_year              = 2000\n and d1.d_date_sk           = ss_sold_date_sk\n and i_item_sk              = ss_item_sk\n and s_store_sk             = ss_store_sk\n and ss_customer_sk         = sr_customer_sk\n and ss_item_sk             = sr_item_sk\n and ss_ticket_number       = sr_ticket_number\n and sr_returned_date_sk    = d2.d_date_sk\n and d2.d_moy               between 4 and  4 + 3 \n and d2.d_year              = 2000\n and sr_customer_sk         = cs_bill_customer_sk\n and sr_item_sk             = cs_item_sk\n and cs_sold_date_sk        = d3.d_date_sk     \n and d3.d_year              in (2000,2000+1,2000+2)\n group by\n    i_item_id\n   ,i_item_desc\n   ,s_store_id\n   ,s_store_name\n order by\n    i_item_id \n   ,i_item_desc\n   ,s_store_id\n   ,s_store_name\n limit 100;\n\n-- TPC-DS_query30\nwith customer_total_return as\n (select wr_returning_customer_sk as ctr_customer_sk\n        ,ca_state as ctr_state, \n \tsum(wr_return_amt) as ctr_total_return\n from web_returns\n     ,date_dim\n     ,customer_address\n where wr_returned_date_sk = d_date_sk \n   and d_year =2001\n   and wr_returning_addr_sk = ca_address_sk \n group by wr_returning_customer_sk\n         ,ca_state)\n  select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag\n       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address\n       ,c_last_review_date,ctr_total_return\n from customer_total_return ctr1\n     ,customer_address\n     ,customer\n where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2\n \t\t\t  from customer_total_return ctr2 \n                  \t  where ctr1.ctr_state = ctr2.ctr_state)\n       and ca_address_sk = c_current_addr_sk\n       and ca_state = 'MI'\n       and ctr1.ctr_customer_sk = c_customer_sk\n order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag\n                  ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address\n                  ,c_last_review_date,ctr_total_return\nlimit 100;\n\n-- TPC-DS_query31\nwith ss as\n (select ca_county,d_qoy, d_year,sum(ss_ext_sales_price) as store_sales\n from store_sales,date_dim,customer_address\n where ss_sold_date_sk = d_date_sk\n  and ss_addr_sk=ca_address_sk\n group by ca_county,d_qoy, d_year),\n ws as\n (select ca_county,d_qoy, d_year,sum(ws_ext_sales_price) as web_sales\n from web_sales,date_dim,customer_address\n where ws_sold_date_sk = d_date_sk\n  and ws_bill_addr_sk=ca_address_sk\n group by ca_county,d_qoy, d_year)\n select \n        ss1.ca_county\n       ,ss1.d_year\n       ,ws2.web_sales/ws1.web_sales web_q1_q2_increase\n       ,ss2.store_sales/ss1.store_sales store_q1_q2_increase\n       ,ws3.web_sales/ws2.web_sales web_q2_q3_increase\n       ,ss3.store_sales/ss2.store_sales store_q2_q3_increase\n from\n        ss ss1\n       ,ss ss2\n       ,ss ss3\n       ,ws ws1\n       ,ws ws2\n       ,ws ws3\n where\n    ss1.d_qoy = 1\n    and ss1.d_year = 1999\n    and ss1.ca_county = ss2.ca_county\n    and ss2.d_qoy = 2\n    and ss2.d_year = 1999\n and ss2.ca_county = ss3.ca_county\n    and ss3.d_qoy = 3\n    and ss3.d_year = 1999\n    and ss1.ca_county = ws1.ca_county\n    and ws1.d_qoy = 1\n    and ws1.d_year = 1999\n    and ws1.ca_county = ws2.ca_county\n    and ws2.d_qoy = 2\n    and ws2.d_year = 1999\n    and ws1.ca_county = ws3.ca_county\n    and ws3.d_qoy = 3\n    and ws3.d_year =1999\n    and case when ws1.web_sales > 0 then ws2.web_sales/ws1.web_sales else null end \n       > case when ss1.store_sales > 0 then ss2.store_sales/ss1.store_sales else null end\n    and case when ws2.web_sales > 0 then ws3.web_sales/ws2.web_sales else null end\n       > case when ss2.store_sales > 0 then ss3.store_sales/ss2.store_sales else null end\n order by web_q1_q2_increase;\n\n-- TPC-DS_query32\nselect  sum(cs_ext_discount_amt)  as \"excess discount amount\" \nfrom \n   catalog_sales \n   ,item \n   ,date_dim\nwhere\ni_manufact_id = 283\nand i_item_sk = cs_item_sk \nand d_date between '1999-02-22' and \n        dateadd(day,90,to_date('1999-02-22'))\nand d_date_sk = cs_sold_date_sk \nand cs_ext_discount_amt  \n     > ( \n         select \n            1.3 * avg(cs_ext_discount_amt) \n         from \n            catalog_sales \n           ,date_dim\n         where \n              cs_item_sk = i_item_sk \n          and d_date between '1999-02-22' and\n\t\tdateadd(day,90,to_date('1999-02-22'))\n          and d_date_sk = cs_sold_date_sk \n      ) \nlimit 100;\n\n-- TPC-DS_query33\nwith ss as (\n select\n          i_manufact_id,sum(ss_ext_sales_price) total_sales\n from\n \tstore_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_manufact_id in (select\n  i_manufact_id\nfrom\n item\nwhere i_category in ('Electronics'))\n and     ss_item_sk              = i_item_sk\n and     ss_sold_date_sk         = d_date_sk\n and     d_year                  = 1999\n and     d_moy                   = 7\n and     ss_addr_sk              = ca_address_sk\n and     ca_gmt_offset           = -5 \n group by i_manufact_id),\n cs as (\n select\n          i_manufact_id,sum(cs_ext_sales_price) total_sales\n from\n \tcatalog_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_manufact_id               in (select\n  i_manufact_id\nfrom\n item\nwhere i_category in ('Electronics'))\n and     cs_item_sk              = i_item_sk\n and     cs_sold_date_sk         = d_date_sk\n and     d_year                  = 1999\n and     d_moy                   = 7\n and     cs_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -5 \n group by i_manufact_id),\n ws as (\n select\n          i_manufact_id,sum(ws_ext_sales_price) total_sales\n from\n \tweb_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_manufact_id               in (select\n  i_manufact_id\nfrom\n item\nwhere i_category in ('Electronics'))\n and     ws_item_sk              = i_item_sk\n and     ws_sold_date_sk         = d_date_sk\n and     d_year                  = 1999\n and     d_moy                   = 7\n and     ws_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -5\n group by i_manufact_id)\n  select  i_manufact_id ,sum(total_sales) total_sales\n from  (select * from ss \n        union all\n        select * from cs \n        union all\n        select * from ws) tmp1\n group by i_manufact_id\n order by total_sales\nlimit 100;\n\n-- TPC-DS_query34\nselect c_last_name\n       ,c_first_name\n       ,c_salutation\n       ,c_preferred_cust_flag\n       ,ss_ticket_number\n       ,cnt from\n   (select ss_ticket_number\n          ,ss_customer_sk\n          ,count(*) cnt\n    from store_sales,date_dim,store,household_demographics\n    where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n    and store_sales.ss_store_sk = store.s_store_sk  \n    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    and (date_dim.d_dom between 1 and 3 or date_dim.d_dom between 25 and 28)\n    and (household_demographics.hd_buy_potential = '1001-5000' or\n         household_demographics.hd_buy_potential = '0-500')\n    and household_demographics.hd_vehicle_count > 0\n    and (case when household_demographics.hd_vehicle_count > 0 \n\tthen household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count \n\telse null \n\tend)  > 1.2\n    and date_dim.d_year in (1998,1998+1,1998+2)\n    and store.s_county in ('Quay County','Sumner County','Harper County','Pipestone County',\n                           'Kittitas County','Surry County','Wadena County','Richland County')\n    group by ss_ticket_number,ss_customer_sk) dn,customer\n    where ss_customer_sk = c_customer_sk\n      and cnt between 15 and 20\n    order by c_last_name,c_first_name,c_salutation,c_preferred_cust_flag desc, ss_ticket_number;\n\n-- TPC-DS_query35\nselect   \n  ca_state,\n  cd_gender,\n  cd_marital_status,\n  cd_dep_count,\n  count(*) cnt1,\n  stddev_samp(cd_dep_count),\n  max(cd_dep_count),\n  sum(cd_dep_count),\n  cd_dep_employed_count,\n  count(*) cnt2,\n  stddev_samp(cd_dep_employed_count),\n  max(cd_dep_employed_count),\n  sum(cd_dep_employed_count),\n  cd_dep_college_count,\n  count(*) cnt3,\n  stddev_samp(cd_dep_college_count),\n  max(cd_dep_college_count),\n  sum(cd_dep_college_count)\n from\n  customer c,customer_address ca,customer_demographics\n where\n  c.c_current_addr_sk = ca.ca_address_sk and\n  cd_demo_sk = c.c_current_cdemo_sk and \n  exists (select *\n          from store_sales,date_dim\n          where c.c_customer_sk = ss_customer_sk and\n                ss_sold_date_sk = d_date_sk and\n                d_year = 2000 and\n                d_qoy < 4) and\n   (exists (select *\n            from web_sales,date_dim\n            where c.c_customer_sk = ws_bill_customer_sk and\n                  ws_sold_date_sk = d_date_sk and\n                  d_year = 2000 and\n                  d_qoy < 4) or \n    exists (select * \n            from catalog_sales,date_dim\n            where c.c_customer_sk = cs_ship_customer_sk and\n                  cs_sold_date_sk = d_date_sk and\n                  d_year = 2000 and\n                  d_qoy < 4))\n group by ca_state,\n          cd_gender,\n          cd_marital_status,\n          cd_dep_count,\n          cd_dep_employed_count,\n          cd_dep_college_count\n order by ca_state,\n          cd_gender,\n          cd_marital_status,\n          cd_dep_count,\n          cd_dep_employed_count,\n          cd_dep_college_count\n limit 100;\n\n-- TPC-DS_query36\nselect  \n    sum(ss_net_profit)/sum(ss_ext_sales_price) as gross_margin\n   ,i_category\n   ,i_class\n   ,grouping(i_category)+grouping(i_class) as lochierarchy\n   ,rank() over (\n \tpartition by grouping(i_category)+grouping(i_class),\n \tcase when grouping(i_class) = 0 then i_category end \n \torder by sum(ss_net_profit)/sum(ss_ext_sales_price) asc) as rank_within_parent\n from\n    store_sales\n   ,date_dim       d1\n   ,item\n   ,store\n where\n    d1.d_year = 1998 \n and d1.d_date_sk = ss_sold_date_sk\n and i_item_sk  = ss_item_sk \n and s_store_sk  = ss_store_sk\n and s_state in ('GA','AL','LA','NM',\n                 'MN','NM','CO','MI')\n group by rollup(i_category,i_class)\n order by\n   lochierarchy desc\n  ,case when lochierarchy = 0 then i_category end\n  ,rank_within_parent\n  limit 100;\n\n-- TPC-DS_query37\nselect  i_item_id\n       ,i_item_desc\n       ,i_current_price\n from item, inventory, date_dim, catalog_sales\n where i_current_price between 58 and 58 + 30\n and inv_item_sk = i_item_sk\n and d_date_sk=inv_date_sk\n and d_date between cast('2001-02-11' as date) and dateadd(day,60,to_date('2001-02-11'))\n and i_manufact_id in (910,893,984,865)\n and inv_quantity_on_hand between 100 and 500\n and cs_item_sk = i_item_sk\n group by i_item_id,i_item_desc,i_current_price\n order by i_item_id\n limit 100;\n\n-- TPC-DS_query38\nselect  count(*) from (\n    select distinct c_last_name, c_first_name, d_date\n    from store_sales, date_dim, customer\n          where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n      and store_sales.ss_customer_sk = customer.c_customer_sk\n      and d_month_seq between 1176 and 1176 + 11\n  intersect\n    select distinct c_last_name, c_first_name, d_date\n    from catalog_sales, date_dim, customer\n          where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk\n      and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk\n      and d_month_seq between 1176 and 1176 + 11\n  intersect\n    select distinct c_last_name, c_first_name, d_date\n    from web_sales, date_dim, customer\n          where web_sales.ws_sold_date_sk = date_dim.d_date_sk\n      and web_sales.ws_bill_customer_sk = customer.c_customer_sk\n      and d_month_seq between 1176 and 1176 + 11\n) hot_cust\nlimit 100;\n\n-- TPC-DS_query39\nwith inv as\n(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n       ,stdev,mean, case mean when 0 then null else stdev/mean end cov\n from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n            ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean\n      from inventory\n          ,item\n          ,warehouse\n          ,date_dim\n      where inv_item_sk = i_item_sk\n        and inv_warehouse_sk = w_warehouse_sk\n        and inv_date_sk = d_date_sk\n        and d_year =2001\n      group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo\n where case mean when 0 then 0 else stdev/mean end > 1)\nselect inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov\n        ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov\nfrom inv inv1,inv inv2\nwhere inv1.i_item_sk = inv2.i_item_sk\n  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk\n  and inv1.d_moy=1\n  and inv2.d_moy=1+1\norder by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov\n        ,inv2.d_moy,inv2.mean, inv2.cov\n;\n\n-- TPC-DS_query39P2\nwith inv as\n(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n       ,stdev,mean, case mean when 0 then null else stdev/mean end cov\n from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy\n            ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean\n      from inventory\n          ,item\n          ,warehouse\n          ,date_dim\n      where inv_item_sk = i_item_sk\n        and inv_warehouse_sk = w_warehouse_sk\n        and inv_date_sk = d_date_sk\n        and d_year =2001\n      group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo\n where case mean when 0 then 0 else stdev/mean end > 1)\nselect inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov\n        ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov\nfrom inv inv1,inv inv2\nwhere inv1.i_item_sk = inv2.i_item_sk\n  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk\n  and inv1.d_moy=1\n  and inv2.d_moy=1+1\n  and inv1.cov > 1.5\norder by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov\n        ,inv2.d_moy,inv2.mean, inv2.cov\n;\n\n-- TPC-DS_query40\nselect  \n   w_state\n  ,i_item_id\n  ,sum(case when (cast(d_date as date) < cast ('2002-05-08' as date)) \n \t\tthen cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before\n  ,sum(case when (cast(d_date as date) >= cast ('2002-05-08' as date)) \n \t\tthen cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after\n from\n   catalog_sales left outer join catalog_returns on\n       (cs_order_number = cr_order_number \n        and cs_item_sk = cr_item_sk)\n  ,warehouse \n  ,item\n  ,date_dim\n where\n     i_current_price between 0.99 and 1.49\n and i_item_sk          = cs_item_sk\n and cs_warehouse_sk    = w_warehouse_sk \n and cs_sold_date_sk    = d_date_sk\n and d_date between dateadd(day,-30,to_date('2002-05-08')) and\n dateadd(day,30,to_date('2002-05-08')) \n group by\n    w_state,i_item_id\n order by w_state,i_item_id\nlimit 100;\n\n-- TPC-DS_query41\nselect  distinct(i_product_name)\n from item i1\n where i_manufact_id between 869 and 869+40 \n   and (select count(*) as item_cnt\n        from item\n        where (i_manufact = i1.i_manufact and\n        ((i_category = 'Women' and \n        (i_color = 'seashell' or i_color = 'indian') and \n        (i_units = 'Carton' or i_units = 'Dozen') and\n        (i_size = 'small' or i_size = 'extra large')\n        ) or\n        (i_category = 'Women' and\n        (i_color = 'thistle' or i_color = 'green') and\n        (i_units = 'Box' or i_units = 'Tsp') and\n        (i_size = 'N/A' or i_size = 'large')\n        ) or\n        (i_category = 'Men' and\n        (i_color = 'steel' or i_color = 'papaya') and\n        (i_units = 'Dram' or i_units = 'Bundle') and\n        (i_size = 'petite' or i_size = 'economy')\n        ) or\n        (i_category = 'Men' and\n        (i_color = 'pink' or i_color = 'black') and\n        (i_units = 'Gross' or i_units = 'Oz') and\n        (i_size = 'small' or i_size = 'extra large')\n        ))) or\n       (i_manufact = i1.i_manufact and\n        ((i_category = 'Women' and \n        (i_color = 'lemon' or i_color = 'chocolate') and \n        (i_units = 'Each' or i_units = 'N/A') and\n        (i_size = 'small' or i_size = 'extra large')\n        ) or\n        (i_category = 'Women' and\n        (i_color = 'purple' or i_color = 'peru') and\n        (i_units = 'Ounce' or i_units = 'Unknown') and\n        (i_size = 'N/A' or i_size = 'large')\n        ) or\n        (i_category = 'Men' and\n        (i_color = 'rosy' or i_color = 'floral') and\n        (i_units = 'Pound' or i_units = 'Ton') and\n        (i_size = 'petite' or i_size = 'economy')\n        ) or\n        (i_category = 'Men' and\n        (i_color = 'plum' or i_color = 'firebrick') and\n        (i_units = 'Bunch' or i_units = 'Gram') and\n        (i_size = 'small' or i_size = 'extra large')\n        )))) > 0\n order by i_product_name\n limit 100;\n\n-- TPC-DS_query42\nselect  dt.d_year\n \t,item.i_category_id\n \t,item.i_category\n \t,sum(ss_ext_sales_price)\n from \tdate_dim dt\n \t,store_sales\n \t,item\n where dt.d_date_sk = store_sales.ss_sold_date_sk\n \tand store_sales.ss_item_sk = item.i_item_sk\n \tand item.i_manager_id = 1  \t\n \tand dt.d_moy=12\n \tand dt.d_year=2001\n group by \tdt.d_year\n \t\t,item.i_category_id\n \t\t,item.i_category\n order by       sum(ss_ext_sales_price) desc,dt.d_year\n \t\t,item.i_category_id\n \t\t,item.i_category\nlimit 100 ;\n\n-- TPC-DS_query43\nselect  s_store_name, s_store_id,\n        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,\n        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,\n        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,\n        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,\n        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,\n        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,\n        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales\n from date_dim, store_sales, store\n where d_date_sk = ss_sold_date_sk and\n       s_store_sk = ss_store_sk and\n       s_gmt_offset = -6 and\n       d_year = 2000 \n group by s_store_name, s_store_id\n order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales\n limit 100;\n\n-- TPC-DS_query44\nselect  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing\nfrom(select *\n     from (select item_sk,rank() over (order by rank_col asc) rnk\n           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col \n                 from store_sales ss1\n                 where ss_store_sk = 112\n                 group by ss_item_sk\n                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col\n                                                  from store_sales\n                                                  where ss_store_sk = 112\n                                                    and ss_hdemo_sk is null\n                                                  group by ss_store_sk))V1)V11\n     where rnk  < 11) asceding,\n    (select *\n     from (select item_sk,rank() over (order by rank_col desc) rnk\n           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col\n                 from store_sales ss1\n                 where ss_store_sk = 112\n                 group by ss_item_sk\n                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col\n                                                  from store_sales\n                                                  where ss_store_sk = 112\n                                                    and ss_hdemo_sk is null\n                                                  group by ss_store_sk))V2)V21\n     where rnk  < 11) descending,\nitem i1,\nitem i2\nwhere asceding.rnk = descending.rnk \n  and i1.i_item_sk=asceding.item_sk\n  and i2.i_item_sk=descending.item_sk\norder by asceding.rnk\nlimit 100;\n\n-- TPC-DS_query45\nselect  ca_zip, ca_city, sum(ws_sales_price)\n from web_sales, customer, customer_address, date_dim, item\n where ws_bill_customer_sk = c_customer_sk\n \tand c_current_addr_sk = ca_address_sk \n \tand ws_item_sk = i_item_sk \n \tand ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')\n \t      or \n \t      i_item_id in (select i_item_id\n                             from item\n                             where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n                             )\n \t    )\n \tand ws_sold_date_sk = d_date_sk\n \tand d_qoy = 1 and d_year = 1998\n group by ca_zip, ca_city\n order by ca_zip, ca_city\n limit 100;\n\n-- TPC-DS_query46\nselect  c_last_name\n       ,c_first_name\n       ,ca_city\n       ,bought_city\n       ,ss_ticket_number\n       ,amt,profit \n from\n   (select ss_ticket_number\n          ,ss_customer_sk\n          ,ca_city bought_city\n          ,sum(ss_coupon_amt) amt\n          ,sum(ss_net_profit) profit\n    from store_sales,date_dim,store,household_demographics,customer_address \n    where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n    and store_sales.ss_store_sk = store.s_store_sk  \n    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    and store_sales.ss_addr_sk = customer_address.ca_address_sk\n    and (household_demographics.hd_dep_count = 4 or\n         household_demographics.hd_vehicle_count= 3)\n    and date_dim.d_dow in (6,0)\n    and date_dim.d_year in (1999,1999+1,1999+2) \n    and store.s_city in ('Woodland','Rockville','Oakdale','Pleasant Grove','Springfield') \n    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr\n    where ss_customer_sk = c_customer_sk\n      and customer.c_current_addr_sk = current_addr.ca_address_sk\n      and current_addr.ca_city <> bought_city\n  order by c_last_name\n          ,c_first_name\n          ,ca_city\n          ,bought_city\n          ,ss_ticket_number\n  limit 100;\n\n-- TPC-DS_query47\nwith v1 as(\n select i_category, i_brand,\n        s_store_name, s_company_name,\n        d_year, d_moy,\n        sum(ss_sales_price) sum_sales,\n        avg(sum(ss_sales_price)) over\n          (partition by i_category, i_brand,\n                     s_store_name, s_company_name, d_year)\n          avg_monthly_sales,\n        rank() over\n          (partition by i_category, i_brand,\n                     s_store_name, s_company_name\n           order by d_year, d_moy) rn\n from item, store_sales, date_dim, store\n where ss_item_sk = i_item_sk and\n       ss_sold_date_sk = d_date_sk and\n       ss_store_sk = s_store_sk and\n       (\n         d_year = 1999 or\n         ( d_year = 1999-1 and d_moy =12) or\n         ( d_year = 1999+1 and d_moy =1)\n       )\n group by i_category, i_brand,\n          s_store_name, s_company_name,\n          d_year, d_moy),\n v2 as(\n select v1.s_store_name, v1.s_company_name\n        ,v1.d_year, v1.d_moy\n        ,v1.avg_monthly_sales\n        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum\n from v1, v1 v1_lag, v1 v1_lead\n where v1.i_category = v1_lag.i_category and\n       v1.i_category = v1_lead.i_category and\n       v1.i_brand = v1_lag.i_brand and\n       v1.i_brand = v1_lead.i_brand and\n       v1.s_store_name = v1_lag.s_store_name and\n       v1.s_store_name = v1_lead.s_store_name and\n       v1.s_company_name = v1_lag.s_company_name and\n       v1.s_company_name = v1_lead.s_company_name and\n       v1.rn = v1_lag.rn + 1 and\n       v1.rn = v1_lead.rn - 1)\n  select  *\n from v2\n where  d_year = 1999 and    \n        avg_monthly_sales > 0 and\n        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1\n order by sum_sales - avg_monthly_sales, sum_sales\n limit 100;\n\n-- TPC-DS_query48\nselect sum (ss_quantity)\n from store_sales, store, customer_demographics, customer_address, date_dim\n where s_store_sk = ss_store_sk\n and  ss_sold_date_sk = d_date_sk and d_year = 2001\n and  \n (\n  (\n   cd_demo_sk = ss_cdemo_sk\n   and \n   cd_marital_status = 'D'\n   and \n   cd_education_status = 'Secondary'\n   and \n   ss_sales_price between 100.00 and 150.00  \n   )\n or\n  (\n  cd_demo_sk = ss_cdemo_sk\n   and \n   cd_marital_status = 'W'\n   and \n   cd_education_status = '2 yr Degree'\n   and \n   ss_sales_price between 50.00 and 100.00   \n  )\n or \n (\n  cd_demo_sk = ss_cdemo_sk\n  and \n   cd_marital_status = 'U'\n   and \n   cd_education_status = 'Unknown'\n   and \n   ss_sales_price between 150.00 and 200.00  \n )\n )\n and\n (\n  (\n  ss_addr_sk = ca_address_sk\n  and\n  ca_country = 'United States'\n  and\n  ca_state in ('VA', 'MI', 'FL')\n  and ss_net_profit between 0 and 2000  \n  )\n or\n  (ss_addr_sk = ca_address_sk\n  and\n  ca_country = 'United States'\n  and\n  ca_state in ('SC', 'GA', 'MN')\n  and ss_net_profit between 150 and 3000 \n  )\n or\n  (ss_addr_sk = ca_address_sk\n  and\n  ca_country = 'United States'\n  and\n  ca_state in ('OK', 'IA', 'TX')\n  and ss_net_profit between 50 and 25000 \n  )\n )\n;\n\n-- TPC-DS_query49\nselect  channel, item, return_ratio, return_rank, currency_rank from\n (select\n 'web' as channel\n ,web.item\n ,web.return_ratio\n ,web.return_rank\n ,web.currency_rank\n from (\n \tselect \n \t item\n \t,return_ratio\n \t,currency_ratio\n \t,rank() over (order by return_ratio) as return_rank\n \t,rank() over (order by currency_ratio) as currency_rank\n \tfrom\n \t(\tselect ws.ws_item_sk as item\n \t\t,(cast(sum(coalesce(wr.wr_return_quantity,0)) as decimal(15,4))/\n \t\tcast(sum(coalesce(ws.ws_quantity,0)) as decimal(15,4) )) as return_ratio\n \t\t,(cast(sum(coalesce(wr.wr_return_amt,0)) as decimal(15,4))/\n \t\tcast(sum(coalesce(ws.ws_net_paid,0)) as decimal(15,4) )) as currency_ratio\n \t\tfrom \n \t\t web_sales ws left outer join web_returns wr \n \t\t\ton (ws.ws_order_number = wr.wr_order_number and \n \t\t\tws.ws_item_sk = wr.wr_item_sk)\n                 ,date_dim\n \t\twhere \n \t\t\twr.wr_return_amt > 10000 \n \t\t\tand ws.ws_net_profit > 1\n                         and ws.ws_net_paid > 0\n                         and ws.ws_quantity > 0\n                         and ws_sold_date_sk = d_date_sk\n                         and d_year = 2002\n                         and d_moy = 11\n \t\tgroup by ws.ws_item_sk\n \t) in_web\n ) web\n where \n (\n web.return_rank <= 10\n or\n web.currency_rank <= 10\n )\n union\n select \n 'catalog' as channel\n ,catalog.item\n ,catalog.return_ratio\n ,catalog.return_rank\n ,catalog.currency_rank\n from (\n \tselect \n \t item\n \t,return_ratio\n \t,currency_ratio\n \t,rank() over (order by return_ratio) as return_rank\n \t,rank() over (order by currency_ratio) as currency_rank\n \tfrom\n \t(\tselect \n \t\tcs.cs_item_sk as item\n \t\t,(cast(sum(coalesce(cr.cr_return_quantity,0)) as decimal(15,4))/\n \t\tcast(sum(coalesce(cs.cs_quantity,0)) as decimal(15,4) )) as return_ratio\n \t\t,(cast(sum(coalesce(cr.cr_return_amount,0)) as decimal(15,4))/\n \t\tcast(sum(coalesce(cs.cs_net_paid,0)) as decimal(15,4) )) as currency_ratio\n \t\tfrom \n \t\tcatalog_sales cs left outer join catalog_returns cr\n \t\t\ton (cs.cs_order_number = cr.cr_order_number and \n \t\t\tcs.cs_item_sk = cr.cr_item_sk)\n                ,date_dim\n \t\twhere \n \t\t\tcr.cr_return_amount > 10000 \n \t\t\tand cs.cs_net_profit > 1\n                         and cs.cs_net_paid > 0\n                         and cs.cs_quantity > 0\n                         and cs_sold_date_sk = d_date_sk\n                         and d_year = 2002\n                         and d_moy = 11\n                 group by cs.cs_item_sk\n \t) in_cat\n ) catalog\n where \n (\n catalog.return_rank <= 10\n or\n catalog.currency_rank <=10\n )\n union\n select \n 'store' as channel\n ,store.item\n ,store.return_ratio\n ,store.return_rank\n ,store.currency_rank\n from (\n \tselect \n \t item\n \t,return_ratio\n \t,currency_ratio\n \t,rank() over (order by return_ratio) as return_rank\n \t,rank() over (order by currency_ratio) as currency_rank\n \tfrom\n \t(\tselect sts.ss_item_sk as item\n \t\t,(cast(sum(coalesce(sr.sr_return_quantity,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_quantity,0)) as decimal(15,4) )) as return_ratio\n \t\t,(cast(sum(coalesce(sr.sr_return_amt,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_net_paid,0)) as decimal(15,4) )) as currency_ratio\n \t\tfrom \n \t\tstore_sales sts left outer join store_returns sr\n \t\t\ton (sts.ss_ticket_number = sr.sr_ticket_number and sts.ss_item_sk = sr.sr_item_sk)\n                ,date_dim\n \t\twhere \n \t\t\tsr.sr_return_amt > 10000 \n \t\t\tand sts.ss_net_profit > 1\n                         and sts.ss_net_paid > 0 \n                         and sts.ss_quantity > 0\n                         and ss_sold_date_sk = d_date_sk\n                         and d_year = 2002\n                         and d_moy = 11\n \t\tgroup by sts.ss_item_sk\n \t) in_store\n ) store\n where  (\n store.return_rank <= 10\n or \n store.currency_rank <= 10\n )\n )\n order by 1,4,5,2\n limit 100;\n\n-- TPC-DS_query50\nselect  \n   s_store_name\n  ,s_company_id\n  ,s_street_number\n  ,s_street_name\n  ,s_street_type\n  ,s_suite_number\n  ,s_city\n  ,s_county\n  ,s_state\n  ,s_zip\n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\" \n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 30) and \n                 (sr_returned_date_sk - ss_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\" \n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 60) and \n                 (sr_returned_date_sk - ss_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\" \n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 90) and\n                 (sr_returned_date_sk - ss_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\" \n  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\" \nfrom\n   store_sales\n  ,store_returns\n  ,store\n  ,date_dim d1\n  ,date_dim d2\nwhere\n    d2.d_year = 1998\nand d2.d_moy  = 10\nand ss_ticket_number = sr_ticket_number\nand ss_item_sk = sr_item_sk\nand ss_sold_date_sk   = d1.d_date_sk\nand sr_returned_date_sk   = d2.d_date_sk\nand ss_customer_sk = sr_customer_sk\nand ss_store_sk = s_store_sk\ngroup by\n   s_store_name\n  ,s_company_id\n  ,s_street_number\n  ,s_street_name\n  ,s_street_type\n  ,s_suite_number\n  ,s_city\n  ,s_county\n  ,s_state\n  ,s_zip\norder by s_store_name\n        ,s_company_id\n        ,s_street_number\n        ,s_street_name\n        ,s_street_type\n        ,s_suite_number\n        ,s_city\n        ,s_county\n        ,s_state\n        ,s_zip\nlimit 100;\n\n-- TPC-DS_query51\nWITH web_v1 as (\nselect\n  ws_item_sk item_sk, d_date,\n  sum(sum(ws_sales_price))\n      over (partition by ws_item_sk order by d_date rows between unbounded preceding and current row) cume_sales\nfrom web_sales\n    ,date_dim\nwhere ws_sold_date_sk=d_date_sk\n  and d_month_seq between 1176 and 1176+11\n  and ws_item_sk is not NULL\ngroup by ws_item_sk, d_date),\nstore_v1 as (\nselect\n  ss_item_sk item_sk, d_date,\n  sum(sum(ss_sales_price))\n      over (partition by ss_item_sk order by d_date rows between unbounded preceding and current row) cume_sales\nfrom store_sales\n    ,date_dim\nwhere ss_sold_date_sk=d_date_sk\n  and d_month_seq between 1176 and 1176+11\n  and ss_item_sk is not NULL\ngroup by ss_item_sk, d_date)\n select  *\nfrom (select item_sk\n     ,d_date\n     ,web_sales\n     ,store_sales\n     ,max(web_sales)\n         over (partition by item_sk order by d_date rows between unbounded preceding and current row) web_cumulative\n     ,max(store_sales)\n         over (partition by item_sk order by d_date rows between unbounded preceding and current row) store_cumulative\n     from (select case when web.item_sk is not null then web.item_sk else store.item_sk end item_sk\n                 ,case when web.d_date is not null then web.d_date else store.d_date end d_date\n                 ,web.cume_sales web_sales\n                 ,store.cume_sales store_sales\n           from web_v1 web full outer join store_v1 store on (web.item_sk = store.item_sk\n                                                          and web.d_date = store.d_date)\n          )x )y\nwhere web_cumulative > store_cumulative\norder by item_sk\n        ,d_date\nlimit 100;\n\n-- TPC-DS_query52\nselect  dt.d_year\n \t,item.i_brand_id brand_id\n \t,item.i_brand brand\n \t,sum(ss_ext_sales_price) ext_price\n from date_dim dt\n     ,store_sales\n     ,item\n where dt.d_date_sk = store_sales.ss_sold_date_sk\n    and store_sales.ss_item_sk = item.i_item_sk\n    and item.i_manager_id = 1\n    and dt.d_moy=11\n    and dt.d_year=2002\n group by dt.d_year\n \t,item.i_brand\n \t,item.i_brand_id\n order by dt.d_year\n \t,ext_price desc\n \t,brand_id\nlimit 100 ;\n\n-- TPC-DS_query53\nselect  * from \n(select i_manufact_id,\nsum(ss_sales_price) sum_sales,\navg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales\nfrom item, store_sales, date_dim, store\nwhere ss_item_sk = i_item_sk and\nss_sold_date_sk = d_date_sk and\nss_store_sk = s_store_sk and\nd_month_seq in (1213,1213+1,1213+2,1213+3,1213+4,1213+5,1213+6,1213+7,1213+8,1213+9,1213+10,1213+11) and\n((i_category in ('Books','Children','Electronics') and\ni_class in ('personal','portable','reference','self-help') and\ni_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',\n\t\t'exportiunivamalg #9','scholaramalgamalg #9'))\nor(i_category in ('Women','Music','Men') and\ni_class in ('accessories','classical','fragrances','pants') and\ni_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',\n\t\t'importoamalg #1')))\ngroup by i_manufact_id, d_qoy ) tmp1\nwhere case when avg_quarterly_sales > 0 \n\tthen abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales \n\telse null end > 0.1\norder by avg_quarterly_sales,\n\t sum_sales,\n\t i_manufact_id\nlimit 100;\n\n-- TPC-DS_query54\nwith my_customers as (\n select distinct c_customer_sk\n        , c_current_addr_sk\n from   \n        ( select cs_sold_date_sk sold_date_sk,\n                 cs_bill_customer_sk customer_sk,\n                 cs_item_sk item_sk\n          from   catalog_sales\n          union all\n          select ws_sold_date_sk sold_date_sk,\n                 ws_bill_customer_sk customer_sk,\n                 ws_item_sk item_sk\n          from   web_sales\n         ) cs_or_ws_sales,\n         item,\n         date_dim,\n         customer\n where   sold_date_sk = d_date_sk\n         and item_sk = i_item_sk\n         and i_category = 'Shoes'\n         and i_class = 'womens'\n         and c_customer_sk = cs_or_ws_sales.customer_sk\n         and d_moy = 5\n         and d_year = 2000\n )\n , my_revenue as (\n select c_customer_sk,\n        sum(ss_ext_sales_price) as revenue\n from   my_customers,\n        store_sales,\n        customer_address,\n        store,\n        date_dim\n where  c_current_addr_sk = ca_address_sk\n        and ca_county = s_county\n        and ca_state = s_state\n        and ss_sold_date_sk = d_date_sk\n        and c_customer_sk = ss_customer_sk\n        and d_month_seq between (select distinct d_month_seq+1\n                                 from   date_dim where d_year = 2000 and d_moy = 5)\n                           and  (select distinct d_month_seq+3\n                                 from   date_dim where d_year = 2000 and d_moy = 5)\n group by c_customer_sk\n )\n , segments as\n (select cast((revenue/50) as int) as segment\n  from   my_revenue\n )\n  select  segment, count(*) as num_customers, segment*50 as segment_base\n from segments\n group by segment\n order by segment, num_customers\n limit 100;\n\n-- TPC-DS_query55\nselect  i_brand_id brand_id, i_brand brand,\n \tsum(ss_ext_sales_price) ext_price\n from date_dim, store_sales, item\n where d_date_sk = ss_sold_date_sk\n \tand ss_item_sk = i_item_sk\n \tand i_manager_id=96\n \tand d_moy=12\n \tand d_year=2002\n group by i_brand, i_brand_id\n order by ext_price desc, i_brand_id\nlimit 100 ;\n\n-- TPC-DS_query56\nwith ss as (\n select i_item_id,sum(ss_ext_sales_price) total_sales\n from\n \tstore_sales,\n \tdate_dim,\n         customer_address,\n         item\n where i_item_id in (select\n     i_item_id\nfrom item\nwhere i_color in ('rose','brown','drab'))\n and     ss_item_sk              = i_item_sk\n and     ss_sold_date_sk         = d_date_sk\n and     d_year                  = 2000\n and     d_moy                   = 4\n and     ss_addr_sk              = ca_address_sk\n and     ca_gmt_offset           = -5 \n group by i_item_id),\n cs as (\n select i_item_id,sum(cs_ext_sales_price) total_sales\n from\n \tcatalog_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id               in (select\n  i_item_id\nfrom item\nwhere i_color in ('rose','brown','drab'))\n and     cs_item_sk              = i_item_sk\n and     cs_sold_date_sk         = d_date_sk\n and     d_year                  = 2000\n and     d_moy                   = 4\n and     cs_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -5 \n group by i_item_id),\n ws as (\n select i_item_id,sum(ws_ext_sales_price) total_sales\n from\n \tweb_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id               in (select\n  i_item_id\nfrom item\nwhere i_color in ('rose','brown','drab'))\n and     ws_item_sk              = i_item_sk\n and     ws_sold_date_sk         = d_date_sk\n and     d_year                  = 2000\n and     d_moy                   = 4\n and     ws_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -5\n group by i_item_id)\n  select  i_item_id ,sum(total_sales) total_sales\n from  (select * from ss \n        union all\n        select * from cs \n        union all\n        select * from ws) tmp1\n group by i_item_id\n order by total_sales,\n          i_item_id\n limit 100;\n\n-- TPC-DS_query57\nwith v1 as(\n select i_category, i_brand,\n        cc_name,\n        d_year, d_moy,\n        sum(cs_sales_price) sum_sales,\n        avg(sum(cs_sales_price)) over\n          (partition by i_category, i_brand,\n                     cc_name, d_year)\n          avg_monthly_sales,\n        rank() over\n          (partition by i_category, i_brand,\n                     cc_name\n           order by d_year, d_moy) rn\n from item, catalog_sales, date_dim, call_center\n where cs_item_sk = i_item_sk and\n       cs_sold_date_sk = d_date_sk and\n       cc_call_center_sk= cs_call_center_sk and\n       (\n         d_year = 2001 or\n         ( d_year = 2001-1 and d_moy =12) or\n         ( d_year = 2001+1 and d_moy =1)\n       )\n group by i_category, i_brand,\n          cc_name , d_year, d_moy),\n v2 as(\n select v1.i_brand\n        ,v1.d_year, v1.d_moy\n        ,v1.avg_monthly_sales\n        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum\n from v1, v1 v1_lag, v1 v1_lead\n where v1.i_category = v1_lag.i_category and\n       v1.i_category = v1_lead.i_category and\n       v1.i_brand = v1_lag.i_brand and\n       v1.i_brand = v1_lead.i_brand and\n       v1. cc_name = v1_lag. cc_name and\n       v1. cc_name = v1_lead. cc_name and\n       v1.rn = v1_lag.rn + 1 and\n       v1.rn = v1_lead.rn - 1)\n  select  *\n from v2\n where  d_year = 2001 and\n        avg_monthly_sales > 0 and\n        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1\n order by sum_sales - avg_monthly_sales, nsum\n limit 100;\n\n-- TPC-DS_query58\nwith ss_items as\n (select i_item_id item_id\n        ,sum(ss_ext_sales_price) ss_item_rev \n from store_sales\n     ,item\n     ,date_dim\n where ss_item_sk = i_item_sk\n   and d_date in (select d_date\n                  from date_dim\n                  where d_week_seq = (select d_week_seq \n                                      from date_dim\n                                      where d_date = '1999-04-16'))\n   and ss_sold_date_sk   = d_date_sk\n group by i_item_id),\n cs_items as\n (select i_item_id item_id\n        ,sum(cs_ext_sales_price) cs_item_rev\n  from catalog_sales\n      ,item\n      ,date_dim\n where cs_item_sk = i_item_sk\n  and  d_date in (select d_date\n                  from date_dim\n                  where d_week_seq = (select d_week_seq \n                                      from date_dim\n                                      where d_date = '1999-04-16'))\n  and  cs_sold_date_sk = d_date_sk\n group by i_item_id),\n ws_items as\n (select i_item_id item_id\n        ,sum(ws_ext_sales_price) ws_item_rev\n  from web_sales\n      ,item\n      ,date_dim\n where ws_item_sk = i_item_sk\n  and  d_date in (select d_date\n                  from date_dim\n                  where d_week_seq =(select d_week_seq \n                                     from date_dim\n                                     where d_date = '1999-04-16'))\n  and ws_sold_date_sk   = d_date_sk\n group by i_item_id)\n  select  ss_items.item_id\n       ,ss_item_rev\n       ,ss_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ss_dev\n       ,cs_item_rev\n       ,cs_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 cs_dev\n       ,ws_item_rev\n       ,ws_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ws_dev\n       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average\n from ss_items,cs_items,ws_items\n where ss_items.item_id=cs_items.item_id\n   and ss_items.item_id=ws_items.item_id \n   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev\n   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev\n   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev\n   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev\n   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev\n   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev\n order by item_id\n         ,ss_item_rev\n limit 100;\n\n-- TPC-DS_query59\nwith wss as \n (select d_week_seq,\n        ss_store_sk,\n        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,\n        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,\n        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,\n        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,\n        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,\n        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,\n        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales\n from store_sales,date_dim\n where d_date_sk = ss_sold_date_sk\n group by d_week_seq,ss_store_sk\n )\n  select  s_store_name1,s_store_id1,d_week_seq1\n       ,sun_sales1/sun_sales2,mon_sales1/mon_sales2\n       ,tue_sales1/tue_sales2,wed_sales1/wed_sales2,thu_sales1/thu_sales2\n       ,fri_sales1/fri_sales2,sat_sales1/sat_sales2\n from\n (select s_store_name s_store_name1,wss.d_week_seq d_week_seq1\n        ,s_store_id s_store_id1,sun_sales sun_sales1\n        ,mon_sales mon_sales1,tue_sales tue_sales1\n        ,wed_sales wed_sales1,thu_sales thu_sales1\n        ,fri_sales fri_sales1,sat_sales sat_sales1\n  from wss,store,date_dim d\n  where d.d_week_seq = wss.d_week_seq and\n        ss_store_sk = s_store_sk and \n        d_month_seq between 1201 and 1201 + 11) y,\n (select s_store_name s_store_name2,wss.d_week_seq d_week_seq2\n        ,s_store_id s_store_id2,sun_sales sun_sales2\n        ,mon_sales mon_sales2,tue_sales tue_sales2\n        ,wed_sales wed_sales2,thu_sales thu_sales2\n        ,fri_sales fri_sales2,sat_sales sat_sales2\n  from wss,store,date_dim d\n  where d.d_week_seq = wss.d_week_seq and\n        ss_store_sk = s_store_sk and \n        d_month_seq between 1201+ 12 and 1201 + 23) x\n where s_store_id1=s_store_id2\n   and d_week_seq1=d_week_seq2-52\n order by s_store_name1,s_store_id1,d_week_seq1\nlimit 100;\n\n-- TPC-DS_query60\nwith ss as (\n select\n          i_item_id,sum(ss_ext_sales_price) total_sales\n from\n \tstore_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id in (select\n  i_item_id\nfrom\n item\nwhere i_category in ('Jewelry'))\n and     ss_item_sk              = i_item_sk\n and     ss_sold_date_sk         = d_date_sk\n and     d_year                  = 1999\n and     d_moy                   = 9\n and     ss_addr_sk              = ca_address_sk\n and     ca_gmt_offset           = -6 \n group by i_item_id),\n cs as (\n select\n          i_item_id,sum(cs_ext_sales_price) total_sales\n from\n \tcatalog_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id               in (select\n  i_item_id\nfrom\n item\nwhere i_category in ('Jewelry'))\n and     cs_item_sk              = i_item_sk\n and     cs_sold_date_sk         = d_date_sk\n and     d_year                  = 1999\n and     d_moy                   = 9\n and     cs_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -6 \n group by i_item_id),\n ws as (\n select\n          i_item_id,sum(ws_ext_sales_price) total_sales\n from\n \tweb_sales,\n \tdate_dim,\n         customer_address,\n         item\n where\n         i_item_id               in (select\n  i_item_id\nfrom\n item\nwhere i_category in ('Jewelry'))\n and     ws_item_sk              = i_item_sk\n and     ws_sold_date_sk         = d_date_sk\n and     d_year                  = 1999\n and     d_moy                   = 9\n and     ws_bill_addr_sk         = ca_address_sk\n and     ca_gmt_offset           = -6\n group by i_item_id)\n  select   \n  i_item_id\n,sum(total_sales) total_sales\n from  (select * from ss \n        union all\n        select * from cs \n        union all\n        select * from ws) tmp1\n group by i_item_id\n order by i_item_id\n      ,total_sales\n limit 100;\n\n-- TPC-DS_query61\nselect  promotions,total,cast(promotions as decimal(17,4))/cast(total as decimal(17,4))*100\nfrom\n  (select sum(ss_ext_sales_price) promotions\n   from  store_sales\n        ,store\n        ,promotion\n        ,date_dim\n        ,customer\n        ,customer_address \n        ,item\n   where ss_sold_date_sk = d_date_sk\n   and   ss_store_sk = s_store_sk\n   and   ss_promo_sk = p_promo_sk\n   and   ss_customer_sk= c_customer_sk\n   and   ca_address_sk = c_current_addr_sk\n   and   ss_item_sk = i_item_sk \n   and   ca_gmt_offset = -6\n   and   i_category = 'Sports'\n   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')\n   and   s_gmt_offset = -6\n   and   d_year = 1999\n   and   d_moy  = 11) promotional_sales,\n  (select sum(ss_ext_sales_price) total\n   from  store_sales\n        ,store\n        ,date_dim\n        ,customer\n        ,customer_address\n        ,item\n   where ss_sold_date_sk = d_date_sk\n   and   ss_store_sk = s_store_sk\n   and   ss_customer_sk= c_customer_sk\n   and   ca_address_sk = c_current_addr_sk\n   and   ss_item_sk = i_item_sk\n   and   ca_gmt_offset = -6\n   and   i_category = 'Sports'\n   and   s_gmt_offset = -6\n   and   d_year = 1999\n   and   d_moy  = 11) all_sales\norder by promotions, total\nlimit 100;\n\n-- TPC-DS_query62\nselect  \n   substr(w_warehouse_name,1,20)\n  ,sm_type\n  ,web_name\n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\" \n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 30) and \n                 (ws_ship_date_sk - ws_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\" \n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 60) and \n                 (ws_ship_date_sk - ws_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\" \n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 90) and\n                 (ws_ship_date_sk - ws_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\" \n  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\" \nfrom\n   web_sales\n  ,warehouse\n  ,ship_mode\n  ,web_site\n  ,date_dim\nwhere\n    d_month_seq between 1214 and 1214 + 11\nand ws_ship_date_sk   = d_date_sk\nand ws_warehouse_sk   = w_warehouse_sk\nand ws_ship_mode_sk   = sm_ship_mode_sk\nand ws_web_site_sk    = web_site_sk\ngroup by\n   substr(w_warehouse_name,1,20)\n  ,sm_type\n  ,web_name\norder by substr(w_warehouse_name,1,20)\n        ,sm_type\n       ,web_name\nlimit 100;\n\n-- TPC-DS_query63\nselect  * \nfrom (select i_manager_id\n             ,sum(ss_sales_price) sum_sales\n             ,avg(sum(ss_sales_price)) over (partition by i_manager_id) avg_monthly_sales\n      from item\n          ,store_sales\n          ,date_dim\n          ,store\n      where ss_item_sk = i_item_sk\n        and ss_sold_date_sk = d_date_sk\n        and ss_store_sk = s_store_sk\n        and d_month_seq in (1188,1188+1,1188+2,1188+3,1188+4,1188+5,1188+6,1188+7,1188+8,1188+9,1188+10,1188+11)\n        and ((    i_category in ('Books','Children','Electronics')\n              and i_class in ('personal','portable','reference','self-help')\n              and i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',\n\t\t                  'exportiunivamalg #9','scholaramalgamalg #9'))\n           or(    i_category in ('Women','Music','Men')\n              and i_class in ('accessories','classical','fragrances','pants')\n              and i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',\n\t\t                 'importoamalg #1')))\ngroup by i_manager_id, d_moy) tmp1\nwhere case when avg_monthly_sales > 0 then abs (sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1\norder by i_manager_id\n        ,avg_monthly_sales\n        ,sum_sales\nlimit 100;\n\n-- TPC-DS_query64\nwith cs_ui as\n (select cs_item_sk\n        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund\n  from catalog_sales\n      ,catalog_returns\n  where cs_item_sk = cr_item_sk\n    and cs_order_number = cr_order_number\n  group by cs_item_sk\n  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)),\ncross_sales as\n (select i_product_name product_name\n     ,i_item_sk item_sk\n     ,s_store_name store_name\n     ,s_zip store_zip\n     ,ad1.ca_street_number b_street_number\n     ,ad1.ca_street_name b_street_name\n     ,ad1.ca_city b_city\n     ,ad1.ca_zip b_zip\n     ,ad2.ca_street_number c_street_number\n     ,ad2.ca_street_name c_street_name\n     ,ad2.ca_city c_city\n     ,ad2.ca_zip c_zip\n     ,d1.d_year as syear\n     ,d2.d_year as fsyear\n     ,d3.d_year s2year\n     ,count(*) cnt\n     ,sum(ss_wholesale_cost) s1\n     ,sum(ss_list_price) s2\n     ,sum(ss_coupon_amt) s3\n  FROM   store_sales\n        ,store_returns\n        ,cs_ui\n        ,date_dim d1\n        ,date_dim d2\n        ,date_dim d3\n        ,store\n        ,customer\n        ,customer_demographics cd1\n        ,customer_demographics cd2\n        ,promotion\n        ,household_demographics hd1\n        ,household_demographics hd2\n        ,customer_address ad1\n        ,customer_address ad2\n        ,income_band ib1\n        ,income_band ib2\n        ,item\n  WHERE  ss_store_sk = s_store_sk AND\n         ss_sold_date_sk = d1.d_date_sk AND\n         ss_customer_sk = c_customer_sk AND\n         ss_cdemo_sk= cd1.cd_demo_sk AND\n         ss_hdemo_sk = hd1.hd_demo_sk AND\n         ss_addr_sk = ad1.ca_address_sk and\n         ss_item_sk = i_item_sk and\n         ss_item_sk = sr_item_sk and\n         ss_ticket_number = sr_ticket_number and\n         ss_item_sk = cs_ui.cs_item_sk and\n         c_current_cdemo_sk = cd2.cd_demo_sk AND\n         c_current_hdemo_sk = hd2.hd_demo_sk AND\n         c_current_addr_sk = ad2.ca_address_sk and\n         c_first_sales_date_sk = d2.d_date_sk and\n         c_first_shipto_date_sk = d3.d_date_sk and\n         ss_promo_sk = p_promo_sk and\n         hd1.hd_income_band_sk = ib1.ib_income_band_sk and\n         hd2.hd_income_band_sk = ib2.ib_income_band_sk and\n         cd1.cd_marital_status <> cd2.cd_marital_status and\n         i_color in ('burlywood','coral','dark','puff','smoke','peach') and\n         i_current_price between 22 and 22 + 10 and\n         i_current_price between 22 + 1 and 22 + 15\ngroup by i_product_name\n       ,i_item_sk\n       ,s_store_name\n       ,s_zip\n       ,ad1.ca_street_number\n       ,ad1.ca_street_name\n       ,ad1.ca_city\n       ,ad1.ca_zip\n       ,ad2.ca_street_number\n       ,ad2.ca_street_name\n       ,ad2.ca_city\n       ,ad2.ca_zip\n       ,d1.d_year\n       ,d2.d_year\n       ,d3.d_year\n)\nselect cs1.product_name\n     ,cs1.store_name\n     ,cs1.store_zip\n     ,cs1.b_street_number\n     ,cs1.b_street_name\n     ,cs1.b_city\n     ,cs1.b_zip\n     ,cs1.c_street_number\n     ,cs1.c_street_name\n     ,cs1.c_city\n     ,cs1.c_zip\n     ,cs1.syear\n     ,cs1.cnt\n     ,cs1.s1 as s11\n     ,cs1.s2 as s21\n     ,cs1.s3 as s31\n     ,cs2.s1 as s12\n     ,cs2.s2 as s22\n     ,cs2.s3 as s32\n     ,cs2.syear\n     ,cs2.cnt\nfrom cross_sales cs1,cross_sales cs2\nwhere cs1.item_sk=cs2.item_sk and\n     cs1.syear = 1999 and\n     cs2.syear = 1999 + 1 and\n     cs2.cnt <= cs1.cnt and\n     cs1.store_name = cs2.store_name and\n     cs1.store_zip = cs2.store_zip\norder by cs1.product_name\n       ,cs1.store_name\n       ,cs2.cnt\n       ,cs1.s1\n       ,cs2.s1;\n\n-- TPC-DS_query65\nselect \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n     (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t    (select  ss_store_sk, ss_item_sk, \n \t\t     sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1192 and 1192+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n     (select  ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1192 and 1192+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n       sc.revenue <= 0.1 * sb.ave and\n       s_store_sk = sc.ss_store_sk and\n       i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;\n\n-- TPC-DS_query66\nselect   \n         w_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n        ,ship_carriers\n        ,year\n \t,sum(jan_sales) as jan_sales\n \t,sum(feb_sales) as feb_sales\n \t,sum(mar_sales) as mar_sales\n \t,sum(apr_sales) as apr_sales\n \t,sum(may_sales) as may_sales\n \t,sum(jun_sales) as jun_sales\n \t,sum(jul_sales) as jul_sales\n \t,sum(aug_sales) as aug_sales\n \t,sum(sep_sales) as sep_sales\n \t,sum(oct_sales) as oct_sales\n \t,sum(nov_sales) as nov_sales\n \t,sum(dec_sales) as dec_sales\n \t,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot\n \t,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot\n \t,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot\n \t,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot\n \t,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot\n \t,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot\n \t,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot\n \t,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot\n \t,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot\n \t,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot\n \t,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot\n \t,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot\n \t,sum(jan_net) as jan_net\n \t,sum(feb_net) as feb_net\n \t,sum(mar_net) as mar_net\n \t,sum(apr_net) as apr_net\n \t,sum(may_net) as may_net\n \t,sum(jun_net) as jun_net\n \t,sum(jul_net) as jul_net\n \t,sum(aug_net) as aug_net\n \t,sum(sep_net) as sep_net\n \t,sum(oct_net) as oct_net\n \t,sum(nov_net) as nov_net\n \t,sum(dec_net) as dec_net\n from (\n     select \n \tw_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n \t,'GREAT EASTERN' || ',' || 'UPS' as ship_carriers\n       ,d_year as year\n \t,sum(case when d_moy = 1 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as jan_sales\n \t,sum(case when d_moy = 2 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as feb_sales\n \t,sum(case when d_moy = 3 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as mar_sales\n \t,sum(case when d_moy = 4 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as apr_sales\n \t,sum(case when d_moy = 5 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as may_sales\n \t,sum(case when d_moy = 6 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as jun_sales\n \t,sum(case when d_moy = 7 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as jul_sales\n \t,sum(case when d_moy = 8 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as aug_sales\n \t,sum(case when d_moy = 9 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as sep_sales\n \t,sum(case when d_moy = 10 \n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as oct_sales\n \t,sum(case when d_moy = 11\n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as nov_sales\n \t,sum(case when d_moy = 12\n \t\tthen ws_ext_sales_price* ws_quantity else 0 end) as dec_sales\n \t,sum(case when d_moy = 1 \n \t\tthen ws_net_paid * ws_quantity else 0 end) as jan_net\n \t,sum(case when d_moy = 2\n \t\tthen ws_net_paid * ws_quantity else 0 end) as feb_net\n \t,sum(case when d_moy = 3 \n \t\tthen ws_net_paid * ws_quantity else 0 end) as mar_net\n \t,sum(case when d_moy = 4 \n \t\tthen ws_net_paid * ws_quantity else 0 end) as apr_net\n \t,sum(case when d_moy = 5 \n \t\tthen ws_net_paid * ws_quantity else 0 end) as may_net\n \t,sum(case when d_moy = 6 \n \t\tthen ws_net_paid * ws_quantity else 0 end) as jun_net\n \t,sum(case when d_moy = 7 \n \t\tthen ws_net_paid * ws_quantity else 0 end) as jul_net\n \t,sum(case when d_moy = 8 \n \t\tthen ws_net_paid * ws_quantity else 0 end) as aug_net\n \t,sum(case when d_moy = 9 \n \t\tthen ws_net_paid * ws_quantity else 0 end) as sep_net\n \t,sum(case when d_moy = 10 \n \t\tthen ws_net_paid * ws_quantity else 0 end) as oct_net\n \t,sum(case when d_moy = 11\n \t\tthen ws_net_paid * ws_quantity else 0 end) as nov_net\n \t,sum(case when d_moy = 12\n \t\tthen ws_net_paid * ws_quantity else 0 end) as dec_net\n     from\n          web_sales\n         ,warehouse\n         ,date_dim\n         ,time_dim\n \t  ,ship_mode\n     where\n            ws_warehouse_sk =  w_warehouse_sk\n        and ws_sold_date_sk = d_date_sk\n        and ws_sold_time_sk = t_time_sk\n \tand ws_ship_mode_sk = sm_ship_mode_sk\n        and d_year = 1998\n \tand t_time between 46866 and 46866+28800 \n \tand sm_carrier in ('GREAT EASTERN','UPS')\n     group by \n        w_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n       ,d_year\n union all\n     select \n \tw_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n \t,'GREAT EASTERN' || ',' || 'UPS' as ship_carriers\n       ,d_year as year\n \t,sum(case when d_moy = 1 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as jan_sales\n \t,sum(case when d_moy = 2 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as feb_sales\n \t,sum(case when d_moy = 3 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as mar_sales\n \t,sum(case when d_moy = 4 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as apr_sales\n \t,sum(case when d_moy = 5 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as may_sales\n \t,sum(case when d_moy = 6 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as jun_sales\n \t,sum(case when d_moy = 7 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as jul_sales\n \t,sum(case when d_moy = 8 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as aug_sales\n \t,sum(case when d_moy = 9 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as sep_sales\n \t,sum(case when d_moy = 10 \n \t\tthen cs_sales_price* cs_quantity else 0 end) as oct_sales\n \t,sum(case when d_moy = 11\n \t\tthen cs_sales_price* cs_quantity else 0 end) as nov_sales\n \t,sum(case when d_moy = 12\n \t\tthen cs_sales_price* cs_quantity else 0 end) as dec_sales\n \t,sum(case when d_moy = 1 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as jan_net\n \t,sum(case when d_moy = 2 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as feb_net\n \t,sum(case when d_moy = 3 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as mar_net\n \t,sum(case when d_moy = 4 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as apr_net\n \t,sum(case when d_moy = 5 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as may_net\n \t,sum(case when d_moy = 6 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as jun_net\n \t,sum(case when d_moy = 7 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as jul_net\n \t,sum(case when d_moy = 8 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as aug_net\n \t,sum(case when d_moy = 9 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as sep_net\n \t,sum(case when d_moy = 10 \n \t\tthen cs_net_paid * cs_quantity else 0 end) as oct_net\n \t,sum(case when d_moy = 11\n \t\tthen cs_net_paid * cs_quantity else 0 end) as nov_net\n \t,sum(case when d_moy = 12\n \t\tthen cs_net_paid * cs_quantity else 0 end) as dec_net\n     from\n          catalog_sales\n         ,warehouse\n         ,date_dim\n         ,time_dim\n \t ,ship_mode\n     where\n            cs_warehouse_sk =  w_warehouse_sk\n        and cs_sold_date_sk = d_date_sk\n        and cs_sold_time_sk = t_time_sk\n \tand cs_ship_mode_sk = sm_ship_mode_sk\n        and d_year = 1998\n \tand t_time between 46866 AND 46866+28800 \n \tand sm_carrier in ('GREAT EASTERN','UPS')\n     group by \n        w_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n       ,d_year\n ) x\n group by \n        w_warehouse_name\n \t,w_warehouse_sq_ft\n \t,w_city\n \t,w_county\n \t,w_state\n \t,w_country\n \t,ship_carriers\n       ,year\n order by w_warehouse_name\n limit 100;\n\n-- TPC-DS_query67\nselect  *\nfrom (select i_category\n            ,i_class\n            ,i_brand\n            ,i_product_name\n            ,d_year\n            ,d_qoy\n            ,d_moy\n            ,s_store_id\n            ,sumsales\n            ,rank() over (partition by i_category order by sumsales desc) rk\n      from (select i_category\n                  ,i_class\n                  ,i_brand\n                  ,i_product_name\n                  ,d_year\n                  ,d_qoy\n                  ,d_moy\n                  ,s_store_id\n                  ,sum(coalesce(ss_sales_price*ss_quantity,0)) sumsales\n            from store_sales\n                ,date_dim\n                ,store\n                ,item\n       where  ss_sold_date_sk=d_date_sk\n          and ss_item_sk=i_item_sk\n          and ss_store_sk = s_store_sk\n          and d_month_seq between 1213 and 1213+11\n       group by  rollup(i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy,s_store_id))dw1) dw2\nwhere rk <= 100\norder by i_category\n        ,i_class\n        ,i_brand\n        ,i_product_name\n        ,d_year\n        ,d_qoy\n        ,d_moy\n        ,s_store_id\n        ,sumsales\n        ,rk\nlimit 100;\n\n-- TPC-DS_query68\nselect  c_last_name\n       ,c_first_name\n       ,ca_city\n       ,bought_city\n       ,ss_ticket_number\n       ,extended_price\n       ,extended_tax\n       ,list_price\n from (select ss_ticket_number\n             ,ss_customer_sk\n             ,ca_city bought_city\n             ,sum(ss_ext_sales_price) extended_price \n             ,sum(ss_ext_list_price) list_price\n             ,sum(ss_ext_tax) extended_tax \n       from store_sales\n           ,date_dim\n           ,store\n           ,household_demographics\n           ,customer_address \n       where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n         and store_sales.ss_store_sk = store.s_store_sk  \n        and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n        and store_sales.ss_addr_sk = customer_address.ca_address_sk\n        and date_dim.d_dom between 1 and 2 \n        and (household_demographics.hd_dep_count = 3 or\n             household_demographics.hd_vehicle_count= 3)\n        and date_dim.d_year in (2000,2000+1,2000+2)\n        and store.s_city in ('Walnut Grove','Enterprise')\n       group by ss_ticket_number\n               ,ss_customer_sk\n               ,ss_addr_sk,ca_city) dn\n      ,customer\n      ,customer_address current_addr\n where ss_customer_sk = c_customer_sk\n   and customer.c_current_addr_sk = current_addr.ca_address_sk\n   and current_addr.ca_city <> bought_city\n order by c_last_name\n         ,ss_ticket_number\n limit 100;\n\n-- TPC-DS_query69\nselect  \n  cd_gender,\n  cd_marital_status,\n  cd_education_status,\n  count(*) cnt1,\n  cd_purchase_estimate,\n  count(*) cnt2,\n  cd_credit_rating,\n  count(*) cnt3\n from\n  customer c,customer_address ca,customer_demographics\n where\n  c.c_current_addr_sk = ca.ca_address_sk and\n  ca_state in ('IA','GA','MN') and\n  cd_demo_sk = c.c_current_cdemo_sk and \n  exists (select *\n          from store_sales,date_dim\n          where c.c_customer_sk = ss_customer_sk and\n                ss_sold_date_sk = d_date_sk and\n                d_year = 2001 and\n                d_moy between 4 and 4+2) and\n   (not exists (select *\n            from web_sales,date_dim\n            where c.c_customer_sk = ws_bill_customer_sk and\n                  ws_sold_date_sk = d_date_sk and\n                  d_year = 2001 and\n                  d_moy between 4 and 4+2) and\n    not exists (select * \n            from catalog_sales,date_dim\n            where c.c_customer_sk = cs_ship_customer_sk and\n                  cs_sold_date_sk = d_date_sk and\n                  d_year = 2001 and\n                  d_moy between 4 and 4+2))\n group by cd_gender,\n          cd_marital_status,\n          cd_education_status,\n          cd_purchase_estimate,\n          cd_credit_rating\n order by cd_gender,\n          cd_marital_status,\n          cd_education_status,\n          cd_purchase_estimate,\n          cd_credit_rating\n limit 100;\n\n-- TPC-DS_query70\nselect  \n    sum(ss_net_profit) as total_sum\n   ,s_state\n   ,s_county\n   ,grouping(s_state)+grouping(s_county) as lochierarchy\n   ,rank() over (\n \tpartition by grouping(s_state)+grouping(s_county),\n \tcase when grouping(s_county) = 0 then s_state end \n \torder by sum(ss_net_profit) desc) as rank_within_parent\n from\n    store_sales\n   ,date_dim       d1\n   ,store\n where\n    d1.d_month_seq between 1210 and 1210+11\n and d1.d_date_sk = ss_sold_date_sk\n and s_store_sk  = ss_store_sk\n and s_state in\n             ( select s_state\n               from  (select s_state as s_state,\n \t\t\t    rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking\n                      from   store_sales, store, date_dim\n                      where  d_month_seq between 1210 and 1210+11\n \t\t\t    and d_date_sk = ss_sold_date_sk\n \t\t\t    and s_store_sk  = ss_store_sk\n                      group by s_state\n                     ) tmp1 \n               where ranking <= 5\n             )\n group by rollup(s_state,s_county)\n order by\n   lochierarchy desc\n  ,case when lochierarchy = 0 then s_state end\n  ,rank_within_parent\n limit 100;\n\n-- TPC-DS_query71\nselect i_brand_id brand_id, i_brand brand,t_hour,t_minute,\n \tsum(ext_price) ext_price\n from item, (select ws_ext_sales_price as ext_price, \n                        ws_sold_date_sk as sold_date_sk,\n                        ws_item_sk as sold_item_sk,\n                        ws_sold_time_sk as time_sk  \n                 from web_sales,date_dim\n                 where d_date_sk = ws_sold_date_sk\n                   and d_moy=11\n                   and d_year=2001\n                 union all\n                 select cs_ext_sales_price as ext_price,\n                        cs_sold_date_sk as sold_date_sk,\n                        cs_item_sk as sold_item_sk,\n                        cs_sold_time_sk as time_sk\n                 from catalog_sales,date_dim\n                 where d_date_sk = cs_sold_date_sk\n                   and d_moy=11\n                   and d_year=2001\n                 union all\n                 select ss_ext_sales_price as ext_price,\n                        ss_sold_date_sk as sold_date_sk,\n                        ss_item_sk as sold_item_sk,\n                        ss_sold_time_sk as time_sk\n                 from store_sales,date_dim\n                 where d_date_sk = ss_sold_date_sk\n                   and d_moy=11\n                   and d_year=2001\n                 ) tmp,time_dim\n where\n   sold_item_sk = i_item_sk\n   and i_manager_id=1\n   and time_sk = t_time_sk\n   and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')\n group by i_brand, i_brand_id,t_hour,t_minute\n order by ext_price desc, i_brand_id\n ;\n\n-- TPC-DS_query72\nselect  i_item_desc\n      ,w_warehouse_name\n      ,d1.d_week_seq\n      ,sum(case when p_promo_sk is null then 1 else 0 end) no_promo\n      ,sum(case when p_promo_sk is not null then 1 else 0 end) promo\n      ,count(*) total_cnt\nfrom catalog_sales\njoin inventory on (cs_item_sk = inv_item_sk)\njoin warehouse on (w_warehouse_sk=inv_warehouse_sk)\njoin item on (i_item_sk = cs_item_sk)\njoin customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)\njoin household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)\njoin date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)\njoin date_dim d2 on (inv_date_sk = d2.d_date_sk)\njoin date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)\nleft outer join promotion on (cs_promo_sk=p_promo_sk)\nleft outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)\nwhere d1.d_week_seq = d2.d_week_seq\n  and inv_quantity_on_hand < cs_quantity \n  and d3.d_date > dateadd(day,5,d1.d_date)\n  and hd_buy_potential = '>10000'\n  and d1.d_year = 2002\n  and cd_marital_status = 'M'\ngroup by i_item_desc,w_warehouse_name,d1.d_week_seq\norder by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq\nlimit 100;\n\n-- TPC-DS_query73\nselect c_last_name\n       ,c_first_name\n       ,c_salutation\n       ,c_preferred_cust_flag \n       ,ss_ticket_number\n       ,cnt from\n   (select ss_ticket_number\n          ,ss_customer_sk\n          ,count(*) cnt\n    from store_sales,date_dim,store,household_demographics\n    where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n    and store_sales.ss_store_sk = store.s_store_sk  \n    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    and date_dim.d_dom between 1 and 2 \n    and (household_demographics.hd_buy_potential = '>10000' or\n         household_demographics.hd_buy_potential = '0-500')\n    and household_demographics.hd_vehicle_count > 0\n    and case when household_demographics.hd_vehicle_count > 0 then \n             household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count else null end > 1\n    and date_dim.d_year in (1998,1998+1,1998+2)\n    and store.s_county in ('Orange County','San Miguel County','Williamson County','Brazos County')\n    group by ss_ticket_number,ss_customer_sk) dj,customer\n    where ss_customer_sk = c_customer_sk\n      and cnt between 1 and 5\n    order by cnt desc, c_last_name asc;\n\n-- TPC-DS_query74\nwith year_total as (\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,d_year as year\n       ,min(ss_net_paid) year_total\n       ,'s' sale_type\n from customer\n     ,store_sales\n     ,date_dim\n where c_customer_sk = ss_customer_sk\n   and ss_sold_date_sk = d_date_sk\n   and d_year in (2001,2001+1)\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,d_year\n union all\n select c_customer_id customer_id\n       ,c_first_name customer_first_name\n       ,c_last_name customer_last_name\n       ,d_year as year\n       ,min(ws_net_paid) year_total\n       ,'w' sale_type\n from customer\n     ,web_sales\n     ,date_dim\n where c_customer_sk = ws_bill_customer_sk\n   and ws_sold_date_sk = d_date_sk\n   and d_year in (2001,2001+1)\n group by c_customer_id\n         ,c_first_name\n         ,c_last_name\n         ,d_year\n         )\n  select \n        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name\n from year_total t_s_firstyear\n     ,year_total t_s_secyear\n     ,year_total t_w_firstyear\n     ,year_total t_w_secyear\n where t_s_secyear.customer_id = t_s_firstyear.customer_id\n         and t_s_firstyear.customer_id = t_w_secyear.customer_id\n         and t_s_firstyear.customer_id = t_w_firstyear.customer_id\n         and t_s_firstyear.sale_type = 's'\n         and t_w_firstyear.sale_type = 'w'\n         and t_s_secyear.sale_type = 's'\n         and t_w_secyear.sale_type = 'w'\n         and t_s_firstyear.year = 2001\n         and t_s_secyear.year = 2001+1\n         and t_w_firstyear.year = 2001\n         and t_w_secyear.year = 2001+1\n         and t_s_firstyear.year_total > 0\n         and t_w_firstyear.year_total > 0\n         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end\n           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end\n order by 3,2,1\nlimit 100;\n\n-- TPC-DS_query75\nWITH all_sales AS (\n SELECT d_year\n       ,i_brand_id\n       ,i_class_id\n       ,i_category_id\n       ,i_manufact_id\n       ,SUM(sales_cnt) AS sales_cnt\n       ,SUM(sales_amt) AS sales_amt\n FROM (SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt\n             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt\n       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk\n                          JOIN date_dim ON d_date_sk=cs_sold_date_sk\n                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number \n                                                    AND cs_item_sk=cr_item_sk)\n       WHERE i_category='Shoes'\n       UNION\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt\n             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt\n       FROM store_sales JOIN item ON i_item_sk=ss_item_sk\n                        JOIN date_dim ON d_date_sk=ss_sold_date_sk\n                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number \n                                                AND ss_item_sk=sr_item_sk)\n       WHERE i_category='Shoes'\n       UNION\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt\n             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt\n       FROM web_sales JOIN item ON i_item_sk=ws_item_sk\n                      JOIN date_dim ON d_date_sk=ws_sold_date_sk\n                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number \n                                            AND ws_item_sk=wr_item_sk)\n       WHERE i_category='Shoes') sales_detail\n GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)\n SELECT  prev_yr.d_year AS prev_year\n                          ,curr_yr.d_year AS year\n                          ,curr_yr.i_brand_id\n                          ,curr_yr.i_class_id\n                          ,curr_yr.i_category_id\n                          ,curr_yr.i_manufact_id\n                          ,prev_yr.sales_cnt AS prev_yr_cnt\n                          ,curr_yr.sales_cnt AS curr_yr_cnt\n                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff\n                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff\n FROM all_sales curr_yr, all_sales prev_yr\n WHERE curr_yr.i_brand_id=prev_yr.i_brand_id\n   AND curr_yr.i_class_id=prev_yr.i_class_id\n   AND curr_yr.i_category_id=prev_yr.i_category_id\n   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id\n   AND curr_yr.d_year=2000\n   AND prev_yr.d_year=2000-1\n   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9\n ORDER BY sales_cnt_diff,sales_amt_diff\n limit 100;\n\n-- TPC-DS_query76\nselect  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (\n        SELECT 'store' as channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price\n         FROM store_sales, item, date_dim\n         WHERE ss_hdemo_sk IS NULL\n           AND ss_sold_date_sk=d_date_sk\n           AND ss_item_sk=i_item_sk\n        UNION ALL\n        SELECT 'web' as channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price\n         FROM web_sales, item, date_dim\n         WHERE ws_ship_mode_sk IS NULL\n           AND ws_sold_date_sk=d_date_sk\n           AND ws_item_sk=i_item_sk\n        UNION ALL\n        SELECT 'catalog' as channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price\n         FROM catalog_sales, item, date_dim\n         WHERE cs_ship_customer_sk IS NULL\n           AND cs_sold_date_sk=d_date_sk\n           AND cs_item_sk=i_item_sk) foo\nGROUP BY channel, col_name, d_year, d_qoy, i_category\nORDER BY channel, col_name, d_year, d_qoy, i_category\nlimit 100;\n\n-- TPC-DS_query77\nwith ss as\n (select s_store_sk,\n         sum(ss_ext_sales_price) as sales,\n         sum(ss_net_profit) as profit\n from store_sales,\n      date_dim,\n      store\n where ss_sold_date_sk = d_date_sk\n       and d_date between cast('1998-08-21' as date) \n                   and (dateadd(day,30,to_date('1998-08-21')))\n       and ss_store_sk = s_store_sk\n group by s_store_sk)\n ,\n sr as\n (select s_store_sk,\n         sum(sr_return_amt) as returns,\n         sum(sr_net_loss) as profit_loss\n from store_returns,\n      date_dim,\n      store\n where sr_returned_date_sk = d_date_sk\n       and d_date between cast('1998-08-21' as date)\n                   and (dateadd(day,30,to_date('1998-08-21')))\n       and sr_store_sk = s_store_sk\n group by s_store_sk), \n cs as\n (select cs_call_center_sk,\n        sum(cs_ext_sales_price) as sales,\n        sum(cs_net_profit) as profit\n from catalog_sales,\n      date_dim\n where cs_sold_date_sk = d_date_sk\n       and d_date between cast('1998-08-21' as date)\n                   and (dateadd(day,30,to_date('1998-08-21')))\n group by cs_call_center_sk \n ), \n cr as\n (select cr_call_center_sk,\n         sum(cr_return_amount) as returns,\n         sum(cr_net_loss) as profit_loss\n from catalog_returns,\n      date_dim\n where cr_returned_date_sk = d_date_sk\n       and d_date between cast('1998-08-21' as date)\n                   and (dateadd(day,30,to_date('1998-08-21')))\n group by cr_call_center_sk\n ), \n ws as\n ( select wp_web_page_sk,\n        sum(ws_ext_sales_price) as sales,\n        sum(ws_net_profit) as profit\n from web_sales,\n      date_dim,\n      web_page\n where ws_sold_date_sk = d_date_sk\n       and d_date between cast('1998-08-21' as date)\n                   and (dateadd(day,30,to_date('1998-08-21')))\n       and ws_web_page_sk = wp_web_page_sk\n group by wp_web_page_sk), \n wr as\n (select wp_web_page_sk,\n        sum(wr_return_amt) as returns,\n        sum(wr_net_loss) as profit_loss\n from web_returns,\n      date_dim,\n      web_page\n where wr_returned_date_sk = d_date_sk\n       and d_date between cast('1998-08-21' as date)\n                   and (dateadd(day,30,to_date('1998-08-21')))\n       and wr_web_page_sk = wp_web_page_sk\n group by wp_web_page_sk)\n  select  channel\n        , id\n        , sum(sales) as sales\n        , sum(returns) as returns\n        , sum(profit) as profit\n from \n (select 'store channel' as channel\n        , ss.s_store_sk as id\n        , sales\n        , coalesce(returns, 0) as returns\n        , (profit - coalesce(profit_loss,0)) as profit\n from   ss left join sr\n        on  ss.s_store_sk = sr.s_store_sk\n union all\n select 'catalog channel' as channel\n        , cs_call_center_sk as id\n        , sales\n        , returns\n        , (profit - profit_loss) as profit\n from  cs\n       , cr\n union all\n select 'web channel' as channel\n        , ws.wp_web_page_sk as id\n        , sales\n        , coalesce(returns, 0) returns\n        , (profit - coalesce(profit_loss,0)) as profit\n from   ws left join wr\n        on  ws.wp_web_page_sk = wr.wp_web_page_sk\n ) x\n group by rollup (channel, id)\n order by channel\n         ,id\n limit 100;\n\n-- TPC-DS_query78\nwith ws as\n  (select d_year AS ws_sold_year, ws_item_sk,\n    ws_bill_customer_sk ws_customer_sk,\n    sum(ws_quantity) ws_qty,\n    sum(ws_wholesale_cost) ws_wc,\n    sum(ws_sales_price) ws_sp\n   from web_sales\n   left join web_returns on wr_order_number=ws_order_number and ws_item_sk=wr_item_sk\n   join date_dim on ws_sold_date_sk = d_date_sk\n   where wr_order_number is null\n   group by d_year, ws_item_sk, ws_bill_customer_sk\n   ),\ncs as\n  (select d_year AS cs_sold_year, cs_item_sk,\n    cs_bill_customer_sk cs_customer_sk,\n    sum(cs_quantity) cs_qty,\n    sum(cs_wholesale_cost) cs_wc,\n    sum(cs_sales_price) cs_sp\n   from catalog_sales\n   left join catalog_returns on cr_order_number=cs_order_number and cs_item_sk=cr_item_sk\n   join date_dim on cs_sold_date_sk = d_date_sk\n   where cr_order_number is null\n   group by d_year, cs_item_sk, cs_bill_customer_sk\n   ),\nss as\n  (select d_year AS ss_sold_year, ss_item_sk,\n    ss_customer_sk,\n    sum(ss_quantity) ss_qty,\n    sum(ss_wholesale_cost) ss_wc,\n    sum(ss_sales_price) ss_sp\n   from store_sales\n   left join store_returns on sr_ticket_number=ss_ticket_number and ss_item_sk=sr_item_sk\n   join date_dim on ss_sold_date_sk = d_date_sk\n   where sr_ticket_number is null\n   group by d_year, ss_item_sk, ss_customer_sk\n   )\n select \nss_customer_sk,\nround(ss_qty/(coalesce(ws_qty,0)+coalesce(cs_qty,0)),2) ratio,\nss_qty store_qty, ss_wc store_wholesale_cost, ss_sp store_sales_price,\ncoalesce(ws_qty,0)+coalesce(cs_qty,0) other_chan_qty,\ncoalesce(ws_wc,0)+coalesce(cs_wc,0) other_chan_wholesale_cost,\ncoalesce(ws_sp,0)+coalesce(cs_sp,0) other_chan_sales_price\nfrom ss\nleft join ws on (ws_sold_year=ss_sold_year and ws_item_sk=ss_item_sk and ws_customer_sk=ss_customer_sk)\nleft join cs on (cs_sold_year=ss_sold_year and cs_item_sk=ss_item_sk and cs_customer_sk=ss_customer_sk)\nwhere (coalesce(ws_qty,0)>0 or coalesce(cs_qty, 0)>0) and ss_sold_year=2001\norder by \n  ss_customer_sk,\n  ss_qty desc, ss_wc desc, ss_sp desc,\n  other_chan_qty,\n  other_chan_wholesale_cost,\n  other_chan_sales_price,\n  ratio\nlimit 100;\n\n-- TPC-DS_query79\nselect \n  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit\n  from\n   (select ss_ticket_number\n          ,ss_customer_sk\n          ,store.s_city\n          ,sum(ss_coupon_amt) amt\n          ,sum(ss_net_profit) profit\n    from store_sales,date_dim,store,household_demographics\n    where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n    and store_sales.ss_store_sk = store.s_store_sk  \n    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    and (household_demographics.hd_dep_count = 1 or household_demographics.hd_vehicle_count > 3)\n    and date_dim.d_dow = 1\n    and date_dim.d_year in (2000,2000+1,2000+2) \n    and store.s_number_employees between 200 and 295\n    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer\n    where ss_customer_sk = c_customer_sk\n order by c_last_name,c_first_name,substr(s_city,1,30), profit\nlimit 100;\n\n-- TPC-DS_query80\nwith ssr as\n (select  s_store_id as store_id,\n          sum(ss_ext_sales_price) as sales,\n          sum(coalesce(sr_return_amt, 0)) as returns,\n          sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit\n  from store_sales left outer join store_returns on\n         (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),\n     date_dim,\n     store,\n     item,\n     promotion\n where ss_sold_date_sk = d_date_sk\n       and d_date between cast('2002-08-04' as date) \n                  and dateadd(day,30,to_date('2002-08-04'))\n       and ss_store_sk = s_store_sk\n       and ss_item_sk = i_item_sk\n       and i_current_price > 50\n       and ss_promo_sk = p_promo_sk\n       and p_channel_tv = 'N'\n group by s_store_id)\n ,\n csr as\n (select  cp_catalog_page_id as catalog_page_id,\n          sum(cs_ext_sales_price) as sales,\n          sum(coalesce(cr_return_amount, 0)) as returns,\n          sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit\n  from catalog_sales left outer join catalog_returns on\n         (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),\n     date_dim,\n     catalog_page,\n     item,\n     promotion\n where cs_sold_date_sk = d_date_sk\n       and d_date between cast('2002-08-04' as date)\n                  and dateadd(day,30,to_date('2002-08-04'))\n        and cs_catalog_page_sk = cp_catalog_page_sk\n       and cs_item_sk = i_item_sk\n       and i_current_price > 50\n       and cs_promo_sk = p_promo_sk\n       and p_channel_tv = 'N'\ngroup by cp_catalog_page_id)\n ,\n wsr as\n (select  web_site_id,\n          sum(ws_ext_sales_price) as sales,\n          sum(coalesce(wr_return_amt, 0)) as returns,\n          sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit\n  from web_sales left outer join web_returns on\n         (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),\n     date_dim,\n     web_site,\n     item,\n     promotion\n where ws_sold_date_sk = d_date_sk\n       and d_date between cast('2002-08-04' as date)\n                  and dateadd(day,30,to_date('2002-08-04'))\n        and ws_web_site_sk = web_site_sk\n       and ws_item_sk = i_item_sk\n       and i_current_price > 50\n       and ws_promo_sk = p_promo_sk\n       and p_channel_tv = 'N'\ngroup by web_site_id)\n  select  channel\n        , id\n        , sum(sales) as sales\n        , sum(returns) as returns\n        , sum(profit) as profit\n from \n (select 'store channel' as channel\n        , 'store' || store_id as id\n        , sales\n        , returns\n        , profit\n from   ssr\n union all\n select 'catalog channel' as channel\n        , 'catalog_page' || catalog_page_id as id\n        , sales\n        , returns\n        , profit\n from  csr\n union all\n select 'web channel' as channel\n        , 'web_site' || web_site_id as id\n        , sales\n        , returns\n        , profit\n from   wsr\n ) x\n group by rollup (channel, id)\n order by channel\n         ,id\n limit 100;\n\n-- TPC-DS_query81\nwith customer_total_return as\n (select cr_returning_customer_sk as ctr_customer_sk\n        ,ca_state as ctr_state, \n \tsum(cr_return_amt_inc_tax) as ctr_total_return\n from catalog_returns\n     ,date_dim\n     ,customer_address\n where cr_returned_date_sk = d_date_sk \n   and d_year =2000\n   and cr_returning_addr_sk = ca_address_sk \n group by cr_returning_customer_sk\n         ,ca_state )\n  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name\n                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset\n                  ,ca_location_type,ctr_total_return\n from customer_total_return ctr1\n     ,customer_address\n     ,customer\n where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2\n \t\t\t  from customer_total_return ctr2 \n                  \t  where ctr1.ctr_state = ctr2.ctr_state)\n       and ca_address_sk = c_current_addr_sk\n       and ca_state = 'VA'\n       and ctr1.ctr_customer_sk = c_customer_sk\n order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name\n                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset\n                  ,ca_location_type,ctr_total_return\n limit 100;\n\n-- TPC-DS_query82\nselect  i_item_id\n       ,i_item_desc\n       ,i_current_price\n from item, inventory, date_dim, store_sales\n where i_current_price between 72 and 72+30\n and inv_item_sk = i_item_sk\n and d_date_sk=inv_date_sk\n and d_date between cast('1998-01-23' as date) and dateadd(day,60,to_date('1998-01-23'))\n and i_manufact_id in (412,343,781,156)\n and inv_quantity_on_hand between 100 and 500\n and ss_item_sk = i_item_sk\n group by i_item_id,i_item_desc,i_current_price\n order by i_item_id\n limit 100;\n\n-- TPC-DS_query83\nwith sr_items as\n (select i_item_id item_id,\n        sum(sr_return_quantity) sr_item_qty\n from store_returns,\n      item,\n      date_dim\n where sr_item_sk = i_item_sk\n and   d_date    in \n\t(select d_date\n\tfrom date_dim\n\twhere d_week_seq in \n\t\t(select d_week_seq\n\t\tfrom date_dim\n\t  where d_date in ('1998-02-20','1998-09-28','1998-11-14')))\n and   sr_returned_date_sk   = d_date_sk\n group by i_item_id),\n cr_items as\n (select i_item_id item_id,\n        sum(cr_return_quantity) cr_item_qty\n from catalog_returns,\n      item,\n      date_dim\n where cr_item_sk = i_item_sk\n and   d_date    in \n\t(select d_date\n\tfrom date_dim\n\twhere d_week_seq in \n\t\t(select d_week_seq\n\t\tfrom date_dim\n\t  where d_date in ('1998-02-20','1998-09-28','1998-11-14')))\n and   cr_returned_date_sk   = d_date_sk\n group by i_item_id),\n wr_items as\n (select i_item_id item_id,\n        sum(wr_return_quantity) wr_item_qty\n from web_returns,\n      item,\n      date_dim\n where wr_item_sk = i_item_sk\n and   d_date    in \n\t(select d_date\n\tfrom date_dim\n\twhere d_week_seq in \n\t\t(select d_week_seq\n\t\tfrom date_dim\n\t\twhere d_date in ('1998-02-20','1998-09-28','1998-11-14')))\n and   wr_returned_date_sk   = d_date_sk\n group by i_item_id)\n  select  sr_items.item_id\n       ,sr_item_qty\n       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev\n       ,cr_item_qty\n       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev\n       ,wr_item_qty\n       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev\n       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average\n from sr_items\n     ,cr_items\n     ,wr_items\n where sr_items.item_id=cr_items.item_id\n   and sr_items.item_id=wr_items.item_id \n order by sr_items.item_id\n         ,sr_item_qty\n limit 100;\n\n-- TPC-DS_query84\nselect  c_customer_id as customer_id\n       , coalesce(c_last_name,'') || ', ' || coalesce(c_first_name,'') as customername\n from customer\n     ,customer_address\n     ,customer_demographics\n     ,household_demographics\n     ,income_band\n     ,store_returns\n where ca_city\t        =  'Shady Grove'\n   and c_current_addr_sk = ca_address_sk\n   and ib_lower_bound   >=  29438\n   and ib_upper_bound   <=  29438 + 50000\n   and ib_income_band_sk = hd_income_band_sk\n   and cd_demo_sk = c_current_cdemo_sk\n   and hd_demo_sk = c_current_hdemo_sk\n   and sr_cdemo_sk = cd_demo_sk\n order by c_customer_id\n limit 100;\n\n-- TPC-DS_query85\nselect  substr(r_reason_desc,1,20)\n       ,avg(ws_quantity)\n       ,avg(wr_refunded_cash)\n       ,avg(wr_fee)\n from web_sales, web_returns, web_page, customer_demographics cd1,\n      customer_demographics cd2, customer_address, date_dim, reason \n where ws_web_page_sk = wp_web_page_sk\n   and ws_item_sk = wr_item_sk\n   and ws_order_number = wr_order_number\n   and ws_sold_date_sk = d_date_sk and d_year = 1998\n   and cd1.cd_demo_sk = wr_refunded_cdemo_sk \n   and cd2.cd_demo_sk = wr_returning_cdemo_sk\n   and ca_address_sk = wr_refunded_addr_sk\n   and r_reason_sk = wr_reason_sk\n   and\n   (\n    (\n     cd1.cd_marital_status = 'D'\n     and\n     cd1.cd_marital_status = cd2.cd_marital_status\n     and\n     cd1.cd_education_status = 'Primary'\n     and \n     cd1.cd_education_status = cd2.cd_education_status\n     and\n     ws_sales_price between 100.00 and 150.00\n    )\n   or\n    (\n     cd1.cd_marital_status = 'U'\n     and\n     cd1.cd_marital_status = cd2.cd_marital_status\n     and\n     cd1.cd_education_status = '4 yr Degree' \n     and\n     cd1.cd_education_status = cd2.cd_education_status\n     and\n     ws_sales_price between 50.00 and 100.00\n    )\n   or\n    (\n     cd1.cd_marital_status = 'W'\n     and\n     cd1.cd_marital_status = cd2.cd_marital_status\n     and\n     cd1.cd_education_status = 'Advanced Degree'\n     and\n     cd1.cd_education_status = cd2.cd_education_status\n     and\n     ws_sales_price between 150.00 and 200.00\n    )\n   )\n   and\n   (\n    (\n     ca_country = 'United States'\n     and\n     ca_state in ('LA', 'CO', 'TX')\n     and ws_net_profit between 100 and 200  \n    )\n    or\n    (\n     ca_country = 'United States'\n     and\n     ca_state in ('OH', 'VA', 'MO')\n     and ws_net_profit between 150 and 300  \n    )\n    or\n    (\n     ca_country = 'United States'\n     and\n     ca_state in ('FL', 'OK', 'MS')\n     and ws_net_profit between 50 and 250  \n    )\n   )\ngroup by r_reason_desc\norder by substr(r_reason_desc,1,20)\n        ,avg(ws_quantity)\n        ,avg(wr_refunded_cash)\n        ,avg(wr_fee)\nlimit 100;\n\n-- TPC-DS_query86\nselect   \n    sum(ws_net_paid) as total_sum\n   ,i_category\n   ,i_class\n   ,grouping(i_category)+grouping(i_class) as lochierarchy\n   ,rank() over (\n \tpartition by grouping(i_category)+grouping(i_class),\n \tcase when grouping(i_class) = 0 then i_category end \n \torder by sum(ws_net_paid) desc) as rank_within_parent\n from\n    web_sales\n   ,date_dim       d1\n   ,item\n where\n    d1.d_month_seq between 1205 and 1205+11\n and d1.d_date_sk = ws_sold_date_sk\n and i_item_sk  = ws_item_sk\n group by rollup(i_category,i_class)\n order by\n   lochierarchy desc,\n   case when lochierarchy = 0 then i_category end,\n   rank_within_parent\n limit 100;\n\n-- TPC-DS_query87\nselect count(*) \nfrom ((select distinct c_last_name, c_first_name, d_date\n       from store_sales, date_dim, customer\n       where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n         and store_sales.ss_customer_sk = customer.c_customer_sk\n         and d_month_seq between 1208 and 1208+11)\n       except\n      (select distinct c_last_name, c_first_name, d_date\n       from catalog_sales, date_dim, customer\n       where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk\n         and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk\n         and d_month_seq between 1208 and 1208+11)\n       except\n      (select distinct c_last_name, c_first_name, d_date\n       from web_sales, date_dim, customer\n       where web_sales.ws_sold_date_sk = date_dim.d_date_sk\n         and web_sales.ws_bill_customer_sk = customer.c_customer_sk\n         and d_month_seq between 1208 and 1208+11)\n) cool_cust\n;\n\n-- TPC-DS_query88\nselect  *\nfrom\n (select count(*) h8_30_to_9\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk   \n     and ss_hdemo_sk = household_demographics.hd_demo_sk \n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 8\n     and time_dim.t_minute >= 30\n     and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n          (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2)) \n     and store.s_store_name = 'ese') s1,\n (select count(*) h9_to_9_30 \n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk \n     and time_dim.t_hour = 9 \n     and time_dim.t_minute < 30\n     and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n          (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n     and store.s_store_name = 'ese') s2,\n (select count(*) h9_30_to_10 \n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 9\n     and time_dim.t_minute >= 30\n     and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n          (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n     and store.s_store_name = 'ese') s3,\n (select count(*) h10_to_10_30\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 10 \n     and time_dim.t_minute < 30\n     and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n          (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n     and store.s_store_name = 'ese') s4,\n (select count(*) h10_30_to_11\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 10 \n     and time_dim.t_minute >= 30\n     and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n          (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n     and store.s_store_name = 'ese') s5,\n (select count(*) h11_to_11_30\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk \n     and time_dim.t_hour = 11\n     and time_dim.t_minute < 30\n     and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n          (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n     and store.s_store_name = 'ese') s6,\n (select count(*) h11_30_to_12\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 11\n     and time_dim.t_minute >= 30\n     and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n          (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n     and store.s_store_name = 'ese') s7,\n (select count(*) h12_to_12_30\n from store_sales, household_demographics , time_dim, store\n where ss_sold_time_sk = time_dim.t_time_sk\n     and ss_hdemo_sk = household_demographics.hd_demo_sk\n     and ss_store_sk = s_store_sk\n     and time_dim.t_hour = 12\n     and time_dim.t_minute < 30\n     and ((household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or\n          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or\n          (household_demographics.hd_dep_count = -1 and household_demographics.hd_vehicle_count<=-1+2))\n     and store.s_store_name = 'ese') s8\n;\n\n-- TPC-DS_query89\nselect  *\nfrom(\nselect i_category, i_class, i_brand,\n       s_store_name, s_company_name,\n       d_moy,\n       sum(ss_sales_price) sum_sales,\n       avg(sum(ss_sales_price)) over\n         (partition by i_category, i_brand, s_store_name, s_company_name)\n         avg_monthly_sales\nfrom item, store_sales, date_dim, store\nwhere ss_item_sk = i_item_sk and\n      ss_sold_date_sk = d_date_sk and\n      ss_store_sk = s_store_sk and\n      d_year in (2000) and\n        ((i_category in ('Electronics','Women','Home') and\n          i_class in ('cameras','maternity','kids')\n         )\n      or (i_category in ('Sports','Jewelry','Shoes') and\n          i_class in ('guns','semi-precious','athletic') \n        ))\ngroup by i_category, i_class, i_brand,\n         s_store_name, s_company_name, d_moy) tmp1\nwhere case when (avg_monthly_sales <> 0) then (abs(sum_sales - avg_monthly_sales) / avg_monthly_sales) else null end > 0.1\norder by sum_sales - avg_monthly_sales, s_store_name\nlimit 100;\n\n-- TPC-DS_query90\nselect  cast(amc as decimal(15,4))/cast(pmc as decimal(15,4)) am_pm_ratio\n from ( select count(*) amc\n       from web_sales, household_demographics , time_dim, web_page\n       where ws_sold_time_sk = time_dim.t_time_sk\n         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk\n         and ws_web_page_sk = web_page.wp_web_page_sk\n         and time_dim.t_hour between 8 and 8+1\n         and household_demographics.hd_dep_count = 9\n         and web_page.wp_char_count between 5000 and 5200) at,\n      ( select count(*) pmc\n       from web_sales, household_demographics , time_dim, web_page\n       where ws_sold_time_sk = time_dim.t_time_sk\n         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk\n         and ws_web_page_sk = web_page.wp_web_page_sk\n         and time_dim.t_hour between 18 and 18+1\n         and household_demographics.hd_dep_count = 9\n         and web_page.wp_char_count between 5000 and 5200) pt\n order by am_pm_ratio\n limit 100;\n\n-- TPC-DS_query91\nselect  \n        cc_call_center_id Call_Center,\n        cc_name Call_Center_Name,\n        cc_manager Manager,\n        sum(cr_net_loss) Returns_Loss\nfrom\n        call_center,\n        catalog_returns,\n        date_dim,\n        customer,\n        customer_address,\n        customer_demographics,\n        household_demographics\nwhere\n        cr_call_center_sk       = cc_call_center_sk\nand     cr_returned_date_sk     = d_date_sk\nand     cr_returning_customer_sk= c_customer_sk\nand     cd_demo_sk              = c_current_cdemo_sk\nand     hd_demo_sk              = c_current_hdemo_sk\nand     ca_address_sk           = c_current_addr_sk\nand     d_year                  = 2002 \nand     d_moy                   = 11\nand     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')\n        or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree'))\nand     hd_buy_potential like 'Unknown%'\nand     ca_gmt_offset           = -6\ngroup by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status\norder by sum(cr_net_loss) desc;\n\n-- TPC-DS_query92\nselect  \n   sum(ws_ext_discount_amt)  as \"Excess Discount Amount\" \nfrom \n    web_sales \n   ,item \n   ,date_dim\nwhere\ni_manufact_id = 939\nand i_item_sk = ws_item_sk \nand d_date between '2002-02-16' and \n        dateadd(day,90,to_date('2002-02-16'))\nand d_date_sk = ws_sold_date_sk \nand ws_ext_discount_amt  \n     > ( \n         SELECT \n            1.3 * avg(ws_ext_discount_amt) \n         FROM \n            web_sales \n           ,date_dim\n         WHERE \n              ws_item_sk = i_item_sk \n          and d_date between '2002-02-16' and\n                             dateadd(day,90,to_date('2002-02-16'))\n          and d_date_sk = ws_sold_date_sk \n      ) \norder by sum(ws_ext_discount_amt)\nlimit 100;\n\n-- TPC-DS_query93\nselect  ss_customer_sk\n            ,sum(act_sales) sumsales\n      from (select ss_item_sk\n                  ,ss_ticket_number\n                  ,ss_customer_sk\n                  ,case when sr_return_quantity is not null then (ss_quantity-sr_return_quantity)*ss_sales_price\n                                                            else (ss_quantity*ss_sales_price) end act_sales\n            from store_sales left outer join store_returns on (sr_item_sk = ss_item_sk\n                                                               and sr_ticket_number = ss_ticket_number)\n                ,reason\n            where sr_reason_sk = r_reason_sk\n              and r_reason_desc = 'reason 70') t\n      group by ss_customer_sk\n      order by sumsales, ss_customer_sk\nlimit 100;\n\n-- TPC-DS_query94\nselect  \n   count(distinct ws_order_number) as \"order count\"\n  ,sum(ws_ext_ship_cost) as \"total shipping cost\"\n  ,sum(ws_net_profit) as \"total net profit\"\nfrom\n   web_sales ws1\n  ,date_dim\n  ,customer_address\n  ,web_site\nwhere\n    d_date between '2002-2-01' and \n           dateadd(day,60,to_date('2002-2-01'))\nand ws1.ws_ship_date_sk = d_date_sk\nand ws1.ws_ship_addr_sk = ca_address_sk\nand ca_state = 'CA'\nand ws1.ws_web_site_sk = web_site_sk\nand web_company_name = 'pri'\nand exists (select *\n            from web_sales ws2\n            where ws1.ws_order_number = ws2.ws_order_number\n              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)\nand not exists(select *\n               from web_returns wr1\n               where ws1.ws_order_number = wr1.wr_order_number)\norder by count(distinct ws_order_number)\nlimit 100;\n\n-- TPC-DS_query95\nwith ws_wh as\n(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2\n from web_sales ws1,web_sales ws2\n where ws1.ws_order_number = ws2.ws_order_number\n   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)\n select  \n   count(distinct ws_order_number) as \"order count\"\n  ,sum(ws_ext_ship_cost) as \"total shipping cost\"\n  ,sum(ws_net_profit) as \"total net profit\"\nfrom\n   web_sales ws1\n  ,date_dim\n  ,customer_address\n  ,web_site\nwhere\n    d_date between '2002-2-01' and \n           dateadd(day,60,to_date('2002-2-01'))\nand ws1.ws_ship_date_sk = d_date_sk\nand ws1.ws_ship_addr_sk = ca_address_sk\nand ca_state = 'TN'\nand ws1.ws_web_site_sk = web_site_sk\nand web_company_name = 'pri'\nand ws1.ws_order_number in (select ws_order_number\n                            from ws_wh)\nand ws1.ws_order_number in (select wr_order_number\n                            from web_returns,ws_wh\n                            where wr_order_number = ws_wh.ws_order_number)\norder by count(distinct ws_order_number)\nlimit 100;\n\n-- TPC-DS_query96\nselect  count(*) \nfrom store_sales\n    ,household_demographics \n    ,time_dim, store\nwhere ss_sold_time_sk = time_dim.t_time_sk   \n    and ss_hdemo_sk = household_demographics.hd_demo_sk \n    and ss_store_sk = s_store_sk\n    and time_dim.t_hour = 8\n    and time_dim.t_minute >= 30\n    and household_demographics.hd_dep_count = 5\n    and store.s_store_name = 'ese'\norder by count(*)\nlimit 100;\n\n-- TPC-DS_query97\nwith ssci as (\nselect ss_customer_sk customer_sk\n      ,ss_item_sk item_sk\nfrom store_sales,date_dim\nwhere ss_sold_date_sk = d_date_sk\n  and d_month_seq between 1214 and 1214 + 11\ngroup by ss_customer_sk\n        ,ss_item_sk),\ncsci as(\n select cs_bill_customer_sk customer_sk\n      ,cs_item_sk item_sk\nfrom catalog_sales,date_dim\nwhere cs_sold_date_sk = d_date_sk\n  and d_month_seq between 1214 and 1214 + 11\ngroup by cs_bill_customer_sk\n        ,cs_item_sk)\n select  sum(case when ssci.customer_sk is not null and csci.customer_sk is null then 1 else 0 end) store_only\n      ,sum(case when ssci.customer_sk is null and csci.customer_sk is not null then 1 else 0 end) catalog_only\n      ,sum(case when ssci.customer_sk is not null and csci.customer_sk is not null then 1 else 0 end) store_and_catalog\nfrom ssci full outer join csci on (ssci.customer_sk=csci.customer_sk\n                               and ssci.item_sk = csci.item_sk)\nlimit 100;\n\n-- TPC-DS_query98\nselect i_item_id\n      ,i_item_desc \n      ,i_category \n      ,i_class \n      ,i_current_price\n      ,sum(ss_ext_sales_price) as itemrevenue \n      ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over\n          (partition by i_class) as revenueratio\nfrom\t\n\tstore_sales\n    \t,item \n    \t,date_dim\nwhere \n\tss_item_sk = i_item_sk \n  \tand i_category in ('Women', 'Electronics', 'Shoes')\n  \tand ss_sold_date_sk = d_date_sk\n\tand d_date between cast('2002-05-27' as date) \n\t\t\t\tand dateadd(day,30,to_date('2002-05-27'))\ngroup by \n\ti_item_id\n        ,i_item_desc \n        ,i_category\n        ,i_class\n        ,i_current_price\norder by \n\ti_category\n        ,i_class\n        ,i_item_id\n        ,i_item_desc\n        ,revenueratio;\n\n-- TPC-DS_query99\nselect  \n   substr(w_warehouse_name,1,20)\n  ,sm_type\n  ,cc_name\n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\" \n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 30) and \n                 (cs_ship_date_sk - cs_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\" \n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 60) and \n                 (cs_ship_date_sk - cs_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\" \n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 90) and\n                 (cs_ship_date_sk - cs_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\" \n  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\" \nfrom\n   catalog_sales\n  ,warehouse\n  ,ship_mode\n  ,call_center\n  ,date_dim\nwhere\n    d_month_seq between 1200 and 1200 + 11\nand cs_ship_date_sk   = d_date_sk\nand cs_warehouse_sk   = w_warehouse_sk\nand cs_ship_mode_sk   = sm_ship_mode_sk\nand cs_call_center_sk = cc_call_center_sk\ngroup by\n   substr(w_warehouse_name,1,20)\n  ,sm_type\n  ,cc_name\norder by substr(w_warehouse_name,1,20)\n        ,sm_type\n        ,cc_name\nlimit 100;\n", "queryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "transforms": [], "queryLanguage": "sql", "pid": "YRpdV0ju00", "name": "Sample queries on TPC-DS data", "orgId": "202346043869", "ownerId": "505987850600", "folderId": "HF2dREvK", "visibility": "private", "modified": "2024-03-02T03:11:16.192912Z", "version": 2, "isParamQuery": false, "projectType": "query", "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": ""}, "editable": true, "runnable": true, "resultsViewable": true, "url": "/qtmrtgh/tq29126/wYRpdV0ju00#query", "slug": "wYRpdV0ju00", "members": [{"memberType": "user", "userId": "505987850600", "memberId": "505987850600", "role": "owner", "hasRole": true}], "hasRequiredRole": true}}, "dbSchemas": {}, "worksheetImports": {}, "drafts": {"1R76n41a2ek": {"query": "SELECT 1;\nSELECT 2;\nSELECT 'A';", "paramRefs": [], "queryRange": null, "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": "NONE"}, "queryLanguage": "sql", "appSessionId": 533735403745, "version": 3, "modifiedTime": 1711199486563}, "1nZ3VDPBUoI": {"query": "/*--\nTasty Bytes is a fictitious, global food truck network, that is on a mission to serve unique food options with high\nquality items in a safe, convenient and cost effective way. In order to drive forward on their mission, Tasty Bytes\nis beginning to leverage the Snowflake Data Cloud.\n\nWithin this Worksheet, we will walk through the end to end process required to load a CSV file containing Menu specific data\nthat is currently hosted in Blob Storage.\n--*/\n\n-------------------------------------------------------------------------------------------\n    -- Step 1: To start, let's set the Role and Warehouse context\n        -- USE ROLE: https://docs.snowflake.com/en/sql-reference/sql/use-role\n        -- USE WAREHOUSE: https://docs.snowflake.com/en/sql-reference/sql/use-warehouse\n-------------------------------------------------------------------------------------------\n\n/*-- \n    - To run a single query, place your cursor in the query editor and select the Run button (\u2318-Return).\n    - To run the entire worksheet, select 'Run All' from the dropdown next to the Run button (\u2318-Shift-Return).\n--*/\n\n---> set the Role\nUSE ROLE accountadmin;\n\n---> set the Warehouse\nUSE WAREHOUSE compute_wh;\n\n-------------------------------------------------------------------------------------------\n    -- Step 2: With context in place, let's now create a Database, Schema, and Table\n        -- CREATE DATABASE: https://docs.snowflake.com/en/sql-reference/sql/create-database\n        -- CREATE SCHEMA: https://docs.snowflake.com/en/sql-reference/sql/create-schema\n        -- CREATE TABLE: https://docs.snowflake.com/en/sql-reference/sql/create-table\n-------------------------------------------------------------------------------------------\n\n---> create the Tasty Bytes Database\nCREATE OR REPLACE DATABASE tasty_bytes_sample_data;\n\n---> create the Raw POS (Point-of-Sale) Schema\nCREATE OR REPLACE SCHEMA tasty_bytes_sample_data.raw_pos;\n\n---> create the Raw Menu Table\nCREATE OR REPLACE TABLE tasty_bytes_sample_data.raw_pos.menu\n(\n    menu_id NUMBER(19,0),\n    menu_type_id NUMBER(38,0),\n    menu_type VARCHAR(16777216),\n    truck_brand_name VARCHAR(16777216),\n    menu_item_id NUMBER(38,0),\n    menu_item_name VARCHAR(16777216),\n    item_category VARCHAR(16777216),\n    item_subcategory VARCHAR(16777216),\n    cost_of_goods_usd NUMBER(38,4),\n    sale_price_usd NUMBER(38,4),\n    menu_item_health_metrics_obj VARIANT\n);\n\n---> confirm the empty Menu table exists\nSELECT * FROM tasty_bytes_sample_data.raw_pos.menu;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 3: To connect to the Blob Storage, let's create a Stage\n        -- Creating an S3 Stage: https://docs.snowflake.com/en/user-guide/data-load-s3-create-stage\n-------------------------------------------------------------------------------------------\n\n---> create the Stage referencing the Blob location and CSV File Format\nCREATE OR REPLACE STAGE tasty_bytes_sample_data.public.blob_stage\nurl = 's3://sfquickstarts/tastybytes/'\nfile_format = (type = csv);\n\n---> query the Stage to find the Menu CSV file\nLIST @tasty_bytes_sample_data.public.blob_stage/raw_pos/menu/;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 4: Now let's Load the Menu CSV file from the Stage\n        -- COPY INTO <table>: https://docs.snowflake.com/en/sql-reference/sql/copy-into-table\n-------------------------------------------------------------------------------------------\n\n---> copy the Menu file into the Menu table\nCOPY INTO tasty_bytes_sample_data.raw_pos.menu\nFROM @tasty_bytes_sample_data.public.blob_stage/raw_pos/menu/;\n\n\n-------------------------------------------------------------------------------------------\n    -- Step 5: Query the Menu table\n        -- SELECT: https://docs.snowflake.com/en/sql-reference/sql/select\n        -- TOP <n>: https://docs.snowflake.com/en/sql-reference/constructs/top_n\n        -- FLATTEN: https://docs.snowflake.com/en/sql-reference/functions/flatten\n-------------------------------------------------------------------------------------------\n\n---> how many rows are in the table?\nSELECT COUNT(*) AS row_count FROM tasty_bytes_sample_data.raw_pos.menu;\n\n---> what do the top 10 rows look like?\nSELECT TOP 10 * FROM tasty_bytes_sample_data.raw_pos.menu;\n\n---> what menu items does the Freezing Point brand sell?\nSELECT \n   menu_item_name\nFROM tasty_bytes_sample_data.raw_pos.menu\nWHERE truck_brand_name = 'Freezing Point';\n\n---> what is the profit on Mango Sticky Rice?\nSELECT \n   menu_item_name,\n   (sale_price_usd - cost_of_goods_usd) AS profit_usd\nFROM tasty_bytes_sample_data.raw_pos.menu\nWHERE 1=1\nAND truck_brand_name = 'Freezing Point'\nAND menu_item_name = 'Mango Sticky Rice';\n\n---> to finish, let's extract the Mango Sticky Rice ingredients from the semi-structured column\nSELECT \n    m.menu_item_name,\n    obj.value:\"ingredients\"::ARRAY AS ingredients\nFROM tasty_bytes_sample_data.raw_pos.menu m,\n    LATERAL FLATTEN (input => m.menu_item_health_metrics_obj:menu_item_health_metrics) obj\nWHERE 1=1\nAND truck_brand_name = 'Freezing Point'\nAND menu_item_name = 'Mango Sticky Rice';", "paramRefs": [], "queryRange": null, "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "TASTY_BYTES_SAMPLE_DATA", "schema": "RAW_POS", "secondaryRoles": "NONE"}, "queryLanguage": "sql", "appSessionId": 547649692230135949, "version": 16, "modifiedTime": 1709353378635}, "4SDSNSrjBbo": {"query": "CREATE DATABASE TEST_DB;\n\ncreate warehouse new_wh;\n\n-- ALTER TABLE DW_DWH.DWH_C_PARAM DROP COLUMN TEST_DATE ;\nDECLARE MY_DT DEFAULT TO_DATE('2024-02-21');\nBEGIN \nALTER TABLE DW_DWH.DWH_C_PARAM ADD COLUMN TEST_DATE DATE DEFAULT :MY_DT;\nEND;\n\nALTER TABLE DW_DWH.DWH_C_PARAM ALTER COLUMN TEST_DATE SET DEFAULT TO_DATE('2023-02-21');\n\nCREATE SCHEMA DW_DWH;\nCREATE TABLE DW_DWH.DWH_C_PARAM(CURR_DAY DATE);\n-- alter table dw_dwh.dwh_c_param add column new_col varchar;\nselect * from dw_dwh.v_dwh_c_param;\n\n-- desc view dw_dwh.v_dwh_c_param;\n\ncreate or replace view dw_dwh.v_dwh_c_param\nas \nselect p.* from dw_dwh.dwh_c_param p;\n\nselect * from dw_dwh.dwh_c_param;\n\n\nls @test_db.public.pngstage;\n-- create or replace view dw_dwh.v_dwh_c_param\n-- as \n-- select * from dw_dwh.dwh_c_param;\n\nselect * from dw_dwh.v_dwh_c_param;\n\nselect get_ddl('view','dw_dwh.v_dwh_c_param');\n\n-- INSERT INTO DW_DWH.DWH_C_PARAM \n-- VALUES( '2023-01-02'),('2023-01-03');\n\n-- drop table DW_DWH.DWH_C_PARAM;\n\nCREATE OR REPLACE TEMP TABLE DW_DWH.DWH_C_PARAM(CURR_DAY VARCHAR);\nSELECT * FROM DW_DWH.DWH_C_PARAM;\n\n-- CREATE OR REPLACE TABLE \nDROP TABLE DW_DWH.DWH_C_PARAM;\n\n-- CREATE TRANSIENT TABLE NEW_TABLE CLONE DW_DWH.DWH_C_PARAM;\nselect max(1,2);\n\n\n-- CREATE TEMP TABLE ANOTHER_TABLE CLONE NEW_TABLE;\n\nSELECT * FROM ANOTHER_TABLE;\n\nselect count(c.*) from dw_dwh.dwh_c_param c;\n\nCREATE OR REPLACE TABLE ANOTHER_TABLE(VAL1,VAL2,VAL3) AS\nselect \n    uniform(1, 100000, random()) AS VAL1,\n    uuid_string() AS VAL2,\n    randstr(5,random()) AS VAL3,\nfrom table(generator(rowcount => 200));\n\n\nGRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE SYSADMIN;\n\n\n-- CREATE OR REPLACE STAGE TEST_DB.DW_DWH.MYSTG;\nDESC STAGE MYSTG;\n\nDESC USER USER1;\n\n-- GRANT ROLE SYSADMIN TO USER USER1;\n\nCREATE OR REPLACE USER user1 PASSWORD = ' ' DEFAULT_ROLE = PUBLIC DEFAULT_SECONDARY_ROLES = ('ALL'); MUST_CHANGE_PASSWORD = TRUE;\n\n\n-- USE ROLE SYSADMIN;\n\n-- INSERT INTO NEW_DB.PUBLIC.NEW_TB  VALUES(5),(6),(1);\n\nSELECT * FROM NEW_TB A JOIN NEW_TB B ON A.\"1\"=B.\"1\";\n\n\n\ncreate table source_table (id INT, name VARCHAR(50), age INT);\ncreate table target_table (id INT, name VARCHAR(50), age INT);\n\n\n-- Insert into source_table\nINSERT INTO source_table (id, name, age)\nVALUES\n    (1, 'Alice', 25),\n    (2, 'Bob', 30),\n    (3, 'Charlie', 35);\n\n-- Insert into target_table\nINSERT INTO target_table (id, name, age)\nVALUES\n    (1, 'Alice', 25),\n    (2, 'Bob', 32),\n    (4, 'David', 40);\n\nselect concat_ws('.',current_account(), current_region());\n\n\nSELECT\n            -- SUM(CASE WHEN $operation = 'DELETE' THEN 1 ELSE 0 END) AS num_deleted,\n            -- SUM(CASE WHEN $operation = 'UPDATE' THEN 1 ELSE 0 END) AS num_updated,\n            -- SUM(CASE WHEN $operation = 'INSERT' THEN 1 ELSE 0 END) AS num_inserted\n            *\n        FROM TABLE(result_scan('01b2ce69-0000-95e2-0000-0006b462d0b5'));SNOWFLAKE\n\n\nMERGE INTO target_table AS target\nUSING source_table AS source\nON target.id = source.id\nWHEN MATCHED AND source.age > 30 THEN DELETE\nWHEN MATCHED THEN UPDATE SET\n    target.name = source.name,\n    target.age = source.age\nWHEN NOT MATCHED THEN\n    INSERT (id, name, age)\n    VALUES (source.id, source.name, source.age);\n\n\n\nselect * from snowflake.account_usage.access_history where query_id = '01b2ce69-0000-95e2-0000-0006b462d0b5' order by query_start_time desc;\n\n\nselect * from table(result_scan('01b2dced-0000-96ac-0006-b46200016032'));\n\n-- drop user user1;\nCREATE USER user1 PASSWORD='abc123' DEFAULT_ROLE = public DEFAULT_SECONDARY_ROLES = ('ALL') MUST_CHANGE_PASSWORD = False;\n\n-- alter user user1 set email = 'abc@gmail.com';\n\n\nCREATE OR REPLACE FUNCTION py_spacy(str string)\nRETURNS ARRAY\nLANGUAGE PYTHON\nRUNTIME_VERSION = 3.8\nHANDLER = 'func'\nPACKAGES = ('spacy')\nIMPORTS = ('@spacy_stage/spacy_en_core_web_sm.zip')\nAS\n$$\nimport fcntl\nimport os\nimport spacy\nimport sys\nimport threading\nimport zipfile\n\n # File lock class for synchronizing write access to /tmp.\n class FileLock:\n   def __enter__(self):\n       self._lock = threading.Lock()\n       self._lock.acquire()\n       self._fd = open('/tmp/lockfile.LOCK', 'w+')\n       fcntl.lockf(self._fd, fcntl.LOCK_EX)\n\n    def __exit__(self, type, value, traceback):\n       self._fd.close()\n       self._lock.release()\n\n # Get the location of the import directory. Snowflake sets the import\n # directory location so code can retrieve the location via sys._xoptions.\n IMPORT_DIRECTORY_NAME = \"snowflake_import_directory\"\n import_dir = sys._xoptions[IMPORT_DIRECTORY_NAME]\n\n # Get the path to the ZIP file and set the location to extract to.\n zip_file_path = import_dir + \"spacy_en_core_web_sm.zip\"\n extracted = '/tmp/en_core_web_sm'\n\n # Extract the contents of the ZIP. This is done under the file lock\n # to ensure that only one worker process unzips the contents.\n with FileLock():\n    if not os.path.isdir(extracted + '/en_core_web_sm/en_core_web_sm-2.3.1'):\n       with zipfile.ZipFile(zip_file_path, 'r') as myzip:\n          myzip.extractall(extracted)\n\n # Load the model from the extracted file.\n nlp = spacy.load(extracted + \"/en_core_web_sm/en_core_web_sm-2.3.1\")\n\n def func(text):\n    doc = nlp(text)\n    result = []\n\n    for ent in doc.ents:\n       result.append((ent.text, ent.start_char, ent.end_char, ent.label_))\n    return result\n    $$;\n\n--@pngstage/web_png/png_01b304ed-0000-98ae-0006-b4620002e0ce.png\n\n('web_png', 'png_01b304ed-0000-98ae-0006-b4620002e0ce.png', '@pngstage/web_png/png_01b304ed-0000-98ae-0006-b4620002e0ce.png')\n\ncall create_png_web_image('01b304ed-0000-98ae-0006-b4620002e0ce', 'Top Customers orders by priority', 'Date', 'total_price');\ncreate or replace procedure create_png_web_image(\n    query_id string\n    , title string\n    , x_label string\n    , y_label string)\nreturns string\nlanguage python\nruntime_version = '3.11'\npackages = ('snowflake-snowpark-python', 'matplotlib')\nhandler = 'run'\nexecute as caller\nas\n$$\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport io\n\ndef save_file(session, buffer, path, dest_filename):\n    session._conn.upload_stream(buffer, path, dest_filename, compress_data=False, overwrite=True)\n    return path + '/' + dest_filename\n\ndef run(session, query_id, title, x_label, y_label):  \n    df = session.sql(\"select * from table(result_scan(?))\", params=[query_id]).to_pandas()\n\n    plt.figure(figsize=(5, 3))\n    plt.barh(df.iloc[:, 0], df.iloc[:, 1], color='skyblue')\n    plt.xlabel(x_label)\n    plt.ylabel(y_label)\n    plt.title(title)\n    plt.gca().invert_yaxis()  # Invert y-axis for better readability   \n    plt.tight_layout()\n \n    buffer = io.BytesIO()\n    plt.savefig(buffer, format='png')\n    buffer.seek(0)  # Rewind the buffer\n    stage = '@pngstage'\n    path = 'web_png'\n    filename = 'png_%s.png' % (query_id)\n    relative_path = save_file(session, buffer, stage + '/' + path, filename )\n    return (path,filename,relative_path)\n    return session.sql(\"select get_presigned_url(%s, '%s/%s', 604800) as url\" % (stage, path, filename)).collect()[0]['URL']\n$$\n;\n\n@pngstage/web_png/png_01b3006f-0000-9870-0006-b462000290fa.png\n--@pngstage/Logs/snowflake_2024_03_15_21_55_37.log\ncreate or replace stage pngstage \ndirectory = (enable = true)   \nencryption=(type = 'snowflake_sse');\n\n\nSELECT O_ORDERDATE,O_ORDERPRIORITY,SUM(O_TOTALPRICE) AS TOTAL_PRICE FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.ORDERS \nGROUP BY ALL;\nLIMIT 100;\n\nls @TEST_DB.PUBLIC.PNGSTAGE;\n\nexecute immediate $$\ndeclare\n    signed_png_url string;\n    formatted string;    \nbegin\n    signed_png_url := (call create_png_web_image('01b3006f-0000-9870-0006-b462000290fa', 'Top weekly GitHub projects by stars', 'Stars', 'Project')); \n    formatted := '<b>The top GitHub projects by # of stars this week are:</b><br/><img src=\"' || signed_png_url || '\"\"/>';\n    -- call system$send_email(\n    --     'my_email_int', 'bibekpaudyal23@gmail.com', 'Top GitHub weekly projects (png)', :formatted, 'text/html'\n    -- );\n    return 'sent: ' || :formatted;\n    end;\n$$\n;\n\n\n\n-- select get_presigned_url(@pngstage, 'web_png/png_01b3006f-0000-9870-0006-b462000290fa.png', 604800) as url;\n\n-- ('web_png', 'png_01b304ed-0000-98ae-0006-b4620002e0ce.png', '@pngstage/web_png/png_01b304ed-0000-98ae-0006-b4620002e0ce.png')\nls @pngstage;\n\ncall create_log_file();\n\ncreate or replace procedure create_log_file()\nreturns string\nlanguage python\nruntime_version = '3.11'\npackages = ('snowflake-snowpark-python', 'matplotlib')\nhandler = 'run'\nexecute as caller\nas\n$$\nimport logging \nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport io\nimport os\nfrom datetime import datetime\nfrom tempfile import TemporaryDirectory\n\ndef save_file(session, buffer, path, dest_filename):\n    session._conn.upload_stream(buffer, path, dest_filename, compress_data=False, overwrite=True)\n    return path + '/' + dest_filename\n\ndef run(session):\n    curr_time = datetime.now().strftime(\"%Y_%m_%d_%H_%M_%S\")\n    log_dir = '/tmp'\n    stage = '@pngstage'\n    stage_log_dir ='Logs' \n    filename = f\"snowflake_{curr_time}.log\"\n    full_path = f\"{log_dir}/{filename}\"\n    logger = logging.getLogger('snowflake_migrator')\n    logger.setLevel(logging.DEBUG)\n\n    with TemporaryDirectory() as tmp_folder:\n        my_log_path = os.path.join(tmp_folder,full_path )    \n        file_handler = logging.FileHandler(my_log_path)\n        file_handler.setLevel(logging.DEBUG)\n\n        # Create a formatter and set the format for the file handler\n        formatter = logging.Formatter('%(levelname)s %(asctime)s : %(message)s')\n        file_handler.setFormatter(formatter)\n\n        # Add the file handler to the logger\n        logger.addHandler(file_handler)\n        #logging.basicConfig(level=logging.DEBUG, format='%(levelname)s %(asctime)s : %(message)s', filename=my_log_path)\n    \n        # Create a console handler and set its level to INFO\n        #console_handler = logging.StreamHandler()\n        #console_handler.setLevel(logging.DEBUG)\n        \n        # Create a formatter and set the format for the console handler\n        #formatter = logging.Formatter('%(levelname)s %(asctime)s: %(message)s')\n        #console_handler.setFormatter(formatter)\n        logger.debug('This is test log')\n        logger.debug('WRITING TO FILE')\n        logger.info('Hey this is our final log')\n        f = open(my_log_path)\n        #return f.read()\n        buffer = open(my_log_path, \"rb\")\n        buffer.seek(0)  # Rewind the buffer\n        rel_path = save_file(session,buffer, stage + '/' + stage_log_dir, filename)\n        #return rel_path\n    return session.sql(\"select get_presigned_url(%s, '%s/%s', 604800) as url\" % (stage, stage_log_dir, filename)).collect()[0]['URL']\n$$\n;\n\n\ncreate or replace table test_db.public.new_table(id varchar);\ncreate  view test_db.public.new_table\nas \nselect * from test_db.public.new_table;\n\n\nlist @~/worksheet_data;", "paramRefs": [], "queryRange": null, "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "NEW_WH", "database": "TEST_DB", "schema": "PUBLIC", "secondaryRoles": "NONE"}, "queryLanguage": "sql", "appSessionId": 533735403745, "version": 212, "modifiedTime": 1711204108777}, "OQAyRdfc1y": {"paramRefs": [], "queryRange": null, "executionContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "TEST_DB", "schema": "PUBLIC", "secondaryRoles": "NONE"}, "queryLanguage": "python", "queryLanguageConfig": {"python": {"packages": {"snowflake-snowpark-python": "*", "streamlit": "1.26.0"}, "returnType": "Table()", "runtimeVersion": "3.11"}}, "appSessionId": 377761901867, "version": 3, "modifiedTime": 1710513510029}}, "users": {"505987850600": {"id": 505987850600, "name": "Bibek Paudyal", "email": "bibekpaudyal23@gmail.com", "firstName": "Bibek", "lastName": "Paudyal", "canShare": true, "canModifyParameters": true, "modifyParameterRoles": ["ACCOUNTADMIN"], "privateBeta": false, "emailNewsletter": true, "defaultOrgId": "202346043869", "hasPersonal": false, "settings": {"seenHints": {"intro": false, "inspectorSelection": false, "inspectorHistogram": false, "inspectorCategoryFilter": false, "inspectorQualityMeter": false, "queryLimit": false, "recencyMessage": false}, "notifications": {}, "snowflakeTokenId": "4044325917465", "lastUsedQueryContext": {"role": "ACCOUNTADMIN", "warehouse": "COMPUTE_WH", "database": "", "schema": "", "secondaryRoles": "NONE"}, "snowflakeFeatures": {"ALLOW_ENABLING_AUTO_RENEWALS_FOR_PUBLISHED_MONETIZED_LISTINGS": false, "BLOCK_PERSONALIZED_LISTINGS": true, "BUDGETS_DATABASE": "", "COMMUNITY_BASE_URL": "https://community.snowflake.com", "DATA_EXCHANGE_PRIVATE_LISTING_PUBLISH_LIMIT": 200, "DEVELOPERS_BASE_URL": "https://developers.snowflake.com", "DISABLE_SELF_PASSWORD_CHANGE": false, "DISABLE_UI_DOWNLOAD_BUTTON": false, "DOCS_BASE_URL": "https://docs.snowflake.com", "DOCUMENT_AI_VERSION": "{\"current\": \"blue\", \"fallback\": \"green\"}", "ENABLE_ACCOUNT_DATABASE_REPLICATION": false, "ENABLE_ADMIN_UNPUBLISH_LISTINGS_FOR_PRIVATE_DATA_EXCHANGE": false, "ENABLE_APPLICATION_OBJECTS_MONETIZATION": true, "ENABLE_DATA_DICTIONARY_FOR_PRIVATE_LISTINGS_ON_PROVIDER": true, "ENABLE_DATA_DICTIONARY_ON_CONSUMER": true, "ENABLE_DATA_DICTIONARY_ON_PROVIDER": true, "ENABLE_DATA_PREVIEW_ON_ADMIN": false, "ENABLE_DATA_PREVIEW_ON_CONSUMER": false, "ENABLE_DATA_PREVIEW_ON_PROVIDER": false, "ENABLE_DATA_PREVIEW_WITH_PII": false, "ENABLE_FIX_774169": true, "ENABLE_FIX_954145_ENABLE_APP_LISTING_VISIBILITY_IN_AZURE": false, "ENABLE_FIX_ALLOW_WRITE_USAGE_PRIVILEGE_TO_REFRESH_STAGE": true, "ENABLE_MONETIZED_LISTING_ALLOW_EARLY_ACCESS": true, "ENABLE_MONETIZED_LISTING_INSTALLMENTS": true, "ENABLE_MONETIZED_LISTING_USAGE_BASED_TRIALS": false, "ENABLE_NATIVE_APP_BILLING_EVENT": true, "ENABLE_PAYMENT_METHOD_SELECTION": false, "ENABLE_PREFER_MCD_SELECTION": true, "ENABLE_SEARCH_FOR_NEW_DOMAIN": false, "ENABLE_SUPPORT_USER_LINKAGE": true, "ENABLE_SYSTEM_FUNCTION_GET_ROLES_WITH_MARKETPLACE_PRIVILEGE": true, "ENFORCE_SESSION_POLICY": true, "FEATURE_UI_ENABLE_ACCOUNT_TASKS_GRAPH_HISTORY_TAB": "ENABLED_PUBLIC_PREVIEW", "FEATURE_UI_ENABLE_ACCOUNT_TASKS_GRAPH_OVERVIEW": "DISABLED_PRIVATE_PREVIEW", "FEATURE_UI_ENABLE_CONSISTENT_LAYOUT": "DISABLED", "FEATURE_UI_ENABLE_CREATE_EDIT_GIT_REPOSITORY": "DISABLED", "FEATURE_UI_ENABLE_CREATE_ICEBERG_TABLE": "DISABLED", "FEATURE_UI_ENABLE_CREATE_NOTIFICATION_INTEGRATION": "DISABLED", "FEATURE_UI_ENABLE_CREATE_PIPE": "DISABLED", "FEATURE_UI_ENABLE_CREATE_STORAGE_INTEGRATION": "DISABLED", "FEATURE_UI_ENABLE_GIT_REPOSITORIES": "DISABLED", "FEATURE_UI_ENABLE_GIT_REPOSITORY_FILES_DOWNLOAD": "DISABLED", "FEATURE_UI_ENABLE_GIT_REPOSITORY_FILES_EXECUTE_IMMEDIATE": "DISABLED", "FEATURE_UI_ENABLE_GIT_REPOSITORY_FILES_EXPLORER": "DISABLED", "FEATURE_UI_ENABLE_NEW_PROVIDER_ANALYTICS_IA": "DISABLED", "FEATURE_UI_ENABLE_NOTEBOOKS_IMPROVED_ERROR_PAGE": "ENABLED", "FEATURE_UI_ENABLE_OBJECT_DEPENDENCIES_GRAPH": "DISABLED", "FEATURE_UI_ENABLE_SELF_SERVICE_TRIAL_EXTENSIONS": "ENABLED", "FEATURE_UI_ENABLE_SINGLE_TASK_GRAPH_HISTORY_VIEW": "ENABLED_PUBLIC_PREVIEW", "FEATURE_UI_ENABLE_SPCS_NAX": "DISABLED", "FEATURE_UI_ENABLE_TASKS_PROCEDURES_DEBUGGING": "DISABLED_PRIVATE_PREVIEW", "FEATURE_UI_ENABLE_TASK_RE_RUN_ACTION": "DISABLED_PRIVATE_PREVIEW", "FEATURE_UI_ENABLE_TASK_RE_RUN_ATTEMPTS_VISIBILITY": "DISABLED_PRIVATE_PREVIEW", "FEATURE_UI_ENABLE_TASK_RUN_STATUS_AUTO_REFRESH": "DISABLED_PRIVATE_PREVIEW", "FEATURE_UI_WYSIWYG_LISTING_PUBLISHING_FLOW": "DISABLED", "FOLDER_ROLE_MIGRATION": true, "GLOBAL_ENABLE_NEW_CONNECTION_SYNTAX": false, "GLOBAL_REPLICATION_ENABLE_CONNECTION_OBJECTS": false, "INFO_SCHEMA_COMPLETE_TASK_GRAPHS_FUNCTION_VERSION": 4, "INFO_SCHEMA_CURRENT_TASK_GRAPHS_FUNCTION_VERSION": 4, "INFO_SCHEMA_TASK_HISTORY_FUNCTION_VERSION": 7, "LANGUAGE": "en", "LISTING_AUTOFULFILLMENT_INITIAL_REPLICATION_SIZE_LIMIT_IN_TB": 10, "MULTI_CLUSTER_WAREHOUSES": true, "NOTEBOOK_ENABLE_RUNTIMES": false, "OTHER_DOCS_BASE_URL": "https://other-docs.snowflake.com", "SIGNUP_BASE_URL": "https://signup.snowflake.com", "STREAMLIT_SUPPORTED_VERSIONS": "[{\"major\": 1, \"minor\": 26, \"packageVersion\": \"1.26.0\"}, {\"major\": 1, \"minor\": 22, \"packageVersion\": \"1.22.0\"}]", "UI_DEFAULT_WORKSHEETS_TO_LOAD": "tpchbenchmark,onboarding", "UI_ENABLE_AF_FEATURE_0": "enabled", "UI_ENABLE_AF_FEATURE_12": "enabled", "UI_ENABLE_AF_FEATURE_13": "unset", "UI_ENABLE_AF_FEATURE_15": "unset", "UI_ENABLE_AF_FEATURE_18": "unset", "UI_ENABLE_AF_FEATURE_21": "unset", "UI_ENABLE_AF_FEATURE_23": "unset", "UI_ENABLE_AF_FEATURE_24": "unset", "UI_ENABLE_AF_FEATURE_29": "unset", "UI_ENABLE_AF_FEATURE_30": "unset", "UI_ENABLE_AF_FEATURE_31": "unset", "UI_ENABLE_AF_FEATURE_32": "unset", "UI_ENABLE_AF_FEATURE_33": "unset", "UI_ENABLE_AF_FEATURE_35": "unset", "UI_ENABLE_AF_FEATURE_36": "enabled", "UI_ENABLE_AF_FEATURE_37": "enabled", "UI_ENABLE_AF_FEATURE_38": "enabled", "UI_ENABLE_AF_FEATURE_39": "unset", "UI_ENABLE_AF_FEATURE_40": "unset", "UI_ENABLE_AF_FEATURE_41": "unset", "UI_ENABLE_AF_FEATURE_42": "unset", "UI_ENABLE_AF_FEATURE_43": "unset", "UI_ENABLE_AF_FEATURE_44": "unset", "UI_ENABLE_AF_FEATURE_45": "unset", "UI_ENABLE_AF_FEATURE_46": "unset", "UI_ENABLE_AF_FEATURE_47": "unset", "UI_ENABLE_AF_FEATURE_48": "unset", "UI_ENABLE_AF_FEATURE_49": "unset", "UI_ENABLE_AF_FEATURE_5": "unset", "UI_ENABLE_AF_FEATURE_50": "unset", "UI_ENABLE_AF_FEATURE_51": "unset", "UI_ENABLE_AF_FEATURE_52": "unset", "UI_ENABLE_AF_FEATURE_53": "unset", "UI_ENABLE_AF_FEATURE_54": "unset", "UI_ENABLE_AF_FEATURE_55": "unset", "UI_ENABLE_AF_FEATURE_56": "unset", "UI_ENABLE_AF_FEATURE_57": "unset", "UI_ENABLE_AF_FEATURE_58": "unset", "UI_ENABLE_AF_FEATURE_59": "unset", "UI_ENABLE_AF_FEATURE_60": "unset", "UI_ENABLE_ANACONDA_IN_TERMS_ACCEPTANCE": "unset", "UI_ENABLE_APEX_FEATURE_0": "enabled", "UI_ENABLE_APEX_FEATURE_1": "unset", "UI_ENABLE_APEX_FEATURE_10": "unset", "UI_ENABLE_APEX_FEATURE_12": "unset", "UI_ENABLE_APEX_FEATURE_13": "unset", "UI_ENABLE_APEX_FEATURE_14": "unset", "UI_ENABLE_APEX_FEATURE_15": "unset", "UI_ENABLE_APEX_FEATURE_16": "unset", "UI_ENABLE_APEX_FEATURE_18": "unset", "UI_ENABLE_APEX_FEATURE_19": "unset", "UI_ENABLE_APEX_FEATURE_2": "unset", "UI_ENABLE_APEX_FEATURE_20": "unset", "UI_ENABLE_APEX_FEATURE_21": "unset", "UI_ENABLE_APEX_FEATURE_22": "unset", "UI_ENABLE_APEX_FEATURE_23": "unset", "UI_ENABLE_APEX_FEATURE_24": "unset", "UI_ENABLE_APEX_FEATURE_25": "unset", "UI_ENABLE_APEX_FEATURE_26": "unset", "UI_ENABLE_APEX_FEATURE_27": "unset", "UI_ENABLE_APEX_FEATURE_28": "unset", "UI_ENABLE_APEX_FEATURE_29": "unset", "UI_ENABLE_APEX_FEATURE_30": "unset", "UI_ENABLE_APEX_FEATURE_31": "unset", "UI_ENABLE_APEX_FEATURE_32": "unset", "UI_ENABLE_APEX_FEATURE_33": "unset", "UI_ENABLE_APEX_FEATURE_34": "unset", "UI_ENABLE_APEX_FEATURE_35": "unset", "UI_ENABLE_APEX_FEATURE_36": "unset", "UI_ENABLE_APEX_FEATURE_37": "enabled", "UI_ENABLE_APEX_FEATURE_38": "enabled", "UI_ENABLE_APEX_FEATURE_39": "unset", "UI_ENABLE_APEX_FEATURE_5": "enabled", "UI_ENABLE_APEX_FEATURE_7": "enabled", "UI_ENABLE_APEX_FEATURE_8": "unset", "UI_ENABLE_APEX_FEATURE_9": "unset", "UI_ENABLE_APPS_ASYNC_INSTALL": "enabled", "UI_ENABLE_AUTO_REFRESH_IN_CREATE_EDIT_STAGE_DIALOG": "unset", "UI_ENABLE_AX_FEATURE_1": "unset", "UI_ENABLE_AX_FEATURE_10": "unset", "UI_ENABLE_AX_FEATURE_11": "enabled", "UI_ENABLE_AX_FEATURE_2": "unset", "UI_ENABLE_AX_FEATURE_7": "unset", "UI_ENABLE_AX_MULTI_FETCH_TABS_OBJECT_EXPLORER": true, "UI_ENABLE_BILLING_DOCUMENTS": true, "UI_ENABLE_BUY_MONETIZED_LISTING": true, "UI_ENABLE_CASE_CATEGORIES_ENDPOINT": "unset", "UI_ENABLE_CHART_FORECASTING": "unset", "UI_ENABLE_CONNECTORS_UI_20": true, "UI_ENABLE_CONNECTOR_GOOGLE_ANALYTICS_RAW_DATA": false, "UI_ENABLE_CONNECTOR_SERVICENOW": true, "UI_ENABLE_COPILOT": "unset", "UI_ENABLE_COPILOT_CHAT_HISTORY": "unset", "UI_ENABLE_COPILOT_FEATURE_01": "unset", "UI_ENABLE_COPILOT_FEATURE_02": "unset", "UI_ENABLE_COPILOT_FEATURE_03": "unset", "UI_ENABLE_COPILOT_FEATURE_04": "unset", "UI_ENABLE_COPILOT_FEATURE_05": "unset", "UI_ENABLE_COPILOT_FEATURE_06": "unset", "UI_ENABLE_COPILOT_FEATURE_07": "unset", "UI_ENABLE_COPILOT_FEATURE_08": "unset", "UI_ENABLE_COPILOT_FEATURE_09": "unset", "UI_ENABLE_COPILOT_FEATURE_10": "unset", "UI_ENABLE_COPILOT_FEATURE_11": "unset", "UI_ENABLE_COPILOT_FEATURE_12": "unset", "UI_ENABLE_COPILOT_FEATURE_13": "unset", "UI_ENABLE_COPILOT_FEATURE_14": "unset", "UI_ENABLE_COPILOT_FEATURE_15": "unset", "UI_ENABLE_COPILOT_FEATURE_16": "unset", "UI_ENABLE_COPILOT_FEATURE_17": "unset", "UI_ENABLE_COPILOT_FEATURE_18": "unset", "UI_ENABLE_COPILOT_FEATURE_19": "unset", "UI_ENABLE_COPILOT_FEATURE_20": "unset", "UI_ENABLE_COPILOT_FEATURE_21": "unset", "UI_ENABLE_COPILOT_FEATURE_22": "unset", "UI_ENABLE_COPILOT_FEATURE_23": "unset", "UI_ENABLE_COPILOT_FEATURE_24": "unset", "UI_ENABLE_COPILOT_FEATURE_25": "unset", "UI_ENABLE_COPILOT_FEATURE_26": "unset", "UI_ENABLE_COPILOT_FEATURE_27": "unset", "UI_ENABLE_COPILOT_FEATURE_28": "unset", "UI_ENABLE_COPILOT_FEATURE_29": "unset", "UI_ENABLE_COPILOT_FEATURE_30": "unset", "UI_ENABLE_COPILOT_FEATURE_31": "unset", "UI_ENABLE_COPILOT_FEATURE_32": "unset", "UI_ENABLE_COPILOT_FEATURE_33": "unset", "UI_ENABLE_COPILOT_FEATURE_34": "unset", "UI_ENABLE_COPILOT_FEATURE_35": "unset", "UI_ENABLE_COPILOT_FEATURE_36": "unset", "UI_ENABLE_COPILOT_FEATURE_37": "unset", "UI_ENABLE_COPILOT_FEATURE_38": "unset", "UI_ENABLE_COPILOT_FEATURE_39": "unset", "UI_ENABLE_COPILOT_FEATURE_40": "unset", "UI_ENABLE_COPILOT_FEATURE_41": "unset", "UI_ENABLE_COPILOT_FEATURE_42": "unset", "UI_ENABLE_COPILOT_FEATURE_43": "unset", "UI_ENABLE_COPILOT_FEATURE_44": "unset", "UI_ENABLE_COPILOT_FEATURE_45": "unset", "UI_ENABLE_COPILOT_FEATURE_46": "unset", "UI_ENABLE_COPILOT_FEATURE_47": "unset", "UI_ENABLE_COPILOT_FEATURE_48": "unset", "UI_ENABLE_COPILOT_FEATURE_49": "unset", "UI_ENABLE_COPILOT_FEATURE_50": "unset", "UI_ENABLE_COPILOT_INFERENCE": "unset", "UI_ENABLE_COPILOT_INFERENCE_GPT4_ALLOWED": "unset", "UI_ENABLE_COPILOT_ML_TELEMETRY": "unset", "UI_ENABLE_DASHBOARD_5_FEATURE": false, "UI_ENABLE_DATA_LOADING_WIZARD": false, "UI_ENABLE_DATA_PREVIEW_ADMIN": "disabled", "UI_ENABLE_DATA_PREVIEW_CONSUMER": "unset", "UI_ENABLE_DATA_PREVIEW_M2_CONSUMER": "unset", "UI_ENABLE_DATA_PREVIEW_M2_PROVIDER": "unset", "UI_ENABLE_DATA_PREVIEW_PROVIDER": "disabled", "UI_ENABLE_DCR_ASSIGN_POLICIES_TO_TABLE": "unset", "UI_ENABLE_DEX_FEATURE_8": "unset", "UI_ENABLE_DG_CLASSIFICATION": "enabled", "UI_ENABLE_DG_CLASSIFICATION_PUPR": "enabled", "UI_ENABLE_DG_LINEAGE": "unset", "UI_ENABLE_DG_LINEAGE_PRPRM3": "unset", "UI_ENABLE_DG_LINEAGE_PRPRV2": "enabled", "UI_ENABLE_DIRECTORY_TABLES_FOR_INTERNAL_STAGES": "unset", "UI_ENABLE_DMX_FEATURE_16": "unset", "UI_ENABLE_DMX_FEATURE_21": "unset", "UI_ENABLE_DMX_FEATURE_22": "enabled", "UI_ENABLE_DMX_FEATURE_23": "enabled", "UI_ENABLE_DMX_FEATURE_26": "enabled", "UI_ENABLE_DMX_FEATURE_33": "enabled", "UI_ENABLE_DMX_FEATURE_36": "enabled", "UI_ENABLE_DMX_FEATURE_37": "enabled", "UI_ENABLE_DMX_FEATURE_38": "unset", "UI_ENABLE_DMX_FEATURE_4": "unset", "UI_ENABLE_DMX_FEATURE_40": "enabled", "UI_ENABLE_DMX_FEATURE_42": "unset", "UI_ENABLE_DMX_FEATURE_47": "unset", "UI_ENABLE_DMX_FEATURE_48": "unset", "UI_ENABLE_DMX_FEATURE_49": "enabled", "UI_ENABLE_DMX_FEATURE_5": "unset", "UI_ENABLE_DMX_FEATURE_50": "unset", "UI_ENABLE_DMX_FEATURE_52": "unset", "UI_ENABLE_DMX_FEATURE_53": "unset", "UI_ENABLE_DMX_FEATURE_54": "unset", "UI_ENABLE_DMX_FEATURE_55": "unset", "UI_ENABLE_DMX_FEATURE_58": "unset", "UI_ENABLE_DMX_FEATURE_60": "unset", "UI_ENABLE_DMX_FEATURE_61": "unset", "UI_ENABLE_DMX_FEATURE_62": "unset", "UI_ENABLE_DMX_FEATURE_64": "enabled", "UI_ENABLE_DMX_FEATURE_65": "unset", "UI_ENABLE_DMX_FEATURE_67": "unset", "UI_ENABLE_DMX_FEATURE_68": "unset", "UI_ENABLE_DMX_FEATURE_69": "unset", "UI_ENABLE_DMX_FEATURE_7": "unset", "UI_ENABLE_DMX_FEATURE_70": "unset", "UI_ENABLE_DMX_FEATURE_72": "unset", "UI_ENABLE_DMX_FEATURE_73": "unset", "UI_ENABLE_DMX_FEATURE_74": "unset", "UI_ENABLE_DMX_FEATURE_75": "unset", "UI_ENABLE_DMX_FEATURE_76": "unset", "UI_ENABLE_DMX_FEATURE_77": "unset", "UI_ENABLE_DMX_FEATURE_78": "unset", "UI_ENABLE_DMX_FEATURE_79": "enabled", "UI_ENABLE_DMX_FEATURE_80": "unset", "UI_ENABLE_DMX_FEATURE_81": "enabled", "UI_ENABLE_DMX_FEATURE_82": "unset", "UI_ENABLE_DMX_FEATURE_83": "unset", "UI_ENABLE_DMX_FEATURE_84": "unset", "UI_ENABLE_DMX_FEATURE_85": "unset", "UI_ENABLE_DMX_FEATURE_86": "unset", "UI_ENABLE_DMX_FEATURE_87": "unset", "UI_ENABLE_DMX_FEATURE_88": "unset", "UI_ENABLE_DMX_FEATURE_89": "unset", "UI_ENABLE_DMX_SNOWSCOPE_PERSONALIZATION": "unset", "UI_ENABLE_DMX_SNOWSCOPE_SEARCH": "unset", "UI_ENABLE_DOCUMENT_AI": "unset", "UI_ENABLE_DOCUMENT_AI_PRPR": "unset", "UI_ENABLE_DOCUMENT_INTELLIGENCE_PRPR": "unset", "UI_ENABLE_DYNAMIC_OPEN_GRAPH_IMAGES": "unset", "UI_ENABLE_DYNAMIC_TABLES_ACCOUNT_LEVEL_OVERVIEW": "unset", "UI_ENABLE_DYNAMIC_TABLES_MANUAL_REFRESH": "unset", "UI_ENABLE_DYNAMIC_TABLES_SUSPEND_RESUME": "unset", "UI_ENABLE_EVAL_LISTINGS_LIMITED_FUNCTIONALITY_TRIAL": true, "UI_ENABLE_EXTERNAL_STAGES_CREATE_EDIT": "unset", "UI_ENABLE_FEATURED_MARKETPLACE_PAGE_ENDPOINT": "unset", "UI_ENABLE_FEATURE_ACCOUNT_REPLICATION": "enabled", "UI_ENABLE_FEATURE_ANACONDA_ENABLEMENT": true, "UI_ENABLE_FEATURE_AX_PUPR": false, "UI_ENABLE_FEATURE_BUDGET_NON_ADMIN_ACCESS": "unset", "UI_ENABLE_FEATURE_CG_BUDGET": "enabled", "UI_ENABLE_FEATURE_CG_TAGGING": "enabled", "UI_ENABLE_FEATURE_CLIENT_REDIRECTS": "enabled", "UI_ENABLE_FEATURE_COST_INSIGHTS": "unset", "UI_ENABLE_FEATURE_COST_TRANSPARENCY_PAGE": "enabled", "UI_ENABLE_FEATURE_CROSS_ROLE_SHARING": false, "UI_ENABLE_FEATURE_DG_TAGGING": "enabled", "UI_ENABLE_FEATURE_DG_TAGGING_GA": "enabled", "UI_ENABLE_FEATURE_DX_HEALTH_CHECK": "unset", "UI_ENABLE_FEATURE_LAF_USAGE": "enabled", "UI_ENABLE_FEATURE_MONETIZATION_ALLOW_EARLY_ACCESS": "unset", "UI_ENABLE_FEATURE_MONETIZATION_INSTALLMENTS": "unset", "UI_ENABLE_FEATURE_PROVIDER_CREDIT_SURCHARGE": "unset", "UI_ENABLE_FEATURE_QUERY_ACCELERATION_SERVICE": true, "UI_ENABLE_FEATURE_REPLICATION_GROUP_DETAILS_PAGE": "enabled", "UI_ENABLE_FEATURE_TRUST_CENTER": "unset", "UI_ENABLE_FEATURE_TRUST_CENTER_PUPR": "unset", "UI_ENABLE_FEATURE_USAGE_PAGE": true, "UI_ENABLE_GET_FLOW_OPTIMIZATION": "enabled", "UI_ENABLE_GLOBAL_NAV": false, "UI_ENABLE_GUEST_FREE_TO_TRY_SECTION": "unset", "UI_ENABLE_GUEST_SNOWSCOPE_SEARCH_CANARY": "unset", "UI_ENABLE_GUEST_SNOWSCOPE_SEARCH_MOBILE_CANARY": "unset", "UI_ENABLE_GUEST_SNOWSCOPE_SEARCH_MOBILE_PROD": "enabled", "UI_ENABLE_GUEST_SNOWSCOPE_SEARCH_PROD": "enabled", "UI_ENABLE_GUIDES_ON_LEARN_PAGE": false, "UI_ENABLE_HOMEPAGE": false, "UI_ENABLE_IMPORTED_DB_LIMIT_SECTION": "unset", "UI_ENABLE_IMPORTED_DB_POINT_LOOKUP": "unset", "UI_ENABLE_IN_PRODUCT_SEARCH": false, "UI_ENABLE_JS_WORKSHEETS": "unset", "UI_ENABLE_JVM_WORKSHEETS": "unset", "UI_ENABLE_LEARN": false, "UI_ENABLE_LISTING_CTA_REFACTOR": "unset", "UI_ENABLE_LISTING_DETAIL_PAGE_REDESIGN": "unset", "UI_ENABLE_LOAD_FILE_DATA_PREVIEW": "unset", "UI_ENABLE_MARKETPLACE_HOME_BROWSE_API": "unset", "UI_ENABLE_MATERIALIZED_TABLES": "enabled", "UI_ENABLE_MLPF": "unset", "UI_ENABLE_MLPF_FEATURE_01": "unset", "UI_ENABLE_MLPF_FEATURE_02": "unset", "UI_ENABLE_MLPF_FEATURE_03": "unset", "UI_ENABLE_MLPF_FEATURE_04": "unset", "UI_ENABLE_MLPF_FEATURE_05": "unset", "UI_ENABLE_MLPF_FEATURE_06": "unset", "UI_ENABLE_MLPF_FEATURE_07": "unset", "UI_ENABLE_MLPF_FEATURE_08": "unset", "UI_ENABLE_MLPF_FEATURE_09": "unset", "UI_ENABLE_MLPF_FEATURE_10": "unset", "UI_ENABLE_MLPF_FEATURE_11": "unset", "UI_ENABLE_MLPF_FEATURE_12": "unset", "UI_ENABLE_MLPF_FEATURE_13": "unset", "UI_ENABLE_MLPF_FEATURE_14": "unset", "UI_ENABLE_MLPF_FEATURE_15": "unset", "UI_ENABLE_MLPF_FEATURE_16": "unset", "UI_ENABLE_MLPF_FEATURE_17": "unset", "UI_ENABLE_MLPF_FEATURE_18": "unset", "UI_ENABLE_MLPF_FEATURE_19": "unset", "UI_ENABLE_MLPF_FEATURE_20": "unset", "UI_ENABLE_MLPF_FEATURE_21": "unset", "UI_ENABLE_MLPF_FEATURE_22": "unset", "UI_ENABLE_MLPF_FEATURE_23": "unset", "UI_ENABLE_MLPF_FEATURE_24": "unset", "UI_ENABLE_MLPF_FEATURE_25": "unset", "UI_ENABLE_MLPF_FEATURE_26": "unset", "UI_ENABLE_MLPF_FEATURE_27": "unset", "UI_ENABLE_MLPF_FEATURE_28": "unset", "UI_ENABLE_MLPF_FEATURE_29": "unset", "UI_ENABLE_MLPF_FEATURE_30": "unset", "UI_ENABLE_MLPF_FEATURE_31": "unset", "UI_ENABLE_MLPF_FEATURE_32": "unset", "UI_ENABLE_MLPF_FEATURE_33": "unset", "UI_ENABLE_MLPF_FEATURE_34": "unset", "UI_ENABLE_MLPF_FEATURE_35": "unset", "UI_ENABLE_MLPF_FEATURE_36": "unset", "UI_ENABLE_MLPF_FEATURE_37": "unset", "UI_ENABLE_MLPF_FEATURE_38": "unset", "UI_ENABLE_MLPF_FEATURE_39": "unset", "UI_ENABLE_MLPF_FEATURE_40": "unset", "UI_ENABLE_MLPF_FEATURE_41": "unset", "UI_ENABLE_MLPF_FEATURE_42": "unset", "UI_ENABLE_MLPF_FEATURE_43": "unset", "UI_ENABLE_MLPF_FEATURE_44": "unset", "UI_ENABLE_MLPF_FEATURE_45": "unset", "UI_ENABLE_MLPF_FEATURE_46": "unset", "UI_ENABLE_MLPF_FEATURE_47": "unset", "UI_ENABLE_MLPF_FEATURE_48": "unset", "UI_ENABLE_MLPF_FEATURE_49": "unset", "UI_ENABLE_MLPF_FEATURE_50": "unset", "UI_ENABLE_MODIFY_LISTING_AUTO_FULFILLMENT_REPLICATION_REFRESH_SCHEDULE": "unset", "UI_ENABLE_NATIVE_APPS_AUTOFULFILLMENT_IN_AWS": "unset", "UI_ENABLE_NATIVE_APPS_AUTOFULFILLMENT_IN_AZURE": "ENABLED", "UI_ENABLE_NATIVE_APPS_AUTOFULFILLMENT_IN_GCP": "unset", "UI_ENABLE_NATIVE_APPS_EVENT_SHARING": "unset", "UI_ENABLE_NATIVE_APPS_EXTERNAL_ACCESS": "unset", "UI_ENABLE_NATIVE_APPS_REQUEST_ACCESS": "unset", "UI_ENABLE_NAX_REINSTALL_TRANSFER_OWNERSHIP": false, "UI_ENABLE_NAX_UNINSTALL_TRANSFER_OWNERSHIP": true, "UI_ENABLE_NETWORK_RULES": "enabled", "UI_ENABLE_NETWORK_RULES_GA": "unset", "UI_ENABLE_NETWORK_RULE_MANAGEMENT_CRUD": "enabled", "UI_ENABLE_NEW_AUTOFULFILLMENT_CHECKS_IN_PROVIDER_STUDIO": "unset", "UI_ENABLE_NEW_STAGE_FILES_UPLOAD_EXPERIENCE": "unset", "UI_ENABLE_NON_SQL_WORKSHEETS_V1": "unset", "UI_ENABLE_NOTEBOOK": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_0": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_1": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_10": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_11": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_12": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_13": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_14": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_15": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_16": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_2": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_3": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_4": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_5": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_6": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_7": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_8": "unset", "UI_ENABLE_NOTEBOOK_FEATURE_9": "unset", "UI_ENABLE_NOTEBOOK_IMPORT_FROM_SNOWGIT": "unset", "UI_ENABLE_NPS": true, "UI_ENABLE_OE_MULTIPANE": true, "UI_ENABLE_OMIT_HOMEPAGE_CONSUMER_LISTING_LOAD": "unset", "UI_ENABLE_PAYMENT_METHOD_SELECTION": "unset", "UI_ENABLE_PROGRAMMATIC_LISTING_ACCESS": false, "UI_ENABLE_QUERY_RESULT_PAGINATION": "unset", "UI_ENABLE_REMAINING_TRIAL_USAGE_TILE": false, "UI_ENABLE_RICH_TEXT_LISTINGS_CONSUMER": "unset", "UI_ENABLE_RICH_TEXT_LISTINGS_PROVIDER": "unset", "UI_ENABLE_SECONDARY_ROLES_IN_PROVIDER_STUDIO": "enabled", "UI_ENABLE_SERVICE_NOW_CONNECTOR_ADDITIONAL_FEATURES": false, "UI_ENABLE_SESSION_INTEGRATION": true, "UI_ENABLE_SIDEBAR_WORKSHEET_NAV": true, "UI_ENABLE_SNOWSCOPE_FEATURE_01": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_02": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_03": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_04": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_05": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_06": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_07": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_08": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_09": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_10": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_11": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_12": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_13": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_14": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_15": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_16": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_17": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_18": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_19": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_20": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_21": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_22": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_23": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_24": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_25": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_26": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_27": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_28": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_29": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_30": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_31": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_32": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_33": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_34": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_35": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_36": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_37": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_38": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_39": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_40": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_41": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_42": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_43": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_44": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_45": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_46": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_47": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_48": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_49": "unset", "UI_ENABLE_SNOWSCOPE_FEATURE_50": "unset", "UI_ENABLE_SNOWSCOPE_M2": "unset", "UI_ENABLE_STAGE_FILES_EXPLORER": "unset", "UI_ENABLE_STAGE_FILES_UPLOAD_DOWNLOAD": "unset", "UI_ENABLE_STREAMLIT_IN_SNOWFLAKE": "enabled", "UI_ENABLE_STREAMLIT_TELEMETRY_METRIC": "enabled", "UI_ENABLE_STRIPE_ACCOUNT_CREATION_WITH_PDL_PRIV": "unset", "UI_ENABLE_SUPPORT": true, "UI_ENABLE_SUPPORT_FOR_TRIAL_ACCOUNTS": true, "UI_ENABLE_TASKS_SUSPEND_RESUME": "unset", "UI_ENABLE_TRIAL_HOME_PAGE": false, "UI_ENABLE_TRIAL_HOME_PAGE_V2": false, "UI_ENABLE_TRIAL_NEW_USER_BASIC_ONBOARDING": true, "UI_ENABLE_UI_PLATFORM_FEATURE_0": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_1": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_10": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_11": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_12": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_13": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_14": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_15": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_16": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_17": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_18": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_19": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_2": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_20": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_3": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_4": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_5": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_6": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_7": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_8": "unset", "UI_ENABLE_UI_PLATFORM_FEATURE_9": "unset", "UI_ENABLE_UNIFIED_MARKETPLACE_M1": "unset", "UI_ENABLE_UNIFIED_MARKETPLACE_M1_FILTER": "unset", "UI_ENABLE_UNIFIED_MARKETPLACE_M1_SEARCH_CARDS": "unset", "UI_ENABLE_UNIFIED_MARKETPLACE_M2": "unset", "UI_ENABLE_UNIFIED_MARKETPLACE_M3": "unset", "UI_ENABLE_USAGE_BASED_TRIAL_CONSUMER": "unset", "UI_ENABLE_USE_SECONDARY_ROLES_SWITCH": "unset", "UI_ENABLE_WAW_DEX_FEATURE_1": "unset", "UI_ENABLE_WAW_DEX_FEATURE_10": "unset", "UI_ENABLE_WAW_DEX_FEATURE_11": "unset", "UI_ENABLE_WAW_DEX_FEATURE_12": "unset", "UI_ENABLE_WAW_DEX_FEATURE_13": "unset", "UI_ENABLE_WAW_DEX_FEATURE_14": "unset", "UI_ENABLE_WAW_DEX_FEATURE_15": "unset", "UI_ENABLE_WAW_DEX_FEATURE_2": "unset", "UI_ENABLE_WAW_DEX_FEATURE_3": "unset", "UI_ENABLE_WAW_DEX_FEATURE_4": "unset", "UI_ENABLE_WAW_DEX_FEATURE_5": "unset", "UI_ENABLE_WAW_DEX_FEATURE_6": "unset", "UI_ENABLE_WAW_DEX_FEATURE_7": "unset", "UI_ENABLE_WAW_DEX_FEATURE_8": "unset", "UI_ENABLE_WAW_DEX_FEATURE_9": "unset", "UI_ENABLE_WORKSHEET_TUTORIAL_CARDS": false, "UI_FEATURE_APPS_CONSUMER_EXPERIENCE": "enabled", "UI_FEATURE_APPS_EXPERIENCE_DEV": "unset", "UI_FEATURE_APPS_MANAGEMENT_EXPERIENCE": "enabled", "UI_FEATURE_APPS_PACKAGE_MANAGEMENT_EXPERIENCE": "enabled", "UI_FEATURE_APPS_PROVIDER_EXPERIENCE": "enabled", "UI_FEATURE_AUTOMATED_MONETIZATION_ONBOARDING_ENABLED": false, "UI_FEATURE_CONSUMER_MONETIZATION_ENABLED": false, "UI_FEATURE_CONSUMER_MONETIZATION_ONBOARDING_ENABLED": false, "UI_FEATURE_CONSUMER_PROVIDER_UNIFIED_TERMS": "enabled", "UI_FEATURE_DATA_EXCHANGE_ENABLED": true, "UI_FEATURE_DATA_SHARING_ENABLED": true, "UI_FEATURE_ENTITY_KEY_IN_AGGREGATION_CONSTRAINTS": "unset", "UI_FEATURE_EVALUATION_LISTINGS_ENABLED": true, "UI_FEATURE_EVALUATION_LISTINGS_FAST_FOLLOW_ENABLED": true, "UI_FEATURE_PRIVACY_POLICIES_IN_DATA_CLEAN_ROOM": "unset", "UI_FEATURE_PRIVATE_DATA_EXCHANGE_ENABLED": true, "UI_FEATURE_PROVIDER_AUTOMATED_MONETIZATION_ONBOARDING_ENABLED": false, "UI_FEATURE_PROVIDER_MONETIZATION_ENABLED": false, "UI_FEATURE_PROVIDER_MONETIZATION_ONBOARDING_ENABLED": false, "UI_FEATURE_PROVIDER_MONETIZATION_PRICING_CHANGES_ENABLED": true, "UI_FEATURE_PROVIDER_STUDIO_CONVERSION_METRIC_ENABLED": "unset", "UI_FEATURE_PROVIDER_STUDIO_HOME_TRENDS_SECTION": "unset", "UI_FEATURE_PROVIDER_STUDIO_NEW_ANALYTICS_ENABLED": "unset", "UI_IMPORTED_DATABASE_TTL_MS": 0, "UI_LANDING_PAGE": "SNOWFLAKE_APP", "UI_LANDING_PAGE_OVERRIDE": "SNOWFLAKE_APP", "UI_LASIK_C4J1_BEHAVIOR_CHANGE_1": true, "UI_NEW_BILLING_ENABLED": true, "UI_SNOWSIGHT_BLOCK_UNSANITIZED_URLS": false, "UI_SNOWSIGHT_ENABLE_AUTO_INSIGHTS": "unset", "UI_SNOWSIGHT_ENABLE_GEOSPATIAL_VISUALIZATION": "unset", "UI_SNOWSIGHT_ENABLE_POST_API_SUPPORT": "unset", "UI_SNOWSIGHT_ENABLE_REGIONLESS_REDIRECT": true, "UI_SNOWSIGHT_ENABLE_SECONDARY_ROLE_SUPPORT": "enabled", "UI_SNOWSIGHT_ENABLE_USERNAME_ONLY_DISPLAY": "unset", "UI_USAGE_STORAGE_MAX_OBJECTS": 5000, "UI_USE_LAMBDA_ENDPOINTS_FOR_STRIPE": false, "UI_WORKSHEETS4_ENABLED": true, "USE_ORG_AND_ALIAS_FOR_DX": true, "VERSION_ACCOUNT_USAGE_COMPLETE_TASK_GRAPHS": 8, "VERSION_ACCOUNT_USAGE_TASK_HISTORY": 18, "WAREHOUSE_MAX_SIZE": "X6LARGE", "WWW_SNOWFLAKE_BASE_URL": "https://www.snowflake.com"}, "virtualFolderSorts": {}, "connections": {}, "numWorksheetsInClassicUI": 0, "defaultRole": "ACCOUNTADMIN", "defaultWarehouse": "COMPUTE_WH", "defaultDatabase": "", "defaultSchema": "", "defaultSecondaryRoles": "NONE", "customLandingPageUrl": "", "customLandingPageUrlFlushNextUiLoad": false, "acceptedTerms": {}, "pinnedItems": "", "streamlitSidebarCollapsed": false, "streamlitSidebarWidth": 332, "streamlitEditorCollapsed": false, "streamlitAppCollapsed": false, "streamlitAppWidthPercentage": 0.5, "worksheetsSidebarTab": "worksheets", "worksheetsSidebarCollapsed": false, "worksheetsTreeOpenPaths": {"\"4W6KRLKC\"": {}, "\"HF2dREvK\"": {}, "\"Zf2k4GLJ\"": {}}, "isNewUser": false, "openWorksheetPids": ["1nZ3VDPBUoI", "4SDSNSrjBbo", "OQAyRdfc1y"]}, "username": "BIBEKPDYL23", "availableRoles": ["ACCOUNTADMIN", "ORGADMIN", "PUBLIC", "SECURITYADMIN", "SYSADMIN", "USERADMIN"], "exchangeRoles": ["MARKETPLACE", "MARKETPLACE_PROVIDER"], "hasAdminRole": true, "hasAccountAdminRole": true, "gsCreatedOn": 1709348863883}}}, "next": ""}